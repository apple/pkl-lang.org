antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1",[0,51.77]],["name/1",[0,1.685]],["text/1",[1,8.94,2,8.94,3,8.94,4,5.11,5,8.144,6,8.144,7,7.619,8,6.654,9,6.236]],["component/1",[10,0.732]],["title/2",[11,41.14,12,46.235]],["name/2",[13,1.169]],["text/2",[4,3.257,14,4.857,15,4.241,16,2.527,17,3.899,18,4.601,19,2.964,20,3.087,21,4.607,22,4.607,23,4.857,24,3.273,25,2.808,26,3.765,27,3.007,28,3.674,29,3.378,30,3.202,31,2.527,32,3.515,33,3.444,34,3.257,35,3.316,36,4.857,37,5.843,38,3.202,39,4.857,40,5.191,41,4.407,42,3.975,43,4.099,44,3.864,45,4.857,46,4.857,47,4.241,48,4.607,49,4.241,50,3.1,51,3.519,52,3.592,53,2.958,54,3.864,55,4.568,56,2.923,57,2.773,58,2.738,59,2.398,60,3.727,61,3.864,62,2.738,63,3.444,64,2.705,65,4.654,66,3.316,67,5.699,68,3.15,69,3.765]],["component/2",[10,0.732]],["title/3",[34,32.69,70,52.097]],["name/3",[34,1.339]],["text/3",[34,5.393,71,5.82,72,6.398]],["component/3",[10,0.732]],["title/4",[18,25.92,52,36.045]],["name/4",[18,0.604,52,0.84]],["text/4",[62,4.492,73,4.335,74,5.542,75,5.167]],["component/4",[10,0.732]],["title/5",[18,32.618]],["name/5",[18,1.062]],["text/5",[18,4.817,19,4.776,50,4.994,51,4.115,76,6.404]],["component/5",[10,0.732]],["title/6",[77,40.439]],["name/6",[77,1.316]],["text/6",[8,6.484,50,4.739,78,7.935,79,4.895,80,8.711,81,8.711,82,6.076,83,5.755,84,6.738,85,6.738,86,4.979,87,5.49]],["component/6",[10,0.732]],["title/7",[50,31.112,51,25.635]],["name/7",[50,0.725,51,0.597]],["text/7",[17,2.82,18,2.944,20,3.062,31,3.802,50,5.223,51,4.303,60,3.084,86,3.713,87,4.094,88,3.48,89,4.405,90,3.85,91,5.917,92,4.188,93,3.65,94,5.687,95,5.917,96,6.496,97,5.536,98,3.286,99,5.917,100,2.88,101,3.534,102,2.82,103,3.85,104,4.673,105,3.78,106,5.251,107,3.59,108,3.65,109,5.536,110,4.007,111,5.917,112,4.094]],["component/7",[10,0.732]],["title/8",[55,41.875]],["name/8",[55,1.363]],["text/8",[27,4.718,56,4.585,57,4.35,58,4.296,113,6.431,114,5.765,115,4.718,116,6.062,117,5.515]],["component/8",[10,0.732]],["title/9-1",[20,11.289,118,23.999,119,20.978,120,18.152,121,19.561]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[18,16.04,20,11.289,53,13.332,54,23.999,118,23.999]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[18,18.374,20,12.932,118,27.492,120,20.794]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9",[122,55.663]],["name/9",[122,1.812]],["text/9",[0,1.319,4,1.048,9,1.279,10,0.722,11,1.319,18,4.026,20,3.033,24,4.289,25,0.903,27,4.192,28,1.182,29,1.898,30,3.58,34,1.83,35,1.067,37,2.383,38,2.869,41,1.418,42,1.279,43,1.319,46,1.562,50,1.741,51,1.91,53,3.272,54,2.89,55,2.971,57,0.892,58,0.881,59,2.331,63,1.935,64,1.52,70,1.67,71,1.131,72,1.243,82,4.444,89,1.249,93,3.257,94,0.982,98,1.62,105,1.067,107,2.355,112,1.155,114,1.182,119,3.027,120,2.619,121,2.355,122,1.418,123,3.15,124,1.482,125,0.94,126,5.28,127,3.201,128,1.562,129,3.445,130,4.94,131,5.107,132,3.95,133,3.801,134,4.444,135,3.931,136,3.296,137,1.935,138,2.588,139,1.319,140,2.303,141,2.588,142,1.67,143,1.67,144,2.869,145,3.086,146,2.575,147,1.562,148,0.822,149,0.997,150,2.728,151,1.048,152,4.529,153,1.482,154,2.89,155,3.172,156,1.67,157,4.688,158,3.201,159,3.882,160,1.538,161,1.833,162,2.588,163,2.728,164,1.741,165,1.67,166,1.108,167,1.108,168,1.482,169,1.131,170,1.467,171,1.67,172,3.632,173,2.383,174,2.972,175,3.95,176,1.182,177,1.087,178,1.833,179,3.632,180,1.013,181,1.211,182,1.833,183,1.211,184,1.833,185,1.562,186,1.833,187,1.715,188,1.833,189,2.728,190,1.418,191,1.833,192,2.628,193,2.972,194,2.476,195,2.916,196,2.476,197,1.482,198,2.728,199,2.383,200,1.155,201,1.211,202,1.279,203,1.67,204,1.67,205,2.916,206,1.562,207,3.201,208,1.482,209,3.201,210,2.916,211,2.916,212,1.833,213,1.833,214,1.67,215,1.67,216,1.562,217,1.562,218,1.279,219,1.562,220,0.982,221,1.243,222,2.588,223,2.728,224,1.833,225,1.562,226,2.748,227,1.67,228,1.67,229,1.833,230,2.916,231,1.833,232,1.364,233,1.833,234,1.67,235,1.155,236,1.482,237,1.833,238,1.833,239,1.833,240,1.67,241,1.319,242,1.833,243,1.279,244,1.833,245,1.833,246,1.833,247,1.482,248,1.364,249,1.562,250,1.562,251,3.445,252,1.562,253,1.131,254,0.679,255,1.562,256,1.482,257,1.833,258,1.182,259,1.67,260,1.155,261,1.562,262,1.562,263,1.375,264,2.588,265,1.182,266,1.833,267,1.182,268,1.833,269,2.171,270,1.833,271,1.935,272,1.087,273,1.833,274,1.562,275,1.833,276,1.067,277,1.562,278,1.562,279,1.279,280,1.67,281,1.319,282,1.482,283,1.833,284,1.833,285,1.833,286,1.418,287,1.562,288,1.482,289,1.67,290,1.67,291,1.67,292,1.67]],["component/9",[10,0.732]],["title/10",[293,50.199]],["name/10",[293,1.634]],["text/10",[12,3.618,16,1.984,18,2.028,20,3.347,23,3.814,24,3.274,25,2.205,31,3.482,32,4.075,33,3.993,34,2.558,35,3.844,51,2.961,53,3.953,55,2.604,56,3.389,57,3.215,58,3.175,59,2.957,64,3.136,73,4.766,74,5.483,86,2.558,89,2.578,92,2.886,93,3.712,102,3.764,113,4.753,119,2.653,120,3.389,144,4.413,170,3.028,176,2.886,177,2.653,192,4.845,218,3.122,226,2.886,253,4.075,254,1.657,258,2.886,260,2.821,261,3.814,263,2.838,293,5.478,294,3.618,295,4.475,296,4.077,297,3.122,298,3.122,299,3.618,300,4.365,301,2.515,302,3.219,303,3.122,304,5.11,305,3.122,306,2.821,307,2.604,308,3.461,309,4.475,310,2.957]],["component/10",[10,0.732]],["title/11-1",[154,48.803]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11-2",[263,30.919]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["title/11-3",[311,55.663]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["title/11-4",[312,71.969]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["title/11-5",[313,46.406]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["title/11-6",[198,61.335]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["title/11-7",[314,55.663]],["name/11-7",[]],["text/11-7",[]],["component/11-7",[]],["title/11-8",[157,46.406]],["name/11-8",[]],["text/11-8",[]],["component/11-8",[]],["title/11-9",[29,42.659]],["name/11-9",[]],["text/11-9",[]],["component/11-9",[]],["title/11-10",[315,65.558]],["name/11-10",[]],["text/11-10",[]],["component/11-10",[]],["title/11",[316,55.663]],["name/11",[316,1.812]],["text/11",[0,1.493,9,1.448,11,2.564,17,2.413,18,1.615,20,3.054,24,4.194,25,1.756,27,2.933,28,5.2,29,2.777,30,1.166,31,1.58,41,1.605,43,3.37,44,1.407,47,1.545,49,1.545,53,2.094,55,1.207,59,2.556,60,2.224,64,0.985,68,1.147,73,2.172,77,1.166,79,2.632,88,1.112,89,3.011,93,1.166,94,2.509,98,1.803,100,2.464,102,0.901,104,1.493,107,1.147,108,2.003,112,2.246,114,1.338,119,2.113,121,1.97,123,1.28,125,1.064,128,1.769,130,3.038,134,2.486,135,1.407,136,1.605,139,2.564,144,1.166,145,3.359,147,1.769,148,0.93,149,1.129,150,1.769,151,2.037,154,1.407,155,3.487,156,1.89,157,3.584,159,1.89,160,0.997,167,1.254,168,1.678,169,1.28,170,1.634,172,1.769,174,1.448,176,1.338,177,2.113,181,1.371,185,1.769,187,1.112,197,1.678,198,1.769,199,2.653,201,1.371,204,1.89,205,3.247,217,1.769,218,1.448,219,1.769,220,2.509,222,1.678,223,1.769,225,1.769,226,3.021,236,1.678,240,1.89,241,1.493,247,1.678,253,1.28,254,1.32,258,1.338,263,2.935,269,1.407,271,3.359,276,1.207,280,1.89,288,1.678,296,1.89,298,1.448,302,2.564,303,2.486,305,1.448,311,2.757,313,3.021,314,1.605,315,3.247,316,1.605,317,1.493,318,1.23,319,3.247,320,1.89,321,2.075,322,1.769,323,4.137,324,1.605,325,1.545,326,2.486,327,2.653,328,2.246,329,1.605,330,1.308,331,1.308,332,3.359,333,1.89,334,1.308,335,1.89,336,1.605,337,1.89,338,4.267,339,5.059,340,2.075,341,2.075,342,2.417,343,2.246,344,3.038,345,3.247,346,3.564,347,3.247,348,1.448,349,2.564,350,1.407,351,3.024,352,1.545,353,2.564,354,4.267,355,1.769,356,2.075,357,2.564,358,1.769,359,2.199,360,1.545,361,1.89,362,1.678,363,2.075,364,1.89,365,2.075,366,1.769,367,2.075,368,2.075,369,3.564,370,1.678,371,1.493,372,2.075,373,1.493,374,2.075,375,1.769,376,2.075,377,2.075,378,1.89,379,1.23,380,1.605,381,1.605,382,1.89,383,1.112,384,1.147,385,2.075,386,1.308,387,1.89,388,1.545,389,2.075,390,1.89,391,1.448,392,1.186,393,1.407,394,1.308,395,1.769,396,2.075,397,3.038,398,3.038,399,1.371,400,1.605,401,1.308,402,2.486,403,2.075,404,2.075,405,1.545,406,1.678,407,1.678,408,1.678,409,1.545,410,2.075,411,2.075,412,2.075,413,2.075,414,2.075,415,2.075,416,2.075,417,2.075,418,2.075,419,3.564,420,1.448,421,1.28,422,1.207,423,1.605,424,1.605,425,2.075,426,2.075,427,1.89,428,1.769,429,2.075,430,1.89,431,1.207]],["component/11",[10,0.732]],["title/12",[48,58.181]],["name/12",[13,1.169]],["text/12",[4,3.643,17,3.676,18,4.311,20,3.034,21,5.153,22,5.153,24,4.398,26,4.211,30,3.582,31,3.755,32,3.932,33,3.852,35,3.709,38,3.582,39,5.432,40,5.806,41,4.93,42,4.446,43,4.585,44,4.322,45,5.432,47,4.744,51,2.857,53,2.401,54,5.743,55,4.928,58,3.063,59,1.947,119,3.778,121,3.523,122,4.93,187,3.415,278,5.432,293,4.446,316,4.93,431,3.709,432,5.806,433,6.374,434,5.806,435,5.153,436,6.374,437,6.374,438,4.322]],["component/12",[10,0.732]],["title/13",[31,25.358,431,33.276]],["name/13",[31,0.591,431,0.775]],["text/13",[11,2.75,12,3.09,17,2.547,18,4.303,20,3.205,24,4.468,27,3.096,29,2.266,30,2.148,31,3.166,36,3.258,51,3.201,53,3.017,55,3.414,62,2.819,73,2.72,74,3.478,75,3.947,93,2.148,98,1.934,100,1.695,104,2.75,108,2.148,119,3.478,120,4.108,121,3.243,125,1.961,130,3.258,134,4.98,135,3.979,136,2.956,139,4.22,145,2.31,148,1.713,152,2.525,154,2.592,157,2.465,160,1.837,192,5.33,194,2.956,195,3.482,199,2.845,220,2.048,247,3.09,251,3.09,252,3.258,253,3.619,264,3.09,271,3.546,274,3.258,286,2.956,288,3.09,289,3.482,302,4.22,303,2.666,308,2.956,313,2.465,314,2.956,323,2.845,349,2.75,371,2.75,378,3.482,387,3.482,395,5,398,5,401,2.409,409,2.845,439,3.482,440,2.224,441,5.867,442,3.258,443,2.956,444,3.822,445,3.482,446,2.525,447,2.845,448,3.822,449,3.258,450,2.266,451,2.75,452,3.482,453,3.258,454,3.822,455,3.822,456,3.482,457,3.822,458,3.822,459,3.822,460,2.956,461,3.822,462,2.409,463,3.822,464,2.845,465,3.822,466,3.822,467,3.822,468,2.465,469,2.845,470,2.31,471,3.09,472,3.482,473,3.822]],["component/13",[10,0.732]],["title/14-1",[16,31.91]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[57,27.826,58,27.482]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[51,25.635,73,26.516]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14-4",[57,35.015]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["title/14-5",[307,41.875]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["title/14-6",[56,36.913]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["title/14-7",[474,39.778]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["title/14-8",[57,27.826,58,27.482]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["title/14-9",[51,25.635,73,26.516]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["title/14-10",[56,36.913]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["title/14-11",[475,33.759]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["title/14-12",[60,27.149,63,34.565]],["name/14-12",[]],["text/14-12",[]],["component/14-12",[]],["title/14",[53,17.874,59,14.494,73,21.999]],["name/14",[476,1.548]],["text/14",[10,0.546,16,1.107,17,2.538,19,0.721,20,2.117,24,1.738,25,0.683,31,2.943,32,0.855,33,0.837,35,0.806,38,0.779,50,0.754,51,3.256,53,3.382,55,0.806,56,3.405,57,2.342,58,2.003,59,2.441,60,3.575,61,0.94,62,0.666,63,0.837,64,2.775,66,0.806,71,1.54,72,1.693,73,3.961,77,3.015,79,0.779,83,0.915,86,2.383,87,0.873,88,4.387,89,3.196,90,1.48,93,0.779,100,2.134,101,1.358,102,2.882,105,0.806,107,1.884,108,5.044,110,1.54,112,0.873,119,0.821,120,0.711,121,0.766,125,1.281,128,1.181,132,1.072,137,2.909,144,1.915,148,2.621,149,1.358,151,1.948,152,2.252,160,1.2,166,0.837,169,0.855,170,0.635,177,0.821,180,1.38,200,2.148,201,1.65,220,0.742,221,0.94,226,0.893,243,0.967,248,1.031,254,0.925,263,1.464,265,0.893,267,2.198,271,1.509,272,1.48,281,0.997,293,0.967,300,1.65,303,0.967,305,2.377,307,1.983,311,1.072,318,0.821,330,1.574,331,2.628,332,0.837,334,0.873,342,0.94,343,2.148,350,1.693,359,0.855,380,1.072,383,2.233,384,0.766,386,2.148,391,0.967,392,1.427,394,0.873,395,1.181,399,0.915,402,0.967,422,0.806,438,0.94,440,0.806,446,0.915,450,0.821,451,0.997,460,1.072,464,1.031,468,2.198,475,2.258,476,3.18,477,0.967,478,1.931,479,1.638,480,1.262,481,1.072,482,1.181,483,1.262,484,1.386,485,1.386,486,1.262,487,2.019,488,0.94,489,0.967,490,0.873,491,1.453,492,1.799,493,0.94,494,1.386,495,1.386,496,1.742,497,0.997,498,0.94,499,0.94,500,0.94,501,2.636,502,2.198,503,1.072,504,1.54,505,2.999,506,0.967,507,1.181,508,1.072,509,1.181,510,1.65,511,1.181,512,0.873,513,0.997,514,1.386,515,1.386,516,1.12,517,2.636,518,0.766,519,1.386,520,1.12,521,1.181,522,1.386,523,3.104,524,3.041,525,3.015,526,3.743,527,4.501,528,2.128,529,4.151,530,2.636,531,1.181,532,1.859,533,1.859,534,2.019,535,1.262,536,2.801,537,1.181,538,2.019,539,2.275,540,1.031,541,0.997,542,1.61,543,1.262,544,1.386,545,1.386,546,1.386,547,1.65,548,0.997,549,1.742,550,0.997,551,0.915,552,0.997,553,3.37,554,0.893,555,4.13,556,1.12,557,1.859,558,3.546,559,1.742,560,0.915,561,2.52,562,1.859,563,0.94,564,1.072,565,1.072,566,1.031,567,1.031,568,1.403,569,1.12,570,1.031,571,2.827,572,1.072,573,1.12,574,1.072,575,1.281,576,1.031,577,1.072,578,1.031,579,0.967,580,1.12,581,2.452,582,0.967,583,1.12,584,1.072,585,2.019,586,1.12,587,1.931,588,0.967,589,1.12,590,1.031,591,1.859,592,0.967,593,0.997,594,1.12,595,1.12,596,1.031,597,3.723,598,1.12,599,1.072,600,2.311,601,1.12,602,0.997,603,1.742,604,1.072,605,0.893,606,0.997,607,1.12,608,0.997,609,1.072,610,1.796,611,1.072,612,0.893,613,1.031,614,1.031,615,1.031,616,1.031,617,1.12,618,0.967,619,0.94,620,3.224,621,4.522,622,1.12,623,1.12,624,1.031,625,1.031,626,0.873,627,1.12,628,1.12,629,1.031]],["component/14",[10,0.732]],["title/15",[34,32.69,73,26.516]],["name/15",[13,1.169]],["text/15",[20,3.427,25,4.929,26,5.475,34,5.718,38,4.657,53,3.122,59,2.531,64,3.934,73,4.638,110,5.112,148,3.715,253,5.112,630,5.961]],["component/15",[10,0.732]],["title/16-1",[16,31.91]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[57,35.015]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[307,41.875]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[474,39.778]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16-5",[24,23.84,303,39.892]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["title/16-6",[170,26.213,301,32.135]],["name/16-6",[]],["text/16-6",[]],["component/16-6",[]],["title/16-7",[351,31.112,631,46.235]],["name/16-7",[]],["text/16-7",[]],["component/16-7",[]],["title/16-8",[373,41.14,386,36.045]],["name/16-8",[]],["text/16-8",[]],["component/16-8",[]],["title/16",[20,12.932,51,18.172,73,18.797,120,20.794]],["name/16",[20,0.297,73,0.431,120,0.477]],["text/16",[4,3.283,10,0.607,17,3.528,19,0.802,20,3.067,24,2.596,25,1.355,27,0.814,30,0.867,31,2.002,35,1.599,51,2.575,53,1.036,57,0.751,59,1.379,60,2.957,61,1.046,62,0.741,63,0.932,64,3.156,66,1.599,68,0.853,69,1.019,73,4.359,77,0.867,83,1.019,84,1.193,85,1.193,86,0.882,88,1.473,89,1.451,90,1.629,92,0.995,98,1.391,100,2.002,101,2.023,102,1.193,105,0.898,106,1.247,107,2.495,119,0.914,120,4.626,125,0.791,137,0.932,144,0.867,146,1.661,148,0.691,149,1.495,151,2.58,152,1.816,160,2.489,170,3.822,174,1.076,177,2.204,180,1.519,183,1.019,192,0.952,218,1.076,220,1.473,221,1.046,243,1.076,253,1.696,254,3.16,255,2.343,256,2.222,260,2.845,263,3.391,267,0.995,276,0.898,300,1.019,301,2.089,302,1.11,303,1.917,304,1.193,305,3.613,306,0.972,307,1.599,317,1.11,325,1.148,328,0.972,332,0.932,342,4.509,348,1.076,351,3.995,353,3.247,379,1.629,380,1.193,383,1.992,392,0.882,401,1.733,402,1.917,421,0.952,424,2.126,446,2.457,450,0.914,462,0.972,469,2.768,470,0.932,478,2.126,479,2.169,481,2.126,482,1.315,488,1.046,489,1.076,490,1.733,491,1.599,492,1.962,493,1.046,496,1.917,497,1.11,498,1.864,499,1.046,500,1.046,505,1.977,510,1.019,517,1.193,529,1.193,536,2.164,540,4.636,541,4.48,551,1.019,560,1.019,561,0.932,563,1.046,571,2.522,575,1.41,577,1.193,579,3.149,600,1.864,603,1.076,606,1.11,624,1.148,626,0.972,629,1.148,631,7.171,632,1.543,633,1.148,634,1.543,635,2.222,636,2.749,637,2.504,638,1.917,639,4.112,640,1.315,641,2.749,642,0.972,643,3.169,644,1.977,645,1.405,646,1.543,647,2.749,648,1.977,649,1.543,650,1.816,651,1.543,652,1.473,653,1.543,654,3.726,655,3.006,656,2.457,657,2.675,658,1.148,659,1.519,660,1.405,661,1.661,662,1.543,663,1.773,664,1.543,665,2.504,666,1.543,667,1.543,668,2.594,669,1.864,670,1.148,671,1.11,672,1.405,673,1.315,674,1.076,675,2.343,676,2.749,677,1.019,678,1.247,679,1.405,680,1.543,681,2.504,682,1.11,683,1.733,684,1.315,685,1.315,686,1.543,687,6.229,688,1.405,689,1.148,690,1.543,691,3.006,692,1.543,693,1.917,694,0.77,695,1.046,696,1.193,697,1.405,698,1.543,699,1.543,700,1.543,701,1.315,702,1.315,703,1.543,704,1.148,705,1.405,706,2.749,707,1.193,708,1.543,709,1.247,710,1.405,711,1.405,712,1.193,713,1.405,714,1.543,715,1.543,716,1.405,717,1.543,718,1.193,719,1.247,720,2.749,721,1.405,722,1.247,723,1.148,724,1.543,725,1.543,726,1.543,727,1.543,728,1.543,729,1.543,730,1.405,731,1.11,732,1.405,733,1.543,734,1.543,735,1.247,736,1.046,737,1.543,738,1.046]],["component/16",[10,0.732]],["title/17-1",[16,31.91]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[57,27.826,58,27.482]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17-3",[51,25.635,73,26.516]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["title/17-4",[57,35.015]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["title/17-5",[307,41.875]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["title/17-6",[56,36.913]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["title/17-7",[474,39.778]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["title/17-8",[57,27.826,58,27.482]],["name/17-8",[]],["text/17-8",[]],["component/17-8",[]],["title/17-9",[51,25.635,73,26.516]],["name/17-9",[]],["text/17-9",[]],["component/17-9",[]],["title/17-10",[56,36.913]],["name/17-10",[]],["text/17-10",[]],["component/17-10",[]],["title/17-11",[475,33.759]],["name/17-11",[]],["text/17-11",[]],["component/17-11",[]],["title/17-12",[60,27.149,63,34.565]],["name/17-12",[]],["text/17-12",[]],["component/17-12",[]],["title/17",[53,17.874,59,14.494,74,28.125]],["name/17",[476,1.548]],["text/17",[10,0.601,16,1.208,17,2.687,19,0.794,20,2.331,24,1.867,25,1.342,31,2.745,32,0.942,33,0.923,35,0.888,38,0.858,50,0.83,51,3.406,53,3.202,55,0.888,56,3.581,57,2.502,58,2.153,59,2.472,60,3.73,61,1.035,62,0.733,63,0.923,64,2.939,66,0.888,71,1.68,72,1.847,73,2.384,74,4.331,77,3.206,79,0.858,83,1.008,86,2.561,87,0.962,88,4.335,89,3.317,90,1.614,92,0.984,93,0.858,98,0.772,100,2.28,101,0.83,102,2.477,105,0.888,107,2.038,108,4.875,110,1.68,112,0.962,119,0.905,120,0.783,121,0.844,125,1.397,132,1.181,137,3.108,144,2.517,148,2.775,149,1.481,151,2.107,152,2.436,160,1.309,166,0.923,169,0.942,170,1.248,177,1.614,180,1.505,200,2.324,201,1.799,220,0.818,221,1.035,243,1.065,248,1.136,254,0.565,263,1.584,265,0.984,267,0.984,271,0.923,272,1.614,281,1.098,300,1.799,301,0.858,302,1.098,303,1.065,307,2.145,318,0.905,330,1.716,331,2.823,332,0.923,342,1.035,343,2.324,359,0.942,380,1.181,383,2.4,384,0.844,386,2.324,391,1.065,392,0.872,399,1.008,402,1.065,440,0.888,450,0.905,460,1.181,464,1.136,468,2.377,475,2.413,476,3.398,478,1.181,479,0.733,481,1.181,482,1.301,487,2.202,488,1.035,490,1.716,491,1.585,492,1.946,493,1.035,496,1.9,497,1.098,498,1.847,499,1.035,500,1.035,501,2.852,502,2.377,503,1.181,504,1.68,505,3.222,506,1.065,507,1.301,508,1.181,509,1.301,510,1.799,511,1.301,512,0.962,513,1.098,516,1.234,518,0.844,520,1.234,521,1.301,523,3.316,524,3.22,525,3.206,526,3.98,527,4.734,529,2.852,530,2.106,547,1.799,548,1.098,549,1.9,550,1.098,551,1.008,552,1.098,553,3.621,554,0.984,555,4.331,556,1.234,557,2.027,558,3.77,559,1.9,560,1.008,561,2.707,562,2.027,563,1.035,564,1.181,565,1.181,566,1.136,567,1.136,568,1.53,569,1.234,570,1.136,571,3.038,572,1.181,573,1.234,574,1.181,575,1.397,576,1.136,577,1.181,578,1.136,579,1.065,580,1.234,581,2.652,582,1.065,583,1.234,584,1.181,585,2.202,586,1.234,587,2.106,588,1.065,589,1.234,590,1.136,591,2.027,592,1.065,593,1.098,594,1.234,595,1.234,596,1.136,597,3.978,598,1.234,599,1.181,600,2.5,601,1.234,602,1.098,603,1.9,604,1.181,605,0.984,606,1.098,607,1.234,608,1.098,609,1.181,610,1.959,611,1.181,612,0.984,613,1.136,614,1.136,615,1.136,616,1.136,617,1.234,618,1.065,619,1.035,620,3.465,621,4.788,622,1.234,623,1.234,624,1.136,625,1.136,626,0.962,627,1.234,628,1.234,629,1.136,633,1.136,718,1.181,739,1.098,740,1.39,741,1.39,742,1.526,743,1.526,744,3.687,745,1.39,746,1.526,747,1.526]],["component/17",[10,0.732]],["title/18",[34,32.69,74,33.9]],["name/18",[13,1.169]],["text/18",[20,3.427,25,4.929,26,5.475,34,5.718,53,3.122,59,3.056,64,3.934,74,5.929,110,5.112,192,5.112,253,5.112,630,5.961]],["component/18",[10,0.732]],["title/19-1",[16,31.91]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[57,35.015]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[307,41.875]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[474,39.778]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19-5",[373,41.14,386,36.045]],["name/19-5",[]],["text/19-5",[]],["component/19-5",[]],["title/19",[20,12.932,51,18.172,74,24.031,120,20.794]],["name/19",[20,0.297,74,0.552,120,0.477]],["text/19",[10,1.123,17,4.676,19,1.483,20,2.388,25,1.405,28,2.999,30,1.602,31,3.32,51,3.6,57,1.387,59,0.871,60,2.797,61,1.934,62,1.37,63,1.723,64,2.797,73,3.472,74,5.919,83,1.884,84,2.205,85,2.205,90,2.757,100,1.264,101,3.205,102,2.019,105,1.659,107,2.571,110,2.869,120,4.687,160,2.235,170,1.307,180,3.256,187,1.527,217,2.43,221,3.154,226,1.839,254,2.773,260,1.797,263,2.92,267,1.839,306,1.797,307,2.706,328,1.797,334,3.713,342,5.078,351,1.551,352,2.122,353,2.051,379,2.757,383,1.527,392,1.63,440,1.659,446,1.884,479,2.235,488,1.934,489,1.989,490,2.932,491,2.706,492,3.587,493,1.934,496,3.245,497,2.051,498,3.154,499,1.934,500,1.934,506,1.989,517,2.205,530,2.205,536,1.659,540,2.122,541,2.051,542,3.799,605,1.839,619,1.934,629,2.122,631,3.76,633,2.122,639,2.597,648,2.051,652,3.641,654,3.346,655,4.763,656,3.892,657,2.051,658,2.122,659,3.256,660,2.597,661,2.811,663,2.999,665,2.597,668,3.245,669,1.934,670,2.122,671,2.051,673,2.43,677,1.884,679,2.597,681,2.597,683,1.797,694,2.322,738,1.934,741,2.597,748,1.797,749,2.869,750,2.851,751,2.122,752,8.047,753,4.652,754,4.652,755,2.851,756,2.851,757,2.851,758,2.43,759,2.851,760,4.652,761,2.851,762,2.205,763,1.839,764,2.597,765,2.122,766,2.597,767,5.891,768,2.851,769,2.851,770,2.851,771,3.598,772,2.851,773,2.851]],["component/19",[10,0.732]],["title/20-1",[166,43.496]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[693,50.199]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[774,61.335]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[775,55.663]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20-5",[776,51.77]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["title/20-6",[694,35.928]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["title/20-7",[694,28.551,777,46.235]],["name/20-7",[]],["text/20-7",[]],["component/20-7",[]],["title/20-8",[694,28.551,778,42.567]],["name/20-8",[]],["text/20-8",[]],["component/20-8",[]],["title/20-9",[276,27.608,694,23.687,779,36.698]],["name/20-9",[]],["text/20-9",[]],["component/20-9",[]],["title/20-10",[86,32.69,694,28.551]],["name/20-10",[]],["text/20-10",[]],["component/20-10",[]],["title/20-11",[612,46.406]],["name/20-11",[]],["text/20-11",[]],["component/20-11",[]],["title/20-12",[28,36.877,324,44.233]],["name/20-12",[]],["text/20-12",[]],["component/20-12",[]],["title/20-13",[170,32.987]],["name/20-13",[]],["text/20-13",[]],["component/20-13",[]],["title/20-14",[98,28.935,170,26.213]],["name/20-14",[]],["text/20-14",[]],["component/20-14",[]],["title/20-15",[170,26.213,780,28.551]],["name/20-15",[]],["text/20-15",[]],["component/20-15",[]],["title/20-16",[52,36.045,781,42.567]],["name/20-16",[]],["text/20-16",[]],["component/20-16",[]],["title/20-17",[170,26.213,782,46.235]],["name/20-17",[]],["text/20-17",[]],["component/20-17",[]],["title/20-18",[170,26.213,254,21.179]],["name/20-18",[]],["text/20-18",[]],["component/20-18",[]],["title/20-19",[100,25.358,783,48.741]],["name/20-19",[]],["text/20-19",[]],["component/20-19",[]],["title/20-20",[100,25.358,784,46.235]],["name/20-20",[]],["text/20-20",[]],["component/20-20",[]],["title/20-21",[100,25.358,167,34.565]],["name/20-21",[]],["text/20-21",[]],["component/20-21",[]],["title/20-22",[100,25.358,785,46.235]],["name/20-22",[]],["text/20-22",[]],["component/20-22",[]],["title/20-23",[100,25.358,786,46.235]],["name/20-23",[]],["text/20-23",[]],["component/20-23",[]],["title/20-24",[125,36.913]],["name/20-24",[]],["text/20-24",[]],["component/20-24",[]],["title/20-25",[98,28.935,125,29.334]],["name/20-25",[]],["text/20-25",[]],["component/20-25",[]],["title/20-26",[125,29.334,780,28.551]],["name/20-26",[]],["text/20-26",[]],["component/20-26",[]],["title/20-27",[52,36.045,781,42.567]],["name/20-27",[]],["text/20-27",[]],["component/20-27",[]],["title/20-28",[125,29.334,782,46.235]],["name/20-28",[]],["text/20-28",[]],["component/20-28",[]],["title/20-29",[108,32.135,326,39.892]],["name/20-29",[]],["text/20-29",[]],["component/20-29",[]],["title/20-30",[254,21.179,536,33.276]],["name/20-30",[]],["text/20-30",[]],["component/20-30",[]],["title/20-31",[326,39.892,787,46.235]],["name/20-31",[]],["text/20-31",[]],["component/20-31",[]],["title/20-32",[301,40.439]],["name/20-32",[]],["text/20-32",[]],["component/20-32",[]],["title/20-33",[98,28.935,301,32.135]],["name/20-33",[]],["text/20-33",[]],["component/20-33",[]],["title/20-34",[301,32.135,780,28.551]],["name/20-34",[]],["text/20-34",[]],["component/20-34",[]],["title/20-35",[52,36.045,781,42.567]],["name/20-35",[]],["text/20-35",[]],["component/20-35",[]],["title/20-36",[301,32.135,782,46.235]],["name/20-36",[]],["text/20-36",[]],["component/20-36",[]],["title/20-37",[108,32.135,351,31.112]],["name/20-37",[]],["text/20-37",[]],["component/20-37",[]],["title/20-38",[254,21.179,536,33.276]],["name/20-38",[]],["text/20-38",[]],["component/20-38",[]],["title/20-39",[102,31.241]],["name/20-39",[]],["text/20-39",[]],["component/20-39",[]],["title/20-40",[102,24.826,788,46.235]],["name/20-40",[]],["text/20-40",[]],["component/20-40",[]],["title/20-41",[101,39.15]],["name/20-41",[]],["text/20-41",[]],["component/20-41",[]],["title/20-42",[89,28.087]],["name/20-42",[]],["text/20-42",[]],["component/20-42",[]],["title/20-43",[48,58.181]],["name/20-43",[]],["text/20-43",[]],["component/20-43",[]],["title/20-44",[89,22.32,479,27.482]],["name/20-44",[]],["text/20-44",[]],["component/20-44",[]],["title/20-45",[89,22.32,524,29.749]],["name/20-45",[]],["text/20-45",[]],["component/20-45",[]],["title/20-46",[148,25.635,524,29.749]],["name/20-46",[]],["text/20-46",[]],["component/20-46",[]],["title/20-47",[524,29.749,789,52.097]],["name/20-47",[]],["text/20-47",[]],["component/20-47",[]],["title/20-48",[89,18.517,524,24.682,555,28.125]],["name/20-48",[]],["text/20-48",[]],["component/20-48",[]],["title/20-49",[524,24.682,575,24.337,790,38.359]],["name/20-49",[]],["text/20-49",[]],["component/20-49",[]],["title/20-50",[50,25.812,51,21.268,524,24.682]],["name/20-50",[]],["text/20-50",[]],["component/20-50",[]],["title/20-51",[523,36.877,524,29.749]],["name/20-51",[]],["text/20-51",[]],["component/20-51",[]],["title/20-52",[492,25.041,524,24.682,765,35.316]],["name/20-52",[]],["text/20-52",[]],["component/20-52",[]],["title/20-53",[132,44.233,749,35.278]],["name/20-53",[]],["text/20-53",[]],["component/20-53",[]],["title/20-54",[263,30.919]],["name/20-54",[]],["text/20-54",[]],["component/20-54",[]],["title/20-55",[89,15.822,524,21.089,791,34.552,792,34.552]],["name/20-55",[]],["text/20-55",[]],["component/20-55",[]],["title/20-56",[89,22.32,780,28.551]],["name/20-56",[]],["text/20-56",[]],["component/20-56",[]],["title/20-57",[89,22.32,748,36.045]],["name/20-57",[]],["text/20-57",[]],["component/20-57",[]],["title/20-58",[89,22.32,94,30.637]],["name/20-58",[]],["text/20-58",[]],["component/20-58",[]],["title/20-59",[94,30.637,793,39.892]],["name/20-59",[]],["text/20-59",[]],["component/20-59",[]],["title/20-60",[94,36.941,187,25.418]],["name/20-60",[]],["text/20-60",[]],["component/20-60",[]],["title/20-61",[94,30.637,794,46.235]],["name/20-61",[]],["text/20-61",[]],["component/20-61",[]],["title/20-62",[388,42.567,568,32.135]],["name/20-62",[]],["text/20-62",[]],["component/20-62",[]],["title/20-63",[89,22.32,384,31.61]],["name/20-63",[]],["text/20-63",[]],["component/20-63",[]],["title/20-64",[56,36.913]],["name/20-64",[]],["text/20-64",[]],["component/20-64",[]],["title/20-65",[18,32.618]],["name/20-65",[]],["text/20-65",[]],["component/20-65",[]],["title/20-66",[148,21.268,149,25.812,384,26.225]],["name/20-66",[]],["text/20-66",[]],["component/20-66",[]],["title/20-67",[89,18.517,384,26.225,795,43.222]],["name/20-67",[]],["text/20-67",[]],["component/20-67",[]],["title/20-68",[351,31.112,542,36.877]],["name/20-68",[]],["text/20-68",[]],["component/20-68",[]],["title/20-69",[350,32.176,542,30.595,796,35.316]],["name/20-69",[]],["text/20-69",[]],["component/20-69",[]],["title/20-70",[542,36.877,797,52.097]],["name/20-70",[]],["text/20-70",[]],["component/20-70",[]],["title/20-71",[542,36.877,798,52.097]],["name/20-71",[]],["text/20-71",[]],["component/20-71",[]],["title/20-72",[101,31.112,799,52.097]],["name/20-72",[]],["text/20-72",[]],["component/20-72",[]],["title/20-73",[254,17.571,800,40.438,801,43.222]],["name/20-73",[]],["text/20-73",[]],["component/20-73",[]],["title/20-74",[187,38.553]],["name/20-74",[]],["text/20-74",[]],["component/20-74",[]],["title/20-75",[77,40.439]],["name/20-75",[]],["text/20-75",[]],["component/20-75",[]],["title/20-76",[144,32.135,771,44.233]],["name/20-76",[]],["text/20-76",[]],["component/20-76",[]],["title/20-77",[144,32.135,794,46.235]],["name/20-77",[]],["text/20-77",[]],["component/20-77",[]],["title/20-78",[77,26.661,748,29.905,802,36.698]],["name/20-78",[]],["text/20-78",[]],["component/20-78",[]],["title/20-79",[77,32.135,109,48.741]],["name/20-79",[]],["text/20-79",[]],["component/20-79",[]],["title/20-80",[220,38.553]],["name/20-80",[]],["text/20-80",[]],["component/20-80",[]],["title/20-81",[189,61.335]],["name/20-81",[]],["text/20-81",[]],["component/20-81",[]],["title/20-82",[222,46.235,803,46.235]],["name/20-82",[]],["text/20-82",[]],["component/20-82",[]],["title/20-83",[187,38.553]],["name/20-83",[]],["text/20-83",[]],["component/20-83",[]],["title/20-84",[254,21.179,738,38.782]],["name/20-84",[]],["text/20-84",[]],["component/20-84",[]],["title/20-85",[254,21.179,804,52.097]],["name/20-85",[]],["text/20-85",[]],["component/20-85",[]],["title/20-86",[125,36.913]],["name/20-86",[]],["text/20-86",[]],["component/20-86",[]],["title/20-87",[88,38.553]],["name/20-87",[]],["text/20-87",[]],["component/20-87",[]],["title/20-88",[301,40.439]],["name/20-88",[]],["text/20-88",[]],["component/20-88",[]],["title/20-89",[187,30.637,805,46.235]],["name/20-89",[]],["text/20-89",[]],["component/20-89",[]],["title/20-90",[254,21.179,806,44.233]],["name/20-90",[]],["text/20-90",[]],["component/20-90",[]],["title/20-91",[254,17.571,806,36.698,807,43.222]],["name/20-91",[]],["text/20-91",[]],["component/20-91",[]],["title/20-92",[254,21.179,536,33.276]],["name/20-92",[]],["text/20-92",[]],["component/20-92",[]],["title/20-93",[102,24.826,254,21.179]],["name/20-93",[]],["text/20-93",[]],["component/20-93",[]],["title/20-94",[89,22.32,254,21.179]],["name/20-94",[]],["text/20-94",[]],["component/20-94",[]],["title/20-95",[254,21.179,806,44.233]],["name/20-95",[]],["text/20-95",[]],["component/20-95",[]],["title/20-96",[254,21.179,771,44.233]],["name/20-96",[]],["text/20-96",[]],["component/20-96",[]],["title/20-97",[53,21.545,254,21.179]],["name/20-97",[]],["text/20-97",[]],["component/20-97",[]],["title/20-98",[254,21.179,808,44.233]],["name/20-98",[]],["text/20-98",[]],["component/20-98",[]],["title/20-99",[254,17.571,682,34.132,694,23.687]],["name/20-99",[]],["text/20-99",[]],["component/20-99",[]],["title/20-100",[254,21.179,809,44.233]],["name/20-100",[]],["text/20-100",[]],["component/20-100",[]],["title/20-101",[254,21.179,810,44.233]],["name/20-101",[]],["text/20-101",[]],["component/20-101",[]],["title/20-102",[811,52.097,812,52.097]],["name/20-102",[]],["text/20-102",[]],["component/20-102",[]],["title/20-103",[108,32.135,351,31.112]],["name/20-103",[]],["text/20-103",[]],["component/20-103",[]],["title/20-104",[254,21.179,393,38.782]],["name/20-104",[]],["text/20-104",[]],["component/20-104",[]],["title/20-105",[254,17.571,393,32.176,813,43.222]],["name/20-105",[]],["text/20-105",[]],["component/20-105",[]],["title/20-106",[814,52.097,815,36.877]],["name/20-106",[]],["text/20-106",[]],["component/20-106",[]],["title/20-107",[816,65.558]],["name/20-107",[]],["text/20-107",[]],["component/20-107",[]],["title/20-108",[780,28.551,815,36.877]],["name/20-108",[]],["text/20-108",[]],["component/20-108",[]],["title/20-109",[351,25.812,542,30.595,780,23.687]],["name/20-109",[]],["text/20-109",[]],["component/20-109",[]],["title/20-110",[53,27.111]],["name/20-110",[]],["text/20-110",[]],["component/20-110",[]],["title/20-111",[53,27.111]],["name/20-111",[]],["text/20-111",[]],["component/20-111",[]],["title/20-112",[17,20.597,164,25.812,817,38.359]],["name/20-112",[]],["text/20-112",[]],["component/20-112",[]],["title/20-113",[771,44.233,817,46.235]],["name/20-113",[]],["text/20-113",[]],["component/20-113",[]],["title/20-114",[17,20.597,103,28.125,818,43.222]],["name/20-114",[]],["text/20-114",[]],["component/20-114",[]],["title/20-115",[558,37.784,794,46.235]],["name/20-115",[]],["text/20-115",[]],["component/20-115",[]],["title/20-116",[819,65.558]],["name/20-116",[]],["text/20-116",[]],["component/20-116",[]],["title/20-117",[102,24.826,551,37.784]],["name/20-117",[]],["text/20-117",[]],["component/20-117",[]],["title/20-118",[558,37.784,820,48.741]],["name/20-118",[]],["text/20-118",[]],["component/20-118",[]],["title/20-119",[821,61.335]],["name/20-119",[]],["text/20-119",[]],["component/20-119",[]],["title/20-120",[60,34.164]],["name/20-120",[]],["text/20-120",[]],["component/20-120",[]],["title/20-121",[822,48.741,823,44.233]],["name/20-121",[]],["text/20-121",[]],["component/20-121",[]],["title/20-122",[87,36.045,166,34.565]],["name/20-122",[]],["text/20-122",[]],["component/20-122",[]],["title/20-123",[15,42.567,103,33.9]],["name/20-123",[]],["text/20-123",[]],["component/20-123",[]],["title/20-124",[479,27.482,824,52.097]],["name/20-124",[]],["text/20-124",[]],["component/20-124",[]],["title/20-125",[825,52.097,826,46.235]],["name/20-125",[]],["text/20-125",[]],["component/20-125",[]],["title/20-126",[170,21.748,350,32.176,351,25.812]],["name/20-126",[]],["text/20-126",[]],["component/20-126",[]],["title/20-127",[422,33.276,827,52.097]],["name/20-127",[]],["text/20-127",[]],["component/20-127",[]],["title/20-128",[828,52.097,829,46.235]],["name/20-128",[]],["text/20-128",[]],["component/20-128",[]],["title/20-129",[406,46.235,823,44.233]],["name/20-129",[]],["text/20-129",[]],["component/20-129",[]],["title/20-130",[101,31.112,815,36.877]],["name/20-130",[]],["text/20-130",[]],["component/20-130",[]],["title/20-131",[53,27.111]],["name/20-131",[]],["text/20-131",[]],["component/20-131",[]],["title/20-132",[52,45.359]],["name/20-132",[]],["text/20-132",[]],["component/20-132",[]],["title/20-133",[170,26.213,830,42.567]],["name/20-133",[]],["text/20-133",[]],["component/20-133",[]],["title/20-134",[180,39.778]],["name/20-134",[]],["text/20-134",[]],["component/20-134",[]],["title/20-135",[492,37.982]],["name/20-135",[]],["text/20-135",[]],["component/20-135",[]],["title/20-136",[492,30.183,525,32.135]],["name/20-136",[]],["text/20-136",[]],["component/20-136",[]],["title/20-137",[4,32.69,575,29.334]],["name/20-137",[]],["text/20-137",[]],["component/20-137",[]],["title/20-138",[167,34.565,492,30.183]],["name/20-138",[]],["text/20-138",[]],["component/20-138",[]],["title/20",[18,25.92,19,29.749]],["name/20",[13,1.169]],["text/20",[4,0.323,7,0.186,8,0.055,9,0.051,10,0.058,11,0.157,13,0.66,15,0.985,17,4.965,18,0.49,19,0.925,20,1.194,23,0.124,24,0.263,25,0.376,26,0.328,27,0.667,28,1.284,29,0.529,30,0.537,31,2.397,32,0.264,33,0.974,35,0.209,37,0.319,38,0.241,41,0.223,42,0.152,43,0.105,44,0.473,45,0.124,47,0.162,48,0.059,49,0.215,50,0.655,51,0.4,52,0.137,53,0.974,54,0.383,55,0.127,56,0.22,57,0.036,58,0.035,59,0.608,60,1.741,61,0.05,62,0.239,63,0.088,64,0.17,66,0.482,68,3.117,69,0.835,73,0.293,74,0.213,75,0.081,76,0.051,77,1.234,79,0.572,82,0.623,85,0.057,86,0.436,87,0.642,88,1.309,89,2.836,90,0.491,93,0.355,94,2.558,97,0.306,98,2.357,99,0.067,100,3.186,101,1.626,102,2.524,103,1.448,104,0.105,105,0.127,106,0.059,107,0.764,108,2.838,109,0.481,110,0.39,111,0.327,112,1.086,113,0.157,114,0.047,118,0.428,119,0.213,120,0.075,121,0.198,122,0.223,123,0.221,125,3.219,132,0.331,133,0.712,134,0.299,135,0.29,137,0.422,138,0.059,139,0.053,140,0.778,141,0.059,142,0.198,143,0.067,144,1.148,145,0.217,146,0.87,148,1.281,149,0.588,151,1.047,152,0.191,154,0.29,155,0.109,157,0.364,160,1.763,164,0.996,165,0.067,166,0.94,167,1.266,168,0.059,169,0.178,170,2.574,172,0.124,173,0.055,174,0.051,175,0.384,176,0.094,177,0.129,179,0.063,180,1.129,181,0.328,183,0.373,185,0.063,187,1.779,189,0.124,190,0.489,192,0.09,193,0.051,194,0.384,196,0.113,200,0.226,201,0.144,202,0.25,206,0.063,211,0.133,214,0.067,216,0.246,218,0.299,219,0.246,220,1.15,221,0.099,222,0.29,223,0.063,225,0.063,226,0.576,227,0.067,228,0.133,230,0.198,232,0.267,234,0.067,235,0.522,241,0.053,247,0.059,249,0.063,250,0.186,251,0.118,253,0.39,254,2.921,255,0.063,256,0.118,258,0.407,263,0.9,265,0.047,269,0.196,271,0.259,272,1.021,276,0.406,277,0.063,279,0.102,282,0.118,286,0.057,287,0.124,290,0.39,291,0.067,292,0.067,293,0.533,294,0.402,297,0.25,298,0.152,299,0.059,300,0.097,301,3.547,302,0.157,303,0.102,305,0.201,306,0.182,308,0.057,310,0.191,311,0.113,313,1.25,314,0.113,317,0.596,318,0.295,322,0.246,323,0.055,324,0.54,325,0.215,326,3.271,327,0.568,328,0.642,329,0.223,330,0.44,331,0.44,332,0.422,333,0.198,334,0.563,335,0.198,336,0.168,337,0.067,338,0.198,339,0.402,342,1.35,343,0.27,345,0.067,347,0.514,348,0.533,349,0.208,350,1.054,351,3.801,352,0.758,353,0.733,354,0.133,355,0.306,357,0.406,358,0.306,359,0.178,361,0.198,362,0.059,370,0.29,371,0.053,373,0.258,375,0.063,379,0.888,381,0.223,383,0.579,384,1.071,386,0.137,388,0.215,390,0.133,391,0.051,392,0.284,393,0.648,394,0.046,399,0.632,400,0.057,401,0.27,402,0.299,405,0.215,406,0.118,407,0.511,408,1.437,409,0.162,420,0.102,421,0.264,422,0.838,423,0.54,424,0.057,427,0.263,428,0.063,431,0.289,435,0.402,438,0.428,440,0.168,443,0.384,446,0.144,447,0.109,449,0.186,450,1.641,451,0.105,453,0.124,460,0.278,462,0.356,468,0.815,469,0.985,470,0.835,471,0.059,475,0.327,478,0.223,479,3.687,480,0.198,483,0.133,487,0.059,489,0.152,490,0.046,491,1.393,492,1.314,502,0.186,503,0.278,504,1.417,506,0.051,508,0.057,510,0.461,512,0.27,513,1.58,516,0.118,518,0.12,523,0.492,524,1.393,525,0.809,526,0.441,527,0.337,530,0.331,532,0.215,535,0.067,536,1.249,538,0.176,539,0.263,541,1.077,542,2.341,547,0.237,548,0.105,549,0.051,550,0.053,551,1.859,554,0.186,555,1.18,557,0.215,558,1.101,559,0.25,560,0.328,561,1.235,562,0.109,563,0.148,566,0.319,567,0.055,568,0.676,570,0.109,571,0.099,575,1.302,578,0.162,581,0.502,582,0.051,587,0.113,588,0.797,590,0.215,591,0.162,592,0.487,593,0.157,596,0.055,600,0.05,602,0.258,603,0.441,605,0.407,606,0.157,610,0.053,612,0.45,613,0.267,614,0.267,615,0.215,618,0.201,619,0.243,625,0.109,626,0.681,630,0.053,631,0.176,635,0.176,638,0.201,640,0.124,642,0.226,643,0.306,644,0.502,648,0.258,650,0.328,652,3.774,654,4.39,656,1.677,657,2.612,658,1.635,659,3.645,661,3.296,663,2.063,668,0.394,669,0.29,670,0.267,674,0.299,675,0.365,677,1.418,678,0.118,682,1.279,683,3.482,684,0.186,685,0.063,689,0.52,691,0.67,693,1.315,694,2.44,695,0.099,696,0.884,701,0.124,702,0.186,704,0.109,705,0.067,707,0.057,709,0.118,710,0.198,711,0.067,712,2.035,713,0.067,718,0.384,719,0.118,722,0.059,723,0.267,730,0.067,731,0.053,732,0.263,735,0.176,736,0.383,738,0.428,739,1.507,740,0.133,748,1.222,749,0.348,751,0.055,758,0.365,762,0.113,763,1.075,764,0.263,765,0.568,766,0.696,771,0.54,774,0.868,775,0.931,776,0.596,777,0.118,778,0.37,779,0.591,780,2.769,781,0.664,782,0.773,783,0.815,784,0.67,785,1.481,786,1.393,787,0.176,788,0.973,789,0.263,790,0.233,791,0.186,792,0.246,793,1.389,794,1.857,795,0.133,796,1.282,797,0.133,798,0.39,799,0.067,800,0.124,801,0.453,803,0.233,804,0.263,805,1.021,806,0.641,807,0.327,808,0.591,809,0.384,810,0.69,811,0.067,812,0.067,813,0.133,814,0.928,815,1.871,816,0.39,817,1.069,818,0.327,819,0.327,820,0.186,821,1.025,822,0.538,823,0.836,824,0.453,825,1.766,826,1.069,827,0.198,828,0.133,829,0.67,830,0.162,831,0.133,832,0.278,833,0.568,834,0.617,835,0.327,836,0.359,837,0.564,838,0.118,839,0.162,840,0.146,841,0.146,842,0.073,843,0.133,844,5.215,845,0.073,846,0.067,847,0.974,848,1.468,849,0.073,850,0.073,851,0.146,852,0.146,853,0.497,854,0.497,855,0.146,856,0.073,857,0.428,858,0.146,859,0.497,860,0.073,861,0.289,862,0.146,863,0.289,864,0.073,865,0.073,866,0.133,867,0.073,868,0.289,869,0.306,870,0.146,871,0.073,872,0.073,873,0.073,874,0.073,875,1.766,876,0.073,877,0.073,878,0.073,879,0.359,880,0.133,881,0.218,882,0.218,883,0.218,884,0.359,885,0.073,886,0.073,887,1.023,888,0.073,889,0.636,890,0.073,891,0.595,892,0.146,893,0.073,894,0.067,895,0.073,896,0.073,897,0.073,898,0.428,899,0.218,900,0.073,901,0.208,902,0.073,903,0.133,904,0.146,905,0.198,906,0.218,907,0.146,908,0.289,909,0.073,910,0.073,911,0.073,912,0.133,913,0.359,914,0.073,915,0.146,916,0.073,917,0.073,918,1.416,919,0.073,920,0.073,921,0.073,922,0.924,923,0.073,924,2.519,925,0.073,926,0.073,927,0.073,928,0.073,929,0.073,930,0.073,931,0.985,932,1.021,933,0.063,934,0.636,935,0.073,936,0.133,937,0.575,938,0.575,939,0.453,940,0.453,941,0.073,942,0.327,943,0.073,944,0.073,945,0.146,946,0.146,947,0.063,948,0.073,949,0.698,950,0.198,951,1.519,952,0.168,953,0.198,954,0.133,955,0.402,956,0.836,957,1.127,958,0.073,959,0.073,960,0.073,961,0.428,962,0.497,963,0.073,964,0.868,965,0.073,966,0.073,967,0.073,968,0.073,969,0.118,970,0.218,971,0.359,972,0.073,973,0.073,974,0.133,975,0.133,976,0.168,977,0.39,978,0.073,979,0.146,980,0.073,981,0.146,982,0.073,983,0.453,984,0.67,985,0.453,986,0.319,987,0.835,988,0.346,989,0.067,990,0.331,991,0.059,992,0.113,993,0.218,994,0.133,995,0.289,996,0.073,997,0.263,998,0.29,999,0.218,1000,0.073,1001,0.063,1002,0.073,1003,0.073,1004,0.073,1005,0.073,1006,0.146,1007,1.158,1008,0.428,1009,0.073,1010,0.073,1011,0.073,1012,0.073,1013,0.073,1014,0.073,1015,0.073,1016,0.146,1017,0.073,1018,1.041,1019,0.327,1020,0.073,1021,0.985,1022,0.073,1023,0.073,1024,0.073,1025,0.218,1026,0.073,1027,0.073,1028,0.073,1029,0.073,1030,0.146,1031,0.073,1032,0.073,1033,0.146,1034,0.073,1035,1.203,1036,0.067,1037,0.073,1038,0.073,1039,0.073,1040,0.073,1041,0.073,1042,0.073,1043,0.218,1044,0.073,1045,0.073,1046,0.359,1047,0.428,1048,0.218,1049,0.146,1050,0.146,1051,0.146,1052,0.893,1053,0.073,1054,0.073,1055,0.073,1056,0.073,1057,0.146,1058,0.073,1059,0.073,1060,0.073,1061,0.073,1062,0.073,1063,0.289,1064,0.073,1065,0.073,1066,0.073,1067,0.233,1068,0.073,1069,0.218,1070,0.073,1071,0.146,1072,0.146,1073,0.146,1074,0.146,1075,0.073,1076,0.073,1077,0.146,1078,1.019,1079,0.073,1080,0.146,1081,0.218,1082,0.073,1083,0.146,1084,0.073,1085,0.073,1086,0.146,1087,0.073,1088,0.073,1089,0.073,1090,0.073,1091,0.073,1092,0.073,1093,0.073,1094,0.073,1095,0.073,1096,0.073,1097,0.073,1098,0.073,1099,0.073,1100,0.073,1101,0.073,1102,0.359,1103,0.146,1104,0.073,1105,0.073,1106,0.073,1107,0.073,1108,0.073,1109,0.073,1110,0.073,1111,0.073,1112,0.073,1113,0.073,1114,0.073,1115,0.073,1116,0.565,1117,0.706,1118,0.359,1119,0.073,1120,2.181,1121,0.289,1122,0.246,1123,0.073,1124,0.073,1125,0.073,1126,0.073,1127,0.384,1128,0.423,1129,0.073,1130,1.021,1131,0.218,1132,0.497,1133,0.073,1134,0.146,1135,0.146,1136,0.346,1137,0.263,1138,0.124,1139,0.067,1140,0.073,1141,0.073,1142,0.059,1143,0.223,1144,0.237,1145,0.218,1146,0.073,1147,0.073,1148,0.133,1149,0.073,1150,0.073,1151,0.073,1152,0.233,1153,0.564,1154,0.073,1155,0.073,1156,0.133,1157,0.828,1158,0.47,1159,0.073,1160,0.073,1161,3.694,1162,0.711,1163,0.575,1164,0.636,1165,0.059,1166,0.788,1167,0.186,1168,0.073,1169,0.124,1170,0.124,1171,0.073,1172,0.133,1173,0.133,1174,0.565,1175,0.359,1176,0.073,1177,0.359,1178,0.073,1179,0.118,1180,0.073,1181,0.073,1182,0.073,1183,0.073,1184,0.073,1185,0.073,1186,0.073,1187,0.073,1188,0.063,1189,0.359,1190,0.198,1191,0.198,1192,0.218,1193,0.073,1194,0.073,1195,0.157,1196,0.428,1197,0.057,1198,0.073,1199,0.073,1200,0.067,1201,0.073,1202,0.073,1203,0.327,1204,0.133,1205,0.218,1206,0.146,1207,0.773,1208,0.218,1209,0.218,1210,0.218,1211,0.428,1212,0.073,1213,0.146,1214,0.632,1215,0.632,1216,0.218,1217,0.198,1218,0.218,1219,0.497,1220,0.696,1221,0.124,1222,0.073,1223,0.057,1224,0.073,1225,0.073,1226,3.728,1227,0.218,1228,0.306,1229,0.073,1230,0.073,1231,0.632,1232,0.073,1233,0.073,1234,0.359,1235,0.176,1236,0.073,1237,0.124,1238,0.073,1239,0.073,1240,0.299,1241,0.073,1242,0.067,1243,0.497,1244,0.073,1245,0.146,1246,0.073,1247,0.073,1248,0.073,1249,0.267,1250,0.218,1251,0.218,1252,0.186,1253,0.073,1254,0.218,1255,0.146,1256,0.146,1257,0.073,1258,0.146,1259,0.186,1260,0.481,1261,0.497,1262,0.871,1263,0.073,1264,0.073,1265,0.073,1266,0.233,1267,0.331,1268,0.073,1269,0.146,1270,0.073,1271,0.146,1272,0.146,1273,0.764,1274,0.289,1275,0.146,1276,0.073,1277,0.146,1278,0.073,1279,0.146,1280,0.146,1281,0.067,1282,0.617,1283,0.263,1284,0.54,1285,0.306,1286,0.146,1287,0.146,1288,0.073,1289,0.067,1290,0.246,1291,0.276,1292,0.218,1293,0.073,1294,0.146,1295,0.146,1296,0.564,1297,1.019,1298,0.073,1299,0.073,1300,0.073,1301,0.073,1302,0.067,1303,1.216,1304,0.073,1305,0.218,1306,0.073,1307,0.073,1308,0.073,1309,0.073,1310,0.146,1311,0.37,1312,1.203,1313,0.186,1314,0.146,1315,0.073,1316,0.365,1317,0.497,1318,0.146,1319,0.384,1320,0.146,1321,0.146,1322,0.263,1323,0.289,1324,0.289,1325,0.974,1326,0.133,1327,0.073,1328,0.073,1329,0.146,1330,0.073,1331,1.069,1332,1.069,1333,0.764,1334,0.39,1335,0.263,1336,0.067,1337,0.067,1338,0.073,1339,0.073,1340,0.073,1341,0.327,1342,0.263,1343,0.073,1344,0.073,1345,0.289,1346,1.44,1347,0.218,1348,0.456,1349,0.146,1350,0.359,1351,0.146,1352,0.146,1353,0.109,1354,0.146,1355,0.198,1356,0.146,1357,0.073,1358,0.073,1359,0.263,1360,0.39,1361,0.102,1362,0.146,1363,0.146,1364,0.133,1365,0.218,1366,0.073,1367,0.073,1368,0.073,1369,0.073,1370,0.073,1371,0.073,1372,0.146,1373,0.146,1374,0.073,1375,0.632,1376,0.359,1377,0.306,1378,0.073,1379,0.073,1380,0.359,1381,0.073,1382,0.198,1383,0.146,1384,0.124,1385,0.218,1386,0.146,1387,0.073,1388,0.073,1389,0.073,1390,0.073,1391,0.073,1392,0.073,1393,0.073,1394,0.146,1395,0.073,1396,0.073,1397,0.146,1398,0.924,1399,0.146,1400,0.764,1401,0.063,1402,0.063,1403,0.073,1404,0.073,1405,0.073,1406,0.073,1407,0.218,1408,0.146,1409,0.073,1410,0.146,1411,0.146,1412,0.067,1413,0.073,1414,0.073,1415,0.073,1416,0.289,1417,0.146,1418,0.073,1419,0.073,1420,0.133,1421,0.073,1422,0.073,1423,0.073,1424,0.073,1425,0.073,1426,0.073,1427,0.067,1428,0.073,1429,0.073,1430,0.365,1431,0.218,1432,0.246,1433,0.218,1434,0.218,1435,0.073,1436,0.073,1437,0.118,1438,0.073,1439,0.073,1440,0.133,1441,0.146,1442,0.146,1443,0.299,1444,0.073,1445,0.328,1446,0.198,1447,0.289,1448,0.073,1449,0.073,1450,0.073,1451,0.218,1452,0.067,1453,0.067,1454,0.073,1455,0.073,1456,0.146,1457,0.073,1458,0.073,1459,0.54,1460,0.067,1461,0.063,1462,0.233,1463,0.186,1464,0.133,1465,0.073,1466,0.067,1467,0.067,1468,0.067,1469,0.157,1470,0.057,1471,0.263,1472,0.073,1473,0.073,1474,0.073,1475,0.755,1476,0.073,1477,0.073,1478,0.346,1479,0.218,1480,0.067,1481,0.073,1482,0.073,1483,0.073,1484,0.073,1485,0.073,1486,0.133,1487,0.289,1488,0.073,1489,0.133,1490,0.146,1491,0.146,1492,0.868,1493,0.146,1494,0.263,1495,0.146,1496,0.133,1497,0.289,1498,0.073,1499,0.073,1500,0.067,1501,0.073,1502,0.067,1503,0.067,1504,0.186,1505,0.489,1506,0.073,1507,0.133,1508,0.073,1509,0.146,1510,0.073,1511,0.133,1512,0.073,1513,0.073,1514,0.073,1515,0.073,1516,0.186,1517,0.073,1518,0.146,1519,0.218,1520,0.289,1521,0.073,1522,0.067,1523,0.073,1524,0.133,1525,0.073,1526,0.073,1527,0.073,1528,0.514,1529,0.073,1530,0.073,1531,0.073,1532,0.102,1533,0.063,1534,0.073,1535,0.073,1536,0.073,1537,0.146,1538,0.146,1539,0.218,1540,0.428,1541,0.176,1542,0.146,1543,0.073,1544,0.146,1545,0.073,1546,0.146,1547,0.073,1548,0.218,1549,0.454,1550,0.073,1551,0.146,1552,0.073,1553,0.176,1554,0.118,1555,0.331,1556,0.146,1557,0.146,1558,0.133,1559,0.146,1560,0.218,1561,0.067,1562,0.146,1563,0.073,1564,0.067,1565,0.337,1566,0.073,1567,0.063,1568,0.29,1569,1.259,1570,0.575,1571,0.063,1572,0.146,1573,0.146,1574,0.073,1575,0.423,1576,0.198,1577,0.073,1578,0.067,1579,0.067,1580,0.073,1581,0.073,1582,0.073,1583,0.073,1584,0.073,1585,0.067,1586,0.073,1587,0.146,1588,0.073,1589,0.073,1590,0.218,1591,0.218,1592,0.073,1593,0.073,1594,0.073,1595,0.073,1596,0.073,1597,0.186,1598,0.073,1599,0.073,1600,0.057,1601,0.073,1602,0.073,1603,0.168,1604,0.124,1605,0.146,1606,0.146,1607,0.073,1608,0.073,1609,0.176,1610,0.146,1611,0.146,1612,0.073,1613,0.073,1614,0.198,1615,0.073,1616,0.218,1617,0.073,1618,0.39,1619,0.073,1620,0.073,1621,0.073,1622,0.146,1623,0.073,1624,0.133,1625,0.073,1626,0.073,1627,0.146,1628,0.146,1629,0.073,1630,0.073,1631,0.073,1632,0.073,1633,0.073,1634,0.073,1635,0.146,1636,0.073,1637,0.073,1638,0.073,1639,0.218,1640,0.073,1641,0.073,1642,0.073,1643,0.073,1644,0.067,1645,0.133,1646,0.073,1647,0.073,1648,0.198,1649,0.073,1650,0.198,1651,0.218,1652,0.073,1653,0.168,1654,0.073,1655,0.067,1656,0.146,1657,0.073,1658,0.073,1659,0.073,1660,0.073,1661,0.308,1662,0.073,1663,0.073,1664,0.073,1665,0.073,1666,0.063,1667,0.059,1668,0.218,1669,0.073,1670,0.218,1671,0.118,1672,0.124,1673,0.073,1674,0.067,1675,0.067,1676,0.359,1677,0.073,1678,0.073,1679,0.067,1680,0.067,1681,0.176,1682,0.073,1683,0.057,1684,0.073,1685,0.073,1686,0.073,1687,0.218,1688,0.218,1689,0.073,1690,0.146,1691,0.146,1692,0.073,1693,0.073,1694,0.059,1695,0.073,1696,0.073,1697,0.073,1698,0.073,1699,0.146,1700,0.146,1701,0.146,1702,0.146,1703,0.073,1704,0.073,1705,0.073,1706,0.073,1707,0.073,1708,0.073,1709,0.073,1710,0.565,1711,0.218,1712,0.073,1713,0.073,1714,0.073,1715,0.073,1716,0.063,1717,0.133,1718,0.073,1719,0.218,1720,0.146,1721,0.146,1722,0.575,1723,0.146,1724,0.263,1725,0.218,1726,0.218,1727,0.073,1728,0.073,1729,0.073,1730,0.073,1731,0.073,1732,0.073,1733,0.073,1734,0.073,1735,0.073,1736,0.146,1737,0.073,1738,0.246,1739,0.067,1740,0.428,1741,0.146,1742,0.073,1743,0.073,1744,0.073,1745,0.073,1746,0.073,1747,0.146,1748,0.073,1749,0.097,1750,0.073,1751,0.073,1752,0.359,1753,0.073,1754,0.073,1755,0.289,1756,0.073,1757,0.073,1758,0.073,1759,0.289,1760,0.073,1761,0.073,1762,0.073,1763,0.073,1764,0.073,1765,0.073,1766,0.073,1767,0.327,1768,0.073,1769,0.073,1770,0.073,1771,0.073,1772,0.073,1773,0.073,1774,0.073,1775,0.073,1776,0.073,1777,0.073,1778,0.146,1779,0.289,1780,0.218,1781,0.073,1782,0.073,1783,0.073,1784,0.067,1785,0.073,1786,0.073,1787,0.073,1788,0.073,1789,0.218,1790,0.306,1791,0.067,1792,0.319,1793,0.428,1794,0.073,1795,0.073,1796,0.428,1797,0.146,1798,0.073,1799,0.073,1800,0.063,1801,0.063,1802,0.073,1803,0.063,1804,0.073,1805,0.073,1806,0.063,1807,0.073,1808,0.073,1809,0.186,1810,0.073,1811,0.073,1812,0.063,1813,0.073,1814,0.073,1815,0.073,1816,0.073,1817,0.067,1818,0.073,1819,0.059,1820,0.073,1821,0.073,1822,0.073,1823,0.067,1824,0.198,1825,0.073,1826,0.289,1827,0.198,1828,0.133,1829,0.073,1830,0.146,1831,0.218,1832,0.146,1833,0.37,1834,0.218,1835,0.146,1836,0.133,1837,0.146,1838,0.124,1839,0.067,1840,0.146,1841,0.102,1842,0.073,1843,0.359,1844,0.073,1845,0.073,1846,0.146,1847,0.067,1848,0.055,1849,0.073,1850,0.133,1851,0.067,1852,0.073,1853,0.073,1854,0.073,1855,0.073,1856,0.146,1857,0.073,1858,0.073,1859,0.067,1860,0.073,1861,0.133,1862,0.073,1863,0.073,1864,0.073,1865,0.073,1866,0.073,1867,0.073,1868,0.146,1869,0.073,1870,0.218,1871,0.073,1872,0.073,1873,0.073,1874,0.359,1875,0.073,1876,0.073,1877,0.073,1878,0.063,1879,0.073,1880,0.073,1881,0.073,1882,0.073,1883,0.073,1884,0.233,1885,0.146,1886,0.073,1887,0.073,1888,0.146,1889,0.146,1890,0.073,1891,0.073,1892,0.073,1893,0.073,1894,0.067,1895,0.073,1896,0.218,1897,0.073,1898,0.073,1899,0.073,1900,0.067,1901,0.073,1902,0.073,1903,0.073,1904,0.073,1905,0.073,1906,0.073,1907,0.073,1908,0.073,1909,0.073,1910,0.073,1911,0.073,1912,0.133,1913,0.073,1914,0.073,1915,0.146,1916,0.073,1917,0.073,1918,0.073,1919,0.073,1920,0.073,1921,0.198,1922,0.067,1923,0.218,1924,0.146,1925,0.063,1926,0.073,1927,0.073,1928,0.073,1929,0.218,1930,0.218,1931,0.073,1932,0.073,1933,0.073,1934,0.073,1935,0.073,1936,0.073,1937,0.073,1938,0.063,1939,0.073,1940,0.073,1941,0.218,1942,0.067,1943,0.067,1944,0.073,1945,0.059,1946,0.073,1947,0.059,1948,0.073,1949,0.289,1950,0.359,1951,0.073,1952,0.828,1953,0.102,1954,0.365,1955,0.067,1956,0.146,1957,0.306,1958,0.067,1959,0.073,1960,0.146,1961,0.146,1962,0.359,1963,0.289,1964,0.428,1965,0.073,1966,0.073,1967,0.073,1968,0.073,1969,0.218,1970,0.073,1971,0.073,1972,0.073,1973,0.067,1974,0.073,1975,0.073,1976,0.073,1977,0.133,1978,0.453,1979,0.146,1980,0.146,1981,0.146,1982,0.497,1983,0.124,1984,0.073,1985,0.073,1986,0.146,1987,0.146,1988,0.073,1989,0.146,1990,0.073,1991,0.146,1992,0.073,1993,0.124,1994,0.067,1995,0.133,1996,0.059,1997,0.073,1998,0.146,1999,0.073,2000,0.073,2001,0.073,2002,0.073,2003,0.073,2004,0.073,2005,0.073,2006,0.133,2007,0.218,2008,0.073,2009,0.073,2010,0.073,2011,0.073,2012,0.073,2013,0.073,2014,0.124,2015,0.073,2016,0.057,2017,0.073,2018,0.073,2019,0.073,2020,0.073,2021,0.073,2022,0.073,2023,0.073,2024,0.218,2025,0.073,2026,0.133,2027,0.073,2028,0.073,2029,0.073,2030,0.073,2031,0.113,2032,0.073,2033,0.073,2034,0.146,2035,0.067,2036,0.073,2037,0.073,2038,0.073,2039,0.073,2040,0.073,2041,0.073,2042,0.073,2043,0.146,2044,0.073,2045,0.146,2046,0.146,2047,0.146,2048,0.218,2049,0.198,2050,0.073,2051,0.067,2052,0.073,2053,0.073,2054,0.073,2055,0.073,2056,0.073,2057,0.073,2058,0.073,2059,0.186,2060,0.059,2061,0.073,2062,0.124,2063,0.133,2064,0.049,2065,0.073,2066,0.073,2067,0.073,2068,0.073,2069,0.218,2070,0.073,2071,0.67,2072,0.246,2073,0.073,2074,0.067,2075,0.124,2076,0.073,2077,0.073,2078,0.073,2079,0.073,2080,0.073,2081,0.073,2082,0.073,2083,0.073,2084,0.073,2085,0.073,2086,0.073,2087,0.073,2088,0.146,2089,0.073,2090,0.073,2091,0.146,2092,0.133,2093,0.146,2094,0.218,2095,0.146,2096,0.067,2097,0.073,2098,0.073,2099,0.073,2100,0.073,2101,0.073,2102,0.067,2103,0.073,2104,0.073,2105,0.073,2106,0.073,2107,0.073,2108,0.073,2109,0.073,2110,0.073,2111,0.073,2112,0.218,2113,0.073,2114,0.073,2115,0.073,2116,0.073,2117,0.073,2118,0.073,2119,0.067,2120,0.073,2121,0.067,2122,0.073,2123,0.073,2124,0.073,2125,0.289,2126,0.073,2127,0.073,2128,0.146,2129,0.073,2130,0.067,2131,0.073,2132,0.067,2133,0.073,2134,0.073,2135,0.489,2136,0.327,2137,0.218,2138,0.073,2139,0.067,2140,0.063,2141,0.067,2142,0.067,2143,0.057,2144,0.073,2145,0.073,2146,0.146,2147,0.146,2148,0.073,2149,0.073,2150,0.073,2151,0.073,2152,0.073,2153,0.073,2154,0.073,2155,0.218,2156,0.073,2157,0.073,2158,0.263,2159,0.073,2160,0.118,2161,0.124,2162,0.067,2163,0.051,2164,0.067,2165,0.073,2166,0.073,2167,0.289,2168,0.073,2169,0.073,2170,0.073,2171,0.073,2172,0.073,2173,0.073,2174,0.073,2175,0.073,2176,0.073,2177,0.067,2178,0.146,2179,0.067,2180,0.073,2181,0.073,2182,0.073,2183,0.073,2184,0.067,2185,0.067,2186,0.073]],["component/20",[10,0.732]],["title/21-1",[351,31.112,2187,37.784]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[89,15.822,102,17.599,170,18.582,332,24.503]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[100,31.91]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[326,50.199]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[513,51.77]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[103,33.9,2188,52.097]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[696,55.663]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21-8",[2189,71.969]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["title/21",[24,23.84,2187,37.784]],["name/21",[2190,2.343]],["text/21",[6,1.091,7,1.02,13,2.166,17,4.93,18,0.543,19,0.623,20,2.845,24,2.553,25,0.59,31,1.653,35,0.697,49,1.628,53,0.451,54,0.812,60,2.908,68,2.693,76,1.525,79,2.438,92,0.772,98,1.527,100,3.117,103,2.888,107,2.693,112,0.755,121,2.06,123,0.739,125,2.739,129,0.968,134,4.504,137,0.724,138,0.968,145,2.622,146,2.944,148,1.353,151,1.25,152,0.791,160,1.791,162,0.968,163,1.02,164,2.65,170,4.273,183,0.791,187,1.172,190,0.926,196,0.926,218,1.525,220,1.172,232,0.891,241,0.861,254,1.607,258,2.404,271,0.724,272,1.296,281,0.861,282,0.968,297,2.6,298,0.835,300,1.445,301,2.095,302,0.861,311,0.926,313,1.947,326,5.752,328,3.071,330,2.349,332,1.825,351,3.513,352,0.891,366,1.02,379,0.71,383,1.172,392,1.726,399,1.994,423,0.926,435,1.768,446,0.791,470,0.724,471,1.768,475,0.562,477,0.835,479,4.229,491,0.697,504,3.005,513,5.056,518,0.662,602,0.861,635,0.968,642,0.755,650,0.791,652,3.083,654,5.056,657,2.172,658,1.628,659,3.181,661,2.944,670,0.891,674,0.835,682,1.573,683,1.378,689,2.247,693,0.835,694,1.092,697,3.396,709,0.968,719,0.968,739,2.172,765,0.891,774,1.864,809,0.926,822,1.02,832,0.926,833,2.247,839,0.891,844,5.804,847,1.864,866,1.091,912,1.091,918,3.396,931,2.247,932,2.44,933,1.02,947,1.864,951,1.091,955,0.968,956,2.335,964,1.02,984,1.768,987,1.994,991,0.968,992,2.335,998,0.968,1007,0.926,1120,2.172,1127,1.691,1128,3.177,1130,0.968,1137,1.992,1139,1.992,1142,3.508,1144,0.791,1161,4.451,1165,0.968,1169,3.177,1179,3.508,1217,1.091,1221,3.177,1223,0.926,1226,3.396,1235,0.968,1259,1.864,1267,0.926,1284,1.691,1285,0.739,1291,1.41,1319,0.926,1331,4.652,1332,4.451,1336,1.091,1353,0.891,1355,1.992,1382,1.091,1401,1.864,1402,1.864,1437,0.968,1443,2.6,1661,0.861,1790,4.905,1828,1.091,1833,1.628,1839,1.091,1850,1.091,1878,1.02,1953,0.835,1973,1.091,2016,2.883,2075,1.864,2184,1.091,2187,1.445,2188,2.75,2191,2.187,2192,3.728,2193,3.728,2194,3.396,2195,3.396,2196,3.019,2197,1.197,2198,2.187,2199,1.02,2200,1.197,2201,1.197,2202,1.197,2203,1.197,2204,2.75,2205,1.091,2206,1.992,2207,0.968,2208,1.197,2209,1.02,2210,1.197,2211,1.197,2212,2.187,2213,1.197,2214,1.197,2215,1.197,2216,1.197,2217,1.197,2218,1.197,2219,2.187,2220,1.197,2221,1.197,2222,1.197,2223,1.091,2224,1.197,2225,1.197,2226,2.187,2227,4.339,2228,2.187,2229,0.926,2230,1.197,2231,1.197,2232,1.197,2233,1.197,2234,1.197,2235,1.197,2236,1.02,2237,1.02,2238,1.197,2239,1.197,2240,3.019,2241,2.187,2242,2.187,2243,2.187,2244,1.02,2245,1.091,2246,1.091,2247,1.197,2248,2.187,2249,1.197,2250,1.197,2251,1.197,2252,1.197,2253,1.197]],["component/21",[10,0.732]],["title/22-1",[24,23.84,2254,57.192]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[780,35.928]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[89,28.087]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[29,33.9,780,28.551]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22",[29,28.125,405,35.316,440,27.608]],["name/22",[2255,2.343]],["text/22",[4,0.887,9,0.577,10,0.611,13,1.095,15,1.633,17,5.09,18,0.375,19,1.141,20,2.757,24,1.558,25,0.765,29,1.639,31,1.657,33,2.259,36,4.683,44,1.487,49,1.155,53,0.312,59,0.67,60,1.312,62,0.397,64,0.393,68,3.187,76,1.083,79,0.872,82,0.577,83,0.546,88,2.002,89,2.604,94,1.481,98,1.657,100,1.842,102,0.359,105,0.481,108,0.465,110,1.353,112,0.521,123,1.353,125,1.125,137,0.938,140,1.117,141,0.669,145,2.511,146,0.5,148,1.239,151,1.254,160,1.054,167,0.5,169,0.51,170,3.735,187,2.226,192,0.51,199,0.616,200,0.521,202,0.577,220,2.786,221,1.053,226,0.533,232,0.616,241,0.595,249,0.705,250,1.869,254,1.539,258,1.414,263,0.355,271,0.938,294,0.669,297,1.928,298,1.083,308,0.64,313,0.533,326,3.406,327,1.155,328,1.382,330,2.065,331,0.521,332,0.938,334,0.978,349,1.989,351,2.83,357,1.989,379,0.92,383,1.175,384,0.858,393,1.875,399,0.546,405,2.058,421,0.51,423,3.214,431,1.276,439,0.753,440,2.418,447,0.616,450,1.3,451,0.595,452,0.753,462,2.065,470,0.5,471,0.669,477,1.083,479,4.109,488,0.561,502,0.533,510,0.546,513,1.578,518,1.212,530,0.64,533,0.616,538,0.669,542,0.533,568,0.465,575,0.424,603,1.083,605,1.783,608,0.595,610,3.512,613,0.616,625,1.155,626,1.382,642,0.978,652,3.574,654,4.497,656,1.026,657,4.329,658,3.375,659,2.066,661,4.255,663,1.783,674,1.083,677,0.546,683,1.382,689,2.438,694,0.775,704,0.616,718,0.64,739,1.989,763,0.533,765,1.633,780,4.58,784,0.669,785,0.669,793,0.577,809,0.64,817,0.669,829,1.255,832,0.64,833,0.616,834,1.773,844,2.138,846,0.753,847,1.323,848,2.518,887,2.138,894,0.753,931,1.633,936,0.753,984,5.229,985,0.753,987,0.546,990,1.201,992,0.64,998,0.669,1007,1.697,1036,1.414,1120,1.117,1127,1.697,1128,5.686,1130,1.773,1144,1.449,1152,0.669,1161,4.654,1165,0.669,1166,0.64,1169,2.792,1207,0.669,1220,0.753,1223,1.201,1235,1.255,1240,1.083,1266,1.773,1267,1.201,1284,0.64,1291,0.533,1311,0.616,1313,0.705,1325,4.433,1331,2.235,1332,2.138,1334,1.998,1335,1.414,1337,1.414,1353,1.155,1359,0.753,1398,0.669,1401,3.541,1402,2.792,1437,1.255,1443,0.577,1459,0.64,1475,1.414,1492,2.356,1528,0.753,1532,0.577,1541,0.669,1549,0.595,1565,1.053,1575,0.705,1585,0.753,1661,1.117,1790,1.323,1791,0.753,1819,0.669,1838,0.705,1841,2.285,1878,0.705,1938,0.705,1953,0.577,1957,0.705,2016,0.64,2026,0.753,2059,0.705,2064,1.449,2071,2.235,2119,0.753,2130,1.414,2132,1.998,2207,0.669,2236,1.323,2237,1.323,2246,2.984,2256,0.753,2257,0.827,2258,2.764,2259,2.194,2260,2.764,2261,2.194,2262,1.552,2263,2.194,2264,0.827,2265,0.827,2266,0.827,2267,0.827,2268,0.827,2269,0.827,2270,2.764,2271,3.737,2272,1.552,2273,1.552,2274,1.552,2275,1.552,2276,0.827,2277,0.827,2278,1.869,2279,0.827,2280,2.764,2281,1.552,2282,1.552,2283,1.552,2284,1.552,2285,1.998,2286,2.194,2287,2.194,2288,1.552,2289,1.552,2290,0.64,2291,0.827,2292,0.827,2293,0.827,2294,0.827,2295,0.827,2296,1.201,2297,2.764,2298,0.753,2299,0.827,2300,0.827,2301,4.535,2302,1.552,2303,2.194,2304,0.753,2305,0.827,2306,3.276,2307,0.827,2308,0.827,2309,0.827,2310,1.552,2311,0.827,2312,1.552,2313,1.552,2314,1.552,2315,1.552,2316,0.827,2317,0.827,2318,0.827,2319,0.827,2320,2.764,2321,0.753,2322,0.827,2323,0.827,2324,0.827,2325,1.201,2326,0.827,2327,0.827,2328,0.753,2329,0.827,2330,0.705,2331,0.616,2332,0.827,2333,0.827]],["component/22",[10,0.732]],["title/23-1",[254,21.179,2187,37.784]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[100,17.976,170,18.582,254,15.013,780,20.24]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[29,33.9,68,31.61]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23",[29,33.9,145,34.565]],["name/23",[2334,2.343]],["text/23",[4,0.924,9,1.128,17,5.007,18,1.75,20,2.769,24,2.668,25,1.413,29,4.358,30,0.486,31,0.717,38,0.486,44,0.586,46,0.736,47,0.643,49,1.204,59,0.264,60,1.833,66,0.941,68,2.369,76,1.59,79,0.909,82,1.128,88,0.463,89,2.804,92,0.557,94,1.817,98,2.854,100,2.734,102,3.728,107,1.585,108,2.17,121,0.894,123,0.998,125,2.397,135,0.586,141,0.699,144,0.909,145,3.868,146,0.978,148,0.725,149,0.47,151,1.303,152,0.571,154,1.546,160,0.415,164,0.88,170,2.45,181,1.069,183,1.506,187,0.463,194,0.668,201,0.571,202,0.603,206,0.736,208,0.699,220,1.536,232,3.191,254,3.026,258,0.557,263,0.371,269,0.586,271,1.733,272,0.512,297,2.366,301,2.17,313,1.47,314,0.668,328,1.019,330,0.545,331,1.019,332,0.978,334,0.545,336,1.251,349,0.622,351,3.481,352,1.697,357,0.622,358,1.943,359,0.533,360,1.697,366,0.736,373,0.622,375,0.736,379,1.351,381,1.251,382,0.787,383,0.866,384,1.874,386,0.545,392,0.924,393,1.097,401,0.545,405,2.134,421,0.533,422,2.494,430,0.787,431,0.941,432,0.787,438,0.586,440,1.327,450,0.959,470,1.733,477,0.603,479,4.171,504,0.533,510,0.571,511,0.736,518,1.585,526,0.603,532,1.204,533,0.643,536,0.941,568,1.281,605,1.849,612,5.112,635,0.699,644,0.622,645,0.787,650,0.571,652,3.168,659,2.955,661,2.591,677,2.832,683,1.019,689,5.994,691,3.122,694,3.195,718,1.763,719,0.699,762,0.668,763,1.043,765,0.643,775,2.623,776,2.44,780,2.508,785,0.699,793,1.59,820,0.736,833,0.643,834,0.699,839,0.643,844,0.668,905,1.473,931,3.739,956,0.668,983,2.077,987,1.894,990,0.668,991,0.699,992,0.668,1007,1.251,1018,0.787,1067,2.318,1138,0.736,1142,2.318,1144,1.069,1158,1.204,1161,0.668,1164,0.787,1167,0.736,1179,0.699,1191,0.787,1197,0.668,1204,0.787,1207,0.699,1223,0.668,1228,1.378,1235,1.308,1237,0.736,1249,0.643,1262,0.787,1281,1.473,1284,0.668,1291,0.557,1311,0.643,1326,0.787,1332,0.668,1353,0.643,1364,0.787,1427,0.787,1437,0.699,1443,1.128,1565,1.546,1661,0.622,1792,0.643,1819,0.699,1838,0.736,1841,1.128,1847,0.787,1912,0.787,1938,0.736,1945,1.308,1947,0.699,1953,1.128,1957,0.736,2031,1.251,2064,1.069,2187,2.241,2194,4.576,2195,4.256,2206,0.787,2207,1.308,2223,1.473,2245,0.787,2285,0.787,2296,0.668,2298,0.787,2304,1.473,2321,2.612,2330,0.736,2335,2.28,2336,0.864,2337,0.864,2338,0.864,2339,4.287,2340,5.024,2341,5.346,2342,5.024,2343,4.287,2344,2.28,2345,1.617,2346,0.864,2347,0.864,2348,0.864,2349,1.617,2350,1.617,2351,0.864,2352,0.864,2353,2.28,2354,5.346,2355,4.287,2356,0.864,2357,2.867,2358,4.287,2359,0.864,2360,0.787,2361,0.864,2362,1.617,2363,0.864,2364,0.787,2365,0.864,2366,0.787,2367,0.864,2368,0.864,2369,0.864,2370,3.862,2371,0.864,2372,0.864,2373,0.864,2374,3.862,2375,0.864,2376,3.862,2377,2.28,2378,2.28,2379,0.864,2380,0.864,2381,0.864,2382,0.864,2383,0.864,2384,0.864,2385,1.473,2386,5.024,2387,0.864,2388,0.864,2389,2.28,2390,0.787,2391,2.867,2392,0.864,2393,0.864,2394,0.864,2395,4.256,2396,2.612,2397,0.864,2398,0.864,2399,3.391,2400,1.617,2401,1.617,2402,0.864,2403,2.867,2404,0.864,2405,2.28,2406,2.28,2407,0.864,2408,0.864,2409,0.864,2410,0.864]],["component/23",[10,0.732]],["title/24",[18,25.92,76,39.892]],["name/24",[13,1.169]],["text/24",[18,3.791,19,3.255,20,2.668,24,2.608,29,4.958,31,2.774,50,3.404,51,2.805,58,3.007,59,2.555,60,4.473,61,4.243,62,3.007,63,3.782,64,2.97,68,3.458,76,6.573,79,4.7,86,3.576,93,4.7,115,3.302,123,3.86,145,3.782,160,3.007,176,4.035,243,4.364,259,5.7,269,4.243,360,6.226,383,5.048,405,4.657,440,3.641,506,5.835,518,3.458,721,5.7,803,5.058,831,5.7,1001,5.333,1152,5.058,1188,5.333,2142,5.7,2187,4.134,2411,5.7,2412,5.333]],["component/24",[10,0.732]],["title/25-1",[16,31.91]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[310,47.547]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[265,36.877,2413,46.235]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[265,36.877,2414,46.235]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25-5",[265,30.595,2414,38.359,2415,43.222]],["name/25-5",[]],["text/25-5",[]],["component/25-5",[]],["title/25-6",[73,26.516,265,36.877]],["name/25-6",[]],["text/25-6",[]],["component/25-6",[]],["title/25-7",[474,39.778]],["name/25-7",[]],["text/25-7",[]],["component/25-7",[]],["title/25-8",[20,18.242,297,39.892]],["name/25-8",[]],["text/25-8",[]],["component/25-8",[]],["title/25-9",[475,33.759]],["name/25-9",[]],["text/25-9",[]],["component/25-9",[]],["title/25-10",[20,18.242,2163,39.892]],["name/25-10",[]],["text/25-10",[]],["component/25-10",[]],["title/25-11",[20,18.242,738,38.782]],["name/25-11",[]],["text/25-11",[]],["component/25-11",[]],["title/25-12",[475,33.759]],["name/25-12",[]],["text/25-12",[]],["component/25-12",[]],["title/25-13",[20,18.242,176,36.877]],["name/25-13",[]],["text/25-13",[]],["component/25-13",[]],["title/25-14",[20,15.135,180,26.225,575,24.337]],["name/25-14",[]],["text/25-14",[]],["component/25-14",[]],["title/25-15",[475,33.759]],["name/25-15",[]],["text/25-15",[]],["component/25-15",[]],["title/25-16",[20,15.135,180,26.225,525,26.661]],["name/25-16",[]],["text/25-16",[]],["component/25-16",[]],["title/25-17",[475,33.759]],["name/25-17",[]],["text/25-17",[]],["component/25-17",[]],["title/25-18",[20,15.135,310,31.348,575,24.337]],["name/25-18",[]],["text/25-18",[]],["component/25-18",[]],["title/25-19",[475,33.759]],["name/25-19",[]],["text/25-19",[]],["component/25-19",[]],["title/25-20",[330,36.045,475,26.827]],["name/25-20",[]],["text/25-20",[]],["component/25-20",[]],["title/25-21",[89,22.32,263,24.57]],["name/25-21",[]],["text/25-21",[]],["component/25-21",[]],["title/25-22",[263,24.57,2416,57.192]],["name/25-22",[]],["text/25-22",[]],["component/25-22",[]],["title/25-23",[137,34.565,176,36.877]],["name/25-23",[]],["text/25-23",[]],["component/25-23",[]],["title/25-24",[89,22.32,560,37.784]],["name/25-24",[]],["text/25-24",[]],["component/25-24",[]],["title/25-25",[32,35.278,176,36.877]],["name/25-25",[]],["text/25-25",[]],["component/25-25",[]],["title/25-26",[59,17.47,263,24.57]],["name/25-26",[]],["text/25-26",[]],["component/25-26",[]],["title/25-27",[103,33.9,2417,52.097]],["name/25-27",[]],["text/25-27",[]],["component/25-27",[]],["title/25-28",[88,30.637,148,25.635]],["name/25-28",[]],["text/25-28",[]],["component/25-28",[]],["title/25-29",[620,44.233,621,44.233]],["name/25-29",[]],["text/25-29",[]],["component/25-29",[]],["title/25",[56,36.913]],["name/25",[13,1.169]],["text/25",[0,0.34,4,0.27,9,0.33,12,0.382,15,2.011,16,0.21,17,4.107,18,0.771,19,0.687,20,3.175,24,0.55,25,0.233,27,2.121,30,0.512,31,2.305,32,3.989,33,0.798,35,0.275,37,0.352,38,0.266,42,0.33,43,0.656,44,0.618,50,2.058,51,0.592,52,0.298,53,0.9,56,2.061,57,0.23,58,0.227,59,0.915,60,2.954,62,0.227,64,1.554,65,0.28,66,0.53,68,0.729,69,0.872,73,1.639,75,0.261,77,1.343,79,1.155,82,0.33,86,0.521,88,3.85,89,3.317,90,2.639,92,0.305,98,0.668,100,1.782,101,0.257,102,0.396,103,1.416,105,1.744,107,0.94,108,3.76,110,0.814,112,0.298,114,0.588,115,0.481,116,0.321,119,0.782,121,2.571,124,0.382,125,0.872,133,0.982,134,1.186,135,1.833,136,0.705,137,2.563,139,0.34,140,0.34,144,1.155,145,2.287,146,0.286,148,3.832,149,2.307,150,0.403,151,0.521,155,0.679,160,2.139,167,0.286,169,1.268,173,0.352,174,0.33,176,3.123,177,0.782,180,3.295,183,1.579,187,2.271,196,0.366,199,0.679,200,1.296,201,1.358,202,1.186,220,0.253,221,0.618,226,0.305,235,0.298,236,0.382,241,0.949,248,0.679,253,0.292,254,0.489,258,0.851,263,2.501,264,3.059,265,3.754,267,0.305,269,0.618,271,0.286,272,0.28,276,0.768,279,0.33,281,0.34,286,0.366,297,2.639,298,1.667,299,0.382,300,0.312,301,0.512,306,2.064,310,1.358,313,1.326,316,0.366,317,0.34,324,0.366,325,1.266,328,1.072,330,1.889,331,2.673,334,0.298,336,0.366,342,0.321,343,1.072,348,0.33,351,0.718,353,0.34,357,0.34,359,0.292,360,0.352,362,0.737,370,0.382,373,0.34,381,0.705,383,1.754,384,4.509,386,0.832,391,0.636,392,0.27,394,1.889,399,0.602,400,0.366,401,0.298,402,0.33,420,0.636,422,0.768,431,0.275,438,0.321,440,1.196,443,0.705,445,0.431,446,0.312,450,1.941,451,0.656,462,0.298,464,0.679,468,1.096,470,1.028,475,3.087,477,0.33,479,1.931,490,0.298,491,0.275,492,1.582,500,2.398,501,0.705,502,1.743,503,0.366,504,1.268,505,0.34,506,0.33,510,0.602,512,0.575,516,0.382,518,2.344,520,2.423,523,2.28,524,2.09,525,2.614,526,2.639,527,4.811,529,1.021,549,0.33,550,0.949,552,1.719,553,1.662,554,1.326,555,4.029,556,0.382,557,0.679,558,1.579,559,1.434,560,1.579,561,1.028,562,0.679,563,0.618,564,0.366,565,0.366,566,0.352,567,0.352,568,1.343,569,0.382,570,0.352,571,1.62,572,0.366,573,0.382,574,1.021,575,3.687,576,0.982,577,0.366,578,0.352,579,0.33,580,0.382,581,0.949,582,0.33,583,0.382,584,0.366,585,0.737,586,0.737,587,0.705,588,0.33,589,0.382,590,1.266,591,0.982,592,1.186,593,0.34,594,0.382,595,0.382,596,0.352,597,3.108,598,0.382,599,0.366,600,1.394,601,0.737,602,0.34,603,1.434,604,0.366,605,0.305,606,0.34,607,0.737,608,0.949,609,1.315,610,0.656,611,0.366,612,0.305,613,0.352,614,0.352,615,0.352,616,0.352,617,0.382,618,0.33,619,0.321,620,2.09,621,3.443,622,0.382,623,0.737,624,0.352,625,0.679,626,1.296,627,0.737,628,0.737,638,0.33,642,0.575,644,0.34,652,0.488,654,2.544,657,1.223,658,0.679,659,0.94,663,0.305,669,0.321,674,0.33,678,0.737,683,1.072,684,0.403,694,0.236,707,0.366,712,1.021,723,0.679,736,0.321,738,3.155,739,1.223,749,0.562,751,0.352,763,0.305,780,0.849,781,0.352,805,0.382,815,0.588,832,0.366,833,0.352,839,0.352,844,1.59,869,0.403,887,0.366,891,0.403,924,2.185,933,0.403,947,0.403,952,1.315,953,0.431,954,0.431,957,0.403,969,0.737,984,3.915,986,0.679,988,0.737,991,0.737,992,0.366,1120,0.34,1138,0.403,1142,0.382,1153,0.382,1158,0.352,1161,1.315,1162,1.434,1197,0.366,1203,0.431,1237,0.403,1240,1.667,1249,0.679,1267,1.315,1282,0.382,1284,0.366,1291,0.851,1303,1.326,1325,0.777,1331,1.662,1332,1.59,1348,0.382,1398,0.737,1412,0.83,1420,0.83,1432,1.449,1440,0.431,1443,0.921,1445,0.602,1446,0.431,1459,0.705,1460,0.431,1462,1.067,1463,3.014,1464,0.83,1466,0.83,1467,0.83,1468,0.431,1478,0.382,1492,0.777,1516,0.403,1522,0.431,1533,0.777,1541,0.737,1554,1.375,1555,0.366,1565,0.321,1567,0.777,1568,1.375,1600,1.021,1603,1.021,1604,1.449,1609,1.067,1661,0.34,1671,0.382,1679,0.83,1681,0.382,1694,0.382,1841,0.33,1848,0.352,1953,1.186,1958,0.431,1994,0.431,1996,0.382,2014,0.403,2016,0.366,2051,0.83,2064,0.312,2121,0.83,2135,1.315,2140,0.403,2143,0.366,2158,0.431,2160,0.382,2161,1.449,2163,0.921,2199,0.777,2209,0.403,2229,0.366,2244,0.403,2278,0.777,2290,0.366,2328,0.431,2330,0.403,2395,0.83,2411,0.431,2412,0.403,2413,2.185,2414,4.588,2415,2.462,2417,1.549,2418,2.73,2419,0.473,2420,1.7,2421,1.873,2422,0.473,2423,0.473,2424,0.473,2425,0.912,2426,1.7,2427,0.912,2428,0.912,2429,0.473,2430,0.473,2431,0.473,2432,0.473,2433,0.473,2434,0.473,2435,1.752,2436,2.056,2437,2.056,2438,1.7,2439,1.752,2440,1.375,2441,1.873,2442,0.83,2443,1.873,2444,0.473,2445,0.473,2446,0.473,2447,0.473,2448,0.431,2449,0.473,2450,0.473,2451,1.873,2452,0.83,2453,1.202,2454,0.431,2455,1.202,2456,0.431,2457,0.912,2458,0.473,2459,0.473,2460,0.431,2461,0.431,2462,0.431,2463,0.473,2464,0.473,2465,0.473,2466,0.473,2467,0.473,2468,2.303,2469,2.177,2470,0.912,2471,2.056,2472,0.473,2473,0.473,2474,0.473,2475,0.473,2476,0.473,2477,0.473,2478,0.473,2479,0.473,2480,0.473,2481,0.473,2482,0.473,2483,0.473,2484,0.473,2485,0.473,2486,0.912,2487,0.912,2488,0.912,2489,0.473,2490,0.473,2491,0.473,2492,0.473,2493,0.473,2494,0.473,2495,0.473,2496,0.473,2497,0.473,2498,0.912,2499,0.431,2500,0.83,2501,0.473,2502,0.473,2503,1.021,2504,0.366,2505,0.403,2506,0.473,2507,0.473,2508,0.473,2509,0.473,2510,0.366,2511,0.912,2512,0.431]],["component/25",[10,0.732]],["title/26-1",[16,31.91]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[57,35.015]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26-3",[307,41.875]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["title/26-4",[474,39.778]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["title/26-5",[373,41.14,386,36.045]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["title/26",[20,15.135,51,21.268,304,36.698]],["name/26",[13,1.169]],["text/26",[10,1.879,17,4.371,19,1.53,20,2.738,24,2.509,30,1.653,31,3.613,35,3.502,50,1.6,51,4.142,55,1.712,57,1.431,60,3.287,64,3.287,66,1.712,73,3.778,77,1.653,82,2.052,84,2.275,85,2.275,89,3.35,100,2.115,101,2.595,102,3.005,105,1.712,107,1.626,108,1.653,125,2.447,146,1.778,148,1.319,149,1.6,160,2.293,170,3.173,176,1.897,180,2.637,183,3.152,192,1.815,220,1.576,263,4.326,267,1.897,276,2.776,304,5.355,306,1.854,307,2.776,317,2.116,344,2.507,348,2.052,353,4.329,379,1.744,383,1.576,388,2.19,392,1.681,421,1.815,479,2.293,488,1.995,489,2.052,490,1.854,491,2.776,492,3.176,493,1.995,496,3.328,497,2.116,498,3.235,499,1.995,500,1.995,504,1.815,517,2.275,524,1.53,538,2.378,555,1.744,579,4.829,582,2.052,611,2.275,630,2.116,633,2.19,640,2.507,642,1.854,643,2.507,644,4.329,650,3.152,652,2.556,654,3.432,655,2.378,656,3.152,657,2.116,659,2.637,661,2.884,663,3.076,668,3.328,669,1.995,670,2.19,671,2.116,672,2.68,673,2.507,674,2.052,688,4.346,738,1.995,758,4.066,986,2.19,1144,1.944,1162,3.328,1469,2.116,1480,2.68,1575,2.507,1576,2.68,1578,2.68,1579,2.68,1674,2.68,1680,2.68,1716,2.507,1749,1.944,1945,2.378,2163,2.052,2229,3.69,2513,2.942,2514,2.942,2515,2.942,2516,2.942,2517,2.942,2518,2.942,2519,2.942,2520,2.942,2521,2.942,2522,4.771,2523,2.942,2524,2.942,2525,2.942,2526,2.942,2527,4.771,2528,2.942,2529,2.942,2530,2.942,2531,2.942]],["component/26",[10,0.732]],["title/27-1",[318,42.659]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[103,33.9,592,39.892]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[16,31.91]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[57,27.826,58,27.482]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[51,25.635,73,26.516]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[57,35.015]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[307,41.875]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27-8",[56,36.913]],["name/27-8",[]],["text/27-8",[]],["component/27-8",[]],["title/27-9",[474,39.778]],["name/27-9",[]],["text/27-9",[]],["component/27-9",[]],["title/27-10",[53,15.273,89,15.822,93,22.78,736,27.492]],["name/27-10",[]],["text/27-10",[]],["component/27-10",[]],["title/27-11",[53,17.874,93,26.661,575,24.337]],["name/27-11",[]],["text/27-11",[]],["component/27-11",[]],["title/27-12",[57,27.826,58,27.482]],["name/27-12",[]],["text/27-12",[]],["component/27-12",[]],["title/27-13",[51,25.635,73,26.516]],["name/27-13",[]],["text/27-13",[]],["component/27-13",[]],["title/27-14",[56,36.913]],["name/27-14",[]],["text/27-14",[]],["component/27-14",[]],["title/27-15",[475,33.759]],["name/27-15",[]],["text/27-15",[]],["component/27-15",[]],["title/27-16",[60,27.149,63,34.565]],["name/27-16",[]],["text/27-16",[]],["component/27-16",[]],["title/27",[113,51.77]],["name/27",[13,1.169]],["text/27",[15,3.251,16,1.171,17,1.677,18,0.464,19,0.532,20,1.537,24,1.101,25,0.504,27,0.54,30,1.064,31,2.315,32,0.631,33,0.619,35,0.595,38,1.064,50,2.376,51,3.311,53,2.445,55,1.537,56,2.865,57,1.88,58,1.582,59,1.334,60,3.676,61,0.694,62,0.492,63,0.619,64,2.074,66,0.595,69,0.676,73,1.791,77,2.455,79,0.575,83,1.745,84,0.792,86,2.208,87,4.655,88,3.329,89,3.933,90,1.951,92,0.66,93,4.039,97,0.872,98,0.958,100,2.756,101,0.557,102,1.677,103,3.684,105,0.595,107,1.46,108,3.788,110,1.168,112,0.645,113,4.471,121,0.566,123,0.631,124,0.827,125,0.971,129,0.827,133,1.409,137,1.99,144,1.484,145,0.619,148,2.504,149,1.03,151,1.082,152,2.552,153,0.827,160,1.856,162,0.827,166,2.335,169,0.631,175,1.464,180,1.046,200,1.665,201,1.251,220,0.548,221,0.694,248,0.762,254,0.379,258,0.66,260,2.075,261,0.872,262,0.872,263,1.135,264,0.827,265,1.221,267,0.66,271,0.619,272,0.607,281,0.736,300,0.676,306,0.645,307,1.537,310,0.676,317,0.736,318,1.566,324,0.792,325,0.762,327,3.586,330,0.645,331,2.075,342,0.694,343,1.665,350,0.694,352,0.762,359,0.631,380,0.792,383,2.581,384,0.566,386,1.665,391,0.714,392,1.51,394,0.645,399,1.251,402,0.714,431,0.595,438,0.694,440,0.595,443,1.464,450,1.122,453,1.613,460,0.792,464,0.762,468,1.703,470,1.144,475,1.544,479,3.351,487,1.53,488,0.694,489,0.714,490,0.645,491,3.038,492,1.394,493,0.694,496,1.321,497,0.736,498,1.284,499,0.694,500,0.694,501,2.043,502,1.703,503,0.792,504,1.629,505,2.368,506,0.714,507,0.872,508,0.792,509,0.872,510,1.251,512,1.193,517,0.792,518,0.566,520,0.827,521,0.872,523,2.817,524,2.905,525,2.171,526,2.695,527,3.541,536,0.595,549,0.714,551,1.251,552,0.736,553,2.662,554,0.66,555,3.684,556,0.827,557,1.409,558,2.886,559,1.321,560,0.676,561,3.756,562,1.409,563,1.791,564,0.792,565,0.792,566,0.762,567,0.762,568,1.064,569,0.827,570,0.762,571,2.233,572,0.792,573,0.827,574,0.792,575,4.131,576,0.762,577,0.792,578,0.762,579,0.714,580,0.827,581,1.9,582,0.714,583,0.827,584,0.792,585,1.53,586,0.827,587,2.043,588,0.714,589,0.827,590,0.762,591,1.409,592,5.513,593,0.736,594,0.827,595,0.827,596,1.409,597,3.379,598,0.827,599,0.792,600,1.791,601,0.827,602,0.736,603,1.321,604,0.792,605,0.66,606,0.736,607,0.827,608,0.736,609,0.792,610,1.362,611,0.792,612,0.66,613,0.762,614,0.762,615,0.762,616,0.762,617,0.827,618,1.843,619,1.791,620,2.546,621,3.727,622,0.827,623,0.827,624,0.762,625,0.762,626,0.645,627,0.827,628,0.827,629,0.762,633,0.762,642,2.075,650,0.676,652,0.548,683,2.435,689,1.409,704,1.966,736,1.284,745,0.932,762,0.792,780,0.945,815,1.703,834,0.827,922,0.827,950,0.932,987,1.251,990,0.792,1120,0.736,1143,0.792,1144,0.676,1158,0.762,1162,1.321,1200,0.932,1221,0.872,1240,1.321,1303,1.221,1462,0.827,1478,1.53,1524,0.932,1532,0.714,1553,0.827,1558,0.932,1570,0.932,1604,0.872,1667,0.827,1683,0.792,1749,1.745,1848,0.762,1900,0.932,1943,0.932,1953,0.714,2014,1.613,2016,0.792,2049,1.725,2060,0.827,2062,0.872,2064,0.676,2071,1.53,2074,0.932,2092,0.932,2096,0.932,2135,1.464,2205,0.932,2510,1.464,2532,1.893,2533,2.642,2534,1.725,2535,1.023,2536,1.893,2537,1.023,2538,0.694,2539,0.762,2540,1.893,2541,2.642,2542,1.023,2543,1.53,2544,1.023,2545,1.023,2546,1.023,2547,1.023,2548,1.023,2549,1.023,2550,1.023,2551,1.893,2552,1.023,2553,0.932,2554,1.023,2555,1.023,2556,1.023,2557,1.023,2558,1.023,2559,1.893,2560,1.023,2561,1.023,2562,0.932,2563,1.023,2564,1.023,2565,3.519,2566,1.023,2567,1.023,2568,1.023,2569,1.893,2570,1.893,2571,1.893,2572,1.893,2573,1.893,2574,1.893,2575,1.023,2576,1.023,2577,1.023,2578,0.932,2579,1.023,2580,1.023,2581,1.023,2582,1.023,2583,1.725,2584,1.023]],["component/27",[10,0.732]],["title/28-1",[16,31.91]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[89,22.32,263,24.57]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28-3",[474,39.778]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["title/28-4",[24,23.84,475,26.827]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["title/28-5",[738,48.803]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["title/28-6",[474,39.778]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["title/28-7",[53,17.874,59,14.494,73,21.999]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["title/28-8",[474,39.778]],["name/28-8",[]],["text/28-8",[]],["component/28-8",[]],["title/28-9",[24,23.84,475,26.827]],["name/28-9",[]],["text/28-9",[]],["component/28-9",[]],["title/28-10",[53,17.874,59,14.494,74,28.125]],["name/28-10",[]],["text/28-10",[]],["component/28-10",[]],["title/28-11",[474,39.778]],["name/28-11",[]],["text/28-11",[]],["component/28-11",[]],["title/28-12",[24,23.84,475,26.827]],["name/28-12",[]],["text/28-12",[]],["component/28-12",[]],["title/28-13",[53,21.545,113,41.14]],["name/28-13",[]],["text/28-13",[]],["component/28-13",[]],["title/28-14",[474,39.778]],["name/28-14",[]],["text/28-14",[]],["component/28-14",[]],["title/28-15",[24,23.84,475,26.827]],["name/28-15",[]],["text/28-15",[]],["component/28-15",[]],["title/28-16",[180,31.61,575,29.334]],["name/28-16",[]],["text/28-16",[]],["component/28-16",[]],["title/28-17",[474,39.778]],["name/28-17",[]],["text/28-17",[]],["component/28-17",[]],["title/28-18",[24,23.84,475,26.827]],["name/28-18",[]],["text/28-18",[]],["component/28-18",[]],["title/28-19",[180,31.61,525,32.135]],["name/28-19",[]],["text/28-19",[]],["component/28-19",[]],["title/28-20",[474,39.778]],["name/28-20",[]],["text/28-20",[]],["component/28-20",[]],["title/28-21",[24,23.84,475,26.827]],["name/28-21",[]],["text/28-21",[]],["component/28-21",[]],["title/28",[57,27.826,58,27.482]],["name/28",[13,1.169]],["text/28",[4,1.011,10,0.195,17,4.52,18,0.114,19,0.131,20,2.262,24,0.657,25,0.124,27,0.502,30,0.142,31,2.405,32,0.305,34,0.667,35,1.537,38,0.885,42,0.176,47,1.967,50,0.635,51,0.523,53,2.163,56,1.185,57,2.126,58,1.419,59,1.657,60,4.467,61,0.645,62,0.457,63,0.575,64,3.343,66,1.629,69,0.908,71,0.305,72,0.335,73,0.73,74,0.692,77,3.139,83,0.908,87,0.159,88,2.564,89,3.567,90,1.369,92,0.752,93,0.142,98,0.25,100,3.417,101,0.269,102,0.597,105,0.423,106,1.111,107,1.633,108,5.268,112,0.993,113,1.272,115,0.261,120,0.705,121,0.402,125,0.598,133,0.188,134,0.176,135,0.791,136,0.562,137,0.952,139,1.133,140,0.839,144,2.125,145,0.439,148,3.877,149,0.517,151,1.773,152,0.166,160,1.27,167,0.152,169,0.972,174,0.176,175,0.902,176,1.016,180,3.807,183,0.166,187,0.736,196,0.195,200,0.993,202,0.345,220,0.844,226,0.319,235,0.311,236,0.204,243,0.176,254,0.791,263,2.708,265,0.752,267,1.016,269,1.567,271,0.952,272,0.431,276,0.147,281,1.133,286,0.902,301,0.278,306,0.599,307,0.147,313,0.162,318,1.159,328,1.346,330,1.765,331,0.458,334,0.458,336,0.902,342,1.068,343,1.765,348,1.953,350,1.068,351,0.269,370,0.943,381,0.382,383,0.625,384,1.548,391,1.099,392,0.9,394,0.159,399,1.041,420,0.345,421,0.305,424,0.382,438,0.171,440,0.916,450,1.839,451,1.783,462,1.346,468,1.14,475,1.163,476,0.771,477,1.611,478,1.063,479,1.56,488,0.171,489,0.176,490,0.311,491,1.344,492,1.032,493,1.199,496,0.345,498,0.171,499,0.335,500,0.335,502,0.162,504,2.089,505,1.133,512,0.159,518,0.76,523,2.356,524,2.639,525,3.094,526,3.474,527,5.447,528,0.421,531,0.215,532,0.541,533,0.541,534,0.588,536,0.147,537,0.215,540,0.188,541,0.181,542,4.106,547,0.908,548,0.355,549,0.345,550,0.355,551,0.326,554,1.14,555,3.404,558,3.844,559,2.89,560,1.638,561,2.77,562,2.084,563,2.564,564,1.218,565,1.218,566,1.967,567,1.172,568,2.125,570,1.172,571,2.564,572,1.218,574,1.218,575,3.233,576,2.416,578,2.084,581,1.133,584,1.218,588,1.729,590,1.172,591,2.084,592,1.729,593,3.443,597,0.735,599,1.218,600,2.477,602,1.133,603,0.959,604,1.218,605,1.016,606,1.133,608,0.839,609,0.902,610,1.133,612,1.016,614,2.416,615,1.172,619,0.171,626,0.311,629,0.708,642,0.159,644,1.536,652,2.905,659,2.998,674,0.176,678,0.204,683,0.159,685,0.421,694,0.582,696,1.917,707,0.382,716,0.23,736,0.791,738,1.448,749,0.155,776,0.181,783,0.994,790,0.204,796,0.868,805,0.399,838,1.111,869,0.994,931,1.023,932,2.388,955,1.111,969,0.204,986,0.368,988,0.204,998,0.399,1120,0.181,1144,0.771,1162,0.507,1190,0.45,1240,0.345,1249,0.188,1260,0.215,1267,1.787,1282,1.43,1291,0.162,1303,0.886,1311,0.368,1348,0.204,1443,0.814,1452,1.435,1453,1.435,1459,2.166,1462,0.204,1463,0.62,1494,1.063,1500,0.45,1502,1.063,1503,1.946,1505,0.902,1533,0.215,1541,0.204,1554,0.204,1555,1.063,1565,0.932,1567,0.994,1600,0.195,1603,0.562,1609,0.399,1648,2.551,1650,0.23,1661,0.181,1739,0.45,1823,1.063,1827,0.45,1953,0.345,2006,3.444,2064,0.166,2135,2.285,2139,2.551,2140,0.215,2160,0.204,2161,0.215,2199,0.215,2229,0.902,2244,1.172,2278,0.62,2396,1.252,2448,0.23,2451,0.866,2452,0.23,2453,0.23,2454,0.23,2455,0.45,2456,0.23,2461,0.23,2462,0.23,2468,0.421,2469,0.45,2503,0.735,2553,0.23,2565,0.23,2585,0.252,2586,0.494,2587,0.252,2588,1.769,2589,0.252,2590,0.23,2591,0.494,2592,0.494,2593,2.31,2594,0.252,2595,1.167,2596,0.252,2597,0.252,2598,0.252,2599,0.252,2600,0.252,2601,2.31,2602,3.781,2603,1.252,2604,0.252,2605,0.252,2606,0.252,2607,0.494,2608,0.951,2609,4.37,2610,0.252,2611,0.252,2612,0.252,2613,0.252,2614,0.494,2615,3.522,2616,2.136,2617,1.167,2618,1.167,2619,1.167,2620,1.167,2621,1.167,2622,2.801,2623,1.167,2624,1.167,2625,0.994,2626,2.136,2627,2.642,2628,1.167,2629,2.479,2630,3.522,2631,1.167,2632,1.167,2633,2.136,2634,1.167,2635,2.801,2636,2.801,2637,2.801,2638,1.575,2639,2.801,2640,1.575,2641,2.801,2642,1.575,2643,1.575,2644,1.575,2645,2.801,2646,1.575,2647,2.801,2648,1.575,2649,1.575,2650,2.801,2651,1.575,2652,1.575,2653,1.575,2654,1.575,2655,1.575,2656,1.575,2657,0.252,2658,0.252,2659,0.252,2660,0.494,2661,1.167,2662,0.727,2663,0.252,2664,0.252,2665,0.252,2666,0.252,2667,0.252,2668,0.45,2669,0.494,2670,0.951,2671,1.375,2672,0.252,2673,1.375,2674,0.951,2675,0.727,2676,0.494,2677,0.252,2678,1.375,2679,0.494,2680,0.494,2681,0.494,2682,0.494,2683,0.494,2684,0.951,2685,0.45,2686,0.951,2687,0.252,2688,0.494,2689,0.494,2690,0.252,2691,0.252,2692,0.494,2693,0.494,2694,0.252,2695,0.252,2696,0.252,2697,0.23,2698,0.252,2699,0.494,2700,0.951,2701,0.252,2702,0.494,2703,0.494,2704,0.252,2705,0.252,2706,0.252,2707,0.252,2708,0.494,2709,0.494,2710,0.252]],["component/28",[10,0.732]],["title/29",[20,12.932,65,24.031,66,23.589,2711,34.552]],["name/29",[2711,1.996]],["text/29",[65,5.645,1361,6.643]],["component/29",[10,0.732]],["title/30-1",[500,38.782,2712,52.097]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30",[2713,43.496]],["name/30",[2713,1.416]],["text/30",[65,5.645,66,5.541]],["component/30",[10,0.732]],["title/31",[65,33.9,66,33.276]],["name/31",[13,1.169]],["text/31",[65,5.542,66,5.44,2711,7.968,2713,5.65]],["component/31",[10,0.732]],["title/32-1",[148,25.635,652,30.637]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32-2",[2714,57.192,2715,52.097]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["title/32-3",[148,21.268,2716,47.449,2717,40.438]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["title/32-4",[89,18.517,332,28.677,659,26.225]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["title/32-5",[2718,57.192,2719,52.097]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["title/32-6",[89,18.517,479,22.8,2720,47.449]],["name/32-6",[]],["text/32-6",[]],["component/32-6",[]],["title/32-7",[118,23.999,748,22.305,780,17.668,793,24.686,2721,35.391]],["name/32-7",[]],["text/32-7",[]],["component/32-7",[]],["title/32-8",[94,30.637,2722,57.192]],["name/32-8",[]],["text/32-8",[]],["component/32-8",[]],["title/32-9",[89,18.517,830,35.316,2723,43.222]],["name/32-9",[]],["text/32-9",[]],["component/32-9",[]],["title/32-10",[89,18.517,524,24.682,2724,47.449]],["name/32-10",[]],["text/32-10",[]],["component/32-10",[]],["title/32-11",[170,26.213,661,34.565]],["name/32-11",[]],["text/32-11",[]],["component/32-11",[]],["title/32-12",[103,28.125,548,34.132,2725,47.449]],["name/32-12",[]],["text/32-12",[]],["component/32-12",[]],["title/32-13",[100,21.038,1153,38.359,2726,47.449]],["name/32-13",[]],["text/32-13",[]],["component/32-13",[]],["title/32-14",[68,22.408,100,17.976,422,23.589,2727,40.542]],["name/32-14",[]],["text/32-14",[]],["component/32-14",[]],["title/32-15",[68,26.225,170,21.748,2728,47.449]],["name/32-15",[]],["text/32-15",[]],["component/32-15",[]],["title/32-16",[166,34.565,663,36.877]],["name/32-16",[]],["text/32-16",[]],["component/32-16",[]],["title/32-17",[87,29.905,166,28.677,2729,47.449]],["name/32-17",[]],["text/32-17",[]],["component/32-17",[]],["title/32-18",[33,28.677,166,28.677,2730,47.449]],["name/32-18",[]],["text/32-18",[]],["component/32-18",[]],["title/32-19",[166,28.677,838,38.359,2731,47.449]],["name/32-19",[]],["text/32-19",[]],["component/32-19",[]],["title/32-20",[102,24.826,656,37.784]],["name/32-20",[]],["text/32-20",[]],["component/32-20",[]],["title/32-21",[102,20.597,479,22.8,2732,47.449]],["name/32-21",[]],["text/32-21",[]],["component/32-21",[]],["title/32-22",[694,28.551,887,44.233]],["name/32-22",[]],["text/32-22",[]],["component/32-22",[]],["title/32-23",[276,23.589,694,20.24,779,31.356,2733,40.542]],["name/32-23",[]],["text/32-23",[]],["component/32-23",[]],["title/32-24",[777,46.235,2734,57.192]],["name/32-24",[]],["text/32-24",[]],["component/32-24",[]],["title/32-25",[121,31.61,889,52.097]],["name/32-25",[]],["text/32-25",[]],["component/32-25",[]],["title/32-26",[33,28.677,2735,47.449,2736,47.449]],["name/32-26",[]],["text/32-26",[]],["component/32-26",[]],["title/32-27",[547,37.784,2737,57.192]],["name/32-27",[]],["text/32-27",[]],["component/32-27",[]],["title/32-28",[103,24.031,1122,34.552,1303,26.142,2738,40.542]],["name/32-28",[]],["text/32-28",[]],["component/32-28",[]],["title/32-29",[17,17.599,796,30.175,1166,31.356,2739,40.542]],["name/32-29",[]],["text/32-29",[]],["component/32-29",[]],["title/32-30",[187,30.637,2740,57.192]],["name/32-30",[]],["text/32-30",[]],["component/32-30",[]],["title/32-31",[101,19.252,379,20.978,778,26.341,826,28.611,2741,35.391]],["name/32-31",[]],["text/32-31",[]],["component/32-31",[]],["title/32-32",[279,28.279,778,30.175,796,30.175,2742,40.542]],["name/32-32",[]],["text/32-32",[]],["component/32-32",[]],["title/32-33",[548,41.14,2743,57.192]],["name/32-33",[]],["text/32-33",[]],["component/32-33",[]],["title/32-34",[170,21.748,830,35.316,2744,47.449]],["name/32-34",[]],["text/32-34",[]],["component/32-34",[]],["title/32-35",[33,28.677,469,35.316,2745,47.449]],["name/32-35",[]],["text/32-35",[]],["component/32-35",[]],["title/32-36",[778,42.567,2746,57.192]],["name/32-36",[]],["text/32-36",[]],["component/32-36",[]],["title/32-37",[38,26.661,739,34.132,1167,40.438]],["name/32-37",[]],["text/32-37",[]],["component/32-37",[]],["title/32-38",[53,17.874,2504,36.698,2747,47.449]],["name/32-38",[]],["text/32-38",[]],["component/32-38",[]],["title/32",[20,15.135,1377,40.438,2748,38.359]],["name/32",[13,1.169]],["text/32",[4,0.432,11,0.543,17,5.099,18,0.342,19,0.393,20,0.646,24,0.594,29,0.448,31,3.201,33,4.532,44,0.512,50,0.411,52,0.476,53,0.537,54,0.512,55,0.44,56,0.387,59,0.782,60,1.216,64,0.359,66,0.44,68,3.818,69,1.692,79,0.424,86,0.432,87,2.684,89,2.817,93,0.424,94,3.186,98,0.721,100,2.038,101,0.776,102,2.256,103,2.91,107,0.418,119,0.448,144,0.801,147,0.644,148,1.366,149,0.776,151,1.994,155,0.562,160,0.973,166,3.594,167,0.457,170,1.397,174,2.126,181,0.499,187,0.764,216,0.644,218,1.412,226,0.487,235,1.276,254,1.818,256,2.071,271,1.223,272,0.845,276,1.178,294,1.152,305,0.527,306,0.898,313,0.487,326,1.412,331,2.684,334,1.276,348,0.994,351,0.411,357,2.509,359,0.879,371,0.543,379,0.448,383,0.405,384,0.418,386,0.476,393,0.967,394,0.476,406,2.464,407,0.611,408,0.611,421,0.466,422,1.178,423,1.565,424,0.584,431,1.178,438,0.512,440,0.44,443,0.584,446,0.499,447,0.562,450,1.806,451,1.025,462,2.452,469,2.596,470,2.108,472,1.844,474,0.418,475,0.354,479,2.209,491,0.829,504,0.466,506,0.527,510,1.692,512,0.476,513,1.025,523,0.487,524,0.742,536,1.491,540,0.562,547,2.814,548,2.799,551,0.942,554,1.652,555,0.448,557,0.562,561,0.862,605,1.652,612,0.487,626,0.476,642,0.476,648,0.543,652,4.017,656,1.692,659,4.144,661,3.964,663,3.165,668,0.527,670,0.562,682,1.025,693,1.787,694,2.728,696,0.584,731,1.025,739,0.543,748,2.199,749,0.879,763,0.919,776,0.543,777,0.611,778,1.061,779,1.103,780,1.741,781,0.562,791,0.644,792,0.644,793,3.625,796,2.268,806,0.584,808,0.584,810,1.103,815,0.919,821,1.215,826,0.611,829,1.152,830,1.907,832,0.584,837,0.611,838,1.152,839,0.562,880,1.299,887,1.103,937,1.844,938,3.544,939,2.333,940,1.299,942,0.688,952,1.103,956,0.584,969,0.611,974,1.299,975,0.688,989,1.299,994,0.688,997,0.688,1122,1.725,1127,0.584,1148,0.688,1153,0.611,1158,1.506,1163,1.844,1173,1.299,1179,1.152,1228,0.644,1242,0.688,1249,1.061,1282,0.611,1283,1.844,1285,0.466,1291,0.487,1296,1.152,1302,0.688,1303,1.652,1342,0.688,1361,1.412,1430,0.644,1445,0.499,1486,0.688,1496,1.299,1553,0.611,1561,1.299,1564,1.299,1568,0.611,1597,0.644,1609,1.152,1644,1.299,1645,1.844,1683,2.357,1716,0.644,1722,0.688,1792,0.562,1800,1.215,1824,1.299,1841,7.109,1848,7.468,1851,7.456,1861,1.299,1921,0.688,1942,0.688,1953,0.527,1955,1.299,1978,0.688,2059,1.215,2062,1.215,2063,0.688,2064,0.499,2075,1.215,2160,0.611,2177,1.299,2179,0.688,2204,0.688,2229,0.584,2290,0.584,2296,1.103,2385,0.688,2440,2.071,2460,0.688,2504,1.103,2715,0.688,2717,0.644,2719,1.299,2749,0.755,2750,1.426,2751,0.755,2752,0.755,2753,0.755,2754,0.755,2755,0.755,2756,0.755,2757,0.755,2758,0.755,2759,0.755,2760,0.755,2761,0.755,2762,1.426,2763,2.024,2764,0.688,2765,0.755,2766,0.755,2767,2.024,2768,1.426,2769,2.562,2770,0.755,2771,0.755,2772,0.755,2773,0.755,2774,0.755,2775,0.755,2776,0.755,2777,1.426,2778,7.977,2779,1.426,2780,1.426,2781,7.219,2782,2.024,2783,0.755,2784,0.755,2785,1.844,2786,1.426,2787,0.755,2788,0.755,2789,2.562,2790,0.755,2791,0.755,2792,1.426,2793,0.755,2794,0.755,2795,1.426,2796,0.755,2797,0.755,2798,0.755,2799,0.755,2800,0.755,2801,0.755,2802,2.562,2803,1.426,2804,0.688,2805,1.426,2806,0.755,2807,2.024,2808,1.426,2809,0.755,2810,0.755,2811,1.426,2812,6.164,2813,2.024,2814,2.562,2815,0.755,2816,0.755,2817,0.755,2818,0.755,2819,1.426,2820,0.755,2821,0.755]],["component/32",[10,0.732]],["title/33-1",[2822,40.542,2823,32.775,2824,34.552,2825,32.775]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33",[2713,43.496]],["name/33",[2713,1.416]],["text/33",[65,5.645,987,6.292]],["component/33",[71,1.147]],["title/34-1",[1894,65.558]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34",[34,27.121,71,29.268,72,32.176]],["name/34",[13,1.169]],["text/34",[5,6.879,20,3.446,24,4.504,50,4.108,71,6.665,72,6.992,73,3.501,100,3.349,135,5.121,137,4.564,450,4.477,749,4.658,1675,6.879,2209,6.436,2256,6.879,2826,8.607,2827,6.879,2828,7.552]],["component/34",[71,1.147]],["title/35-1",[57,35.015]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["title/35-2",[307,41.875]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["title/35",[16,31.91]],["name/35",[16,1.039]],["text/35",[17,3.602,20,3.193,51,2.771,65,4.918,66,3.597,71,6.441,72,5.627,73,2.866,90,4.918,124,6.708,192,3.813,193,4.312,267,3.986,307,3.597,383,4.445,392,3.533,462,5.229,488,4.192,489,4.312,490,5.229,491,3.597,492,4.379,493,4.192,496,5.787,497,4.446,498,5.627,499,4.192,502,5.35,633,4.601,1398,6.708,1922,5.631,2143,6.417,2723,5.631,2829,6.181,2830,6.181,2831,6.181,2832,7.558,2833,6.181]],["component/35",[71,1.147]],["title/36",[474,39.778]],["name/36",[474,1.295]],["text/36",[8,1.979,10,1.047,17,4.996,20,2.078,24,3.582,31,2.488,35,3.791,53,3.356,55,1.547,57,2.137,58,2.11,59,2.203,60,3.424,64,1.262,68,2.427,71,3.461,72,4.418,73,3.021,74,1.576,79,1.494,82,1.854,87,1.676,89,1.714,90,1.576,92,2.832,93,1.494,98,2.839,100,1.947,101,1.446,102,4.488,105,1.547,112,1.676,120,4.827,125,2.252,144,1.494,145,1.607,146,1.607,148,2.92,149,1.446,151,2.51,157,4.201,192,4.449,200,1.676,208,2.149,243,1.854,254,1.626,267,2.832,277,2.266,293,1.854,317,1.912,334,2.768,343,1.676,383,2.353,386,2.768,392,1.52,398,3.743,400,2.056,401,1.676,402,1.854,407,2.149,421,1.64,431,1.547,449,2.266,476,1.756,479,3.466,491,1.547,492,1.403,493,1.803,498,1.803,499,1.803,518,1.469,534,5.831,536,1.547,554,1.714,555,1.576,559,1.854,575,1.364,618,1.854,619,1.803,694,1.327,709,2.149,731,1.912,736,1.803,762,2.056,763,1.714,780,1.327,839,1.979,875,2.422,901,1.912,1316,2.266,1353,1.979,1443,1.854,1516,2.266,1653,4.34,1655,2.422,1749,1.756,2064,1.756,2163,5.418,2603,2.422,2668,2.422,2697,2.422,2834,2.659,2835,2.659,2836,2.659,2837,2.266,2838,2.659,2839,5.611,2840,2.422,2841,2.659,2842,2.659,2843,2.659,2844,2.659,2845,2.659,2846,4.392,2847,4.392,2848,2.659,2849,2.659,2850,2.659,2851,2.659,2852,4.392,2853,2.659,2854,2.659,2855,4.392,2856,2.659,2857,2.659,2858,2.149,2859,2.659,2860,2.422,2861,2.659]],["component/36",[71,1.147]],["title/37-1",[59,12.384,120,20.794,177,24.031,332,24.503]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[59,12.384,89,15.822,177,24.031,524,21.089]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[260,45.359]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37-4",[62,27.482,2862,57.192]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["title/37-5",[479,27.482,568,32.135]],["name/37-5",[]],["text/37-5",[]],["component/37-5",[]],["title/37-6",[254,21.179,568,32.135]],["name/37-6",[]],["text/37-6",[]],["component/37-6",[]],["title/37-7",[393,38.782,568,32.135]],["name/37-7",[]],["text/37-7",[]],["component/37-7",[]],["title/37-8",[568,32.135,1767,52.097]],["name/37-8",[]],["text/37-8",[]],["component/37-8",[]],["title/37-9",[254,21.179,1348,46.235]],["name/37-9",[]],["text/37-9",[]],["component/37-9",[]],["title/37",[2863,39.778]],["name/37",[2863,1.295]],["text/37",[]],["component/37",[115,0.982]],["title/38",[58,27.482,115,30.183]],["name/38",[13,1.169]],["text/38",[16,3.504,18,3.582,20,3.1,25,3.894,27,5.129,58,3.797,115,5.794,318,4.684,392,4.517,464,5.882,490,6.125,701,6.735,2503,6.112,2505,6.735,2863,4.368,2864,7.199,2865,7.903,2866,7.903]],["component/38",[115,0.982]],["title/39",[16,31.91]],["name/39",[16,1.039]],["text/39",[16,3.399,17,3.328,20,2.445,58,5.473,68,4.237,83,6.3,90,4.544,105,4.46,125,3.932,276,4.46,462,4.831,592,5.347,1143,7.376,1469,5.514,2504,7.376,2867,7.666,2868,5.929,2869,7.666,2870,7.666,2871,6.983]],["component/39",[115,0.982]],["title/40-1",[53,27.111]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[475,26.827,1666,48.741]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[59,17.47,177,33.9]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40",[59,17.47,1195,41.14]],["name/40",[59,0.407,1195,0.958]],["text/40",[14,6.467,17,4.774,19,2.823,27,2.864,31,2.406,33,3.279,59,2.673,89,2.961,93,3.049,94,4.065,100,2.406,101,2.952,104,5.459,120,2.783,133,4.039,166,5.289,177,3.216,235,3.42,254,3.509,300,3.585,332,3.279,422,3.157,479,2.607,524,2.823,541,3.903,547,3.585,596,4.039,668,3.785,682,3.903,694,2.709,695,3.68,748,3.42,779,5.869,780,3.788,793,3.785,976,4.197,977,4.943,1341,4.943,1471,4.943,1511,4.943,1618,4.943,1666,8.499,1841,3.785,2064,3.585,2325,4.197,2543,4.387,2562,4.943,2872,5.426,2873,5.426,2874,8.751,2875,5.426,2876,5.426,2877,5.426,2878,5.426,2879,5.426,2880,5.426]],["component/40",[115,0.982]],["title/41",[59,17.47,2538,38.782]],["name/41",[59,0.407,2538,0.903]],["text/41",[102,3.915,170,4.134,422,5.248,1532,6.291,2510,6.976,2539,6.713,2881,9.019,2882,9.019]],["component/41",[115,0.982]],["title/42",[59,17.47,121,31.61]],["name/42",[59,0.407,121,0.736]],["text/42",[20,2.687,59,3.427,114,5.432,121,4.656,276,4.901,475,3.952,626,5.309,1143,7.813,1377,7.179,2504,6.515,2883,9.202]],["component/42",[115,0.982]],["title/43-1",[59,17.47,260,36.045]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[89,22.32,524,29.749]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43",[]],["name/43",[59,0.407,260,0.84]],["text/43",[20,2.989,27,3.933,31,3.304,50,4.516,51,3.721,58,1.969,59,1.89,64,2.937,73,1.9,77,2.303,89,4.387,94,2.195,95,3.733,102,3.604,115,4.382,120,2.102,148,3.721,153,3.313,155,3.05,160,2.973,167,2.477,169,3.816,177,2.429,254,1.518,260,6.131,301,2.303,304,3.17,306,2.583,318,2.429,332,2.477,348,4.315,355,5.273,357,2.948,391,4.315,474,3.42,491,4.336,501,3.17,502,5.353,504,2.528,505,4.45,523,2.643,524,4.319,525,4.188,555,4.418,560,2.708,575,2.102,593,2.948,600,4.195,652,3.992,659,3.42,704,4.605,748,2.583,780,2.046,793,2.859,1195,2.948,1260,5.273,1303,2.643,1432,3.493,1443,2.859,1459,4.785,1489,5.636,1505,3.17,1553,3.313,1565,2.779,2884,4.098,2885,6.187,2886,4.098,2887,4.098]],["component/43",[115,0.982]],["title/44",[59,17.47,2888,46.235]],["name/44",[59,0.407,2888,1.077]],["text/44",[100,3.705,101,5.469,102,3.627,160,4.015,170,3.83,541,7.757,581,7.231,637,9.157,830,6.219,1143,6.462,1884,6.754,2888,6.754]],["component/44",[115,0.982]],["title/45",[30,32.135,59,17.47]],["name/45",[30,0.748,59,0.407]],["text/45",[19,4.57,100,4.593,160,4.222,164,4.78,220,5.549,422,5.112,1925,7.488,1995,8.004,2468,7.488]],["component/45",[115,0.982]],["title/46",[318,42.659]],["name/46",[13,1.169]],["text/46",[27,4.663,30,3.82,59,3.373,102,2.951,104,4.89,115,3.588,121,3.758,164,4.806,169,4.193,170,3.116,177,4.03,220,5.258,260,5.569,422,3.956,563,4.61,568,3.82,626,4.285,704,5.06,749,5.45,1001,5.794,1195,4.89,1532,4.742,1681,5.496,1694,5.496,2187,4.491,2510,5.258,2538,4.61,2539,5.06,2863,4.883,2883,6.193,2889,6.798,2890,7.53]],["component/46",[115,0.982]],["title/47",[220,30.637,2890,48.741]],["name/47",[220,0.714,2890,1.135]],["text/47",[4,4.163,17,3.161,20,2.323,32,4.492,114,4.696,115,4.874,169,5.696,220,4.947,232,5.421,260,5.82,504,5.696,563,6.262,608,5.239,780,3.636,835,6.634,1120,5.239,1195,5.239,1360,6.634,1681,7.466,1694,7.466,2364,6.634,2500,6.634,2503,7.142,2510,5.633,2891,7.283,2892,7.283]],["component/47",[115,0.982]],["title/48",[164,31.112,2863,31.61]],["name/48",[164,0.725,2863,0.736]],["text/48",[59,2.804,104,6.604,164,4.994,254,3.4,568,5.159,2863,5.074]],["component/48",[115,0.982]],["title/49-1",[2712,52.097,2893,57.192]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49",[2713,43.496]],["name/49",[2713,1.416]],["text/49",[]],["component/49",[116,1.261]],["title/50",[59,14.494,118,32.176,749,29.268]],["name/50",[13,1.169]],["text/50",[16,3.587,18,3.667,20,2.581,25,3.987,27,4.27,59,3.011,118,5.486,160,3.888,197,6.541,318,4.796,440,4.707,568,4.546,749,4.991,1007,6.257,2143,6.257,2331,6.022,2713,4.89,2894,7.37,2895,7.37,2896,8.09]],["component/50",[116,1.261]],["title/51",[16,31.91]],["name/51",[16,1.039]],["text/51",[16,4.541,20,2.374,59,2.273,87,4.69,90,4.411,91,6.779,118,5.047,137,4.498,148,4.591,160,3.576,164,4.048,197,6.016,235,4.69,310,4.917,749,6.318,2143,5.756,2360,6.779,2863,4.113,2894,6.779,2897,10.242,2898,6.343,2899,7.442,2900,7.442,2901,7.442]],["component/51",[116,1.261]],["title/52",[561,34.565,1833,42.567]],["name/52",[561,0.805,1833,0.991]],["text/52",[114,5.92,394,5.786,547,6.066,668,6.404,1833,6.833,2902,8.363]],["component/52",[116,1.261]],["title/53-1",[27,30.183,1285,35.278]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53",[59,17.47,1285,35.278]],["name/53",[59,0.407,1285,0.822]],["text/53",[17,3.43,59,2.414,94,4.233,102,3.43,254,2.926,550,5.685,748,4.981,780,3.945,815,6.266,976,6.112,1136,6.389,1285,4.875,1549,5.685,1884,6.389,2543,6.389,2903,6.735,2904,7.199,2905,6.735,2906,7.199,2907,7.199,2908,7.199,2909,7.199,2910,7.199]],["component/53",[116,1.261]],["title/54",[318,42.659]],["name/54",[13,1.169]],["text/54",[59,3.309,102,3.303,114,4.906,164,4.139,170,3.487,254,3.515,394,4.795,422,4.427,547,5.027,550,5.473,561,4.598,668,5.307,976,5.885,1285,5.855,1532,5.307,1833,7.065,2538,5.159,2539,5.663,2543,6.151,2863,5.246,2902,6.931,2903,6.484]],["component/54",[116,1.261]],["title/55",[164,31.112,2863,31.61]],["name/55",[164,0.725,2863,0.736]],["text/55",[59,2.882,254,3.494,2863,5.215]],["component/55",[116,1.261]],["title/56-1",[2823,32.775,2824,34.552,2825,32.775,2911,40.542]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56",[2713,43.496]],["name/56",[2713,1.416]],["text/56",[35,5.39,58,4.452,64,4.398,235,5.839,1361,6.462]],["component/56",[117,1.147]],["title/57",[58,27.482,117,35.278]],["name/57",[13,1.169]],["text/57",[16,3.477,18,3.554,20,2.501,25,3.864,27,5.104,50,4.266,58,3.768,117,5.966,148,3.515,160,3.768,164,4.266,318,4.648,440,4.563,447,5.837,481,6.065,568,4.406,1445,5.181,2331,5.837,2863,4.334,2895,7.144,2912,7.842,2913,7.144,2914,7.144]],["component/57",[117,1.147]],["title/58",[16,31.91]],["name/58",[16,1.039]],["text/58",[16,2.332,17,4.944,20,2.368,31,3.815,58,4.134,90,3.117,107,2.906,117,5.307,120,2.697,148,2.357,164,2.861,167,3.178,175,6.654,177,3.117,215,4.79,274,4.482,379,4.4,392,4.243,481,4.067,490,3.314,518,2.906,547,3.474,576,3.914,749,3.244,751,3.914,763,3.391,837,4.251,931,5.525,932,4.251,1188,4.482,1469,3.783,2685,4.79,2827,7.837,2863,2.906,2898,4.482,2913,4.79,2914,4.79,2915,5.259,2916,5.259,2917,7.423,2918,5.259,2919,4.79,2920,5.259,2921,5.259,2922,5.259,2923,5.259,2924,7.423,2925,5.259,2926,5.259,2927,5.259,2928,5.259,2929,5.259,2930,7.423,2931,7.423,2932,5.259,2933,5.259,2934,5.259,2935,5.259,2936,5.259]],["component/58",[117,1.147]],["title/59",[59,17.47,2538,38.782]],["name/59",[59,0.407,2538,0.903]],["text/59",[102,4.022,170,4.246,422,5.39,1532,6.462,2539,6.895]],["component/59",[117,1.147]],["title/60-1",[27,30.183,1285,35.278]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60",[59,17.47,1285,35.278]],["name/60",[59,0.407,1285,0.822]],["text/60",[16,4.17,17,3.254,20,2.391,25,3.694,27,3.956,31,3.324,59,2.29,94,4.016,102,3.254,117,4.624,160,3.602,748,4.725,780,3.743,815,6.064,1136,6.061,1285,4.624,1549,5.393,1884,6.061,2331,5.58,2625,6.389,2904,6.829,2905,6.389,2906,6.829,2907,6.829,2908,6.829,2909,6.829,2910,6.829,2937,7.497,2938,7.497]],["component/60",[117,1.147]],["title/61",[318,42.659]],["name/61",[13,1.169]],["text/61",[59,3.399,102,3.568,164,4.472,170,3.768,254,3.686,422,4.783,976,6.358,1285,6.14,1532,5.734,2538,5.575,2539,6.119,2863,5.502,2903,7.006]],["component/61",[117,1.147]],["title/62",[164,31.112,2863,31.61]],["name/62",[164,0.725,2863,0.736]],["text/62",[59,2.882,254,3.494,2863,5.215]],["component/62",[117,1.147]],["title/63-1",[2823,32.775,2824,34.552,2825,32.775,2939,40.542]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63",[2713,43.496]],["name/63",[2713,1.416]],["text/63",[51,4.229,65,5.593,1361,6.581]],["component/63",[62,0.894]],["title/64-1",[53,17.874,59,14.494,518,26.225]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64-2",[24,19.779,53,17.874,59,14.494]],["name/64-2",[]],["text/64-2",[]],["component/64-2",[]],["title/64-3",[88,30.637,148,25.635]],["name/64-3",[]],["text/64-3",[]],["component/64-3",[]],["title/64-4",[468,36.877,555,33.9]],["name/64-4",[]],["text/64-4",[]],["component/64-4",[]],["title/64-5",[301,32.135,575,29.334]],["name/64-5",[]],["text/64-5",[]],["component/64-5",[]],["title/64-6",[2940,42.567,2941,48.741]],["name/64-6",[]],["text/64-6",[]],["component/64-6",[]],["title/64-7",[20,15.135,62,22.8,181,31.348]],["name/64-7",[]],["text/64-7",[]],["component/64-7",[]],["title/64-8",[254,21.179,2187,37.784]],["name/64-8",[]],["text/64-8",[]],["component/64-8",[]],["title/64-9",[102,31.241]],["name/64-9",[]],["text/64-9",[]],["component/64-9",[]],["title/64-10",[695,48.803]],["name/64-10",[]],["text/64-10",[]],["component/64-10",[]],["title/64-11",[479,22.8,525,26.661,638,33.096]],["name/64-11",[]],["text/64-11",[]],["component/64-11",[]],["title/64",[53,21.545,59,17.47]],["name/64",[476,1.548]],["text/64",[16,1.544,17,3.93,19,0.74,20,2.751,24,1.772,25,1.716,31,3.261,37,2.592,53,3.361,54,0.964,56,1.786,59,2.156,60,2.327,62,4.144,63,0.86,68,1.413,69,1.689,88,4.326,89,2.13,98,1.762,100,3.261,102,3.307,103,1.515,108,1.436,123,1.577,125,1.311,137,2.569,146,0.86,148,3.296,149,0.774,151,0.813,154,0.964,160,1.228,169,1.577,171,1.296,180,1.413,181,3.924,202,1.783,208,1.15,235,0.896,253,1.577,254,3.131,271,0.86,272,0.843,279,0.992,300,0.94,301,3.337,334,0.896,339,1.15,343,1.611,350,1.734,351,2.313,371,1.023,383,0.762,384,0.786,392,0.813,400,1.1,401,0.896,409,1.059,421,1.577,428,1.212,431,1.487,450,0.843,462,0.896,468,4.101,469,1.059,470,0.86,474,1.413,475,0.667,476,1.689,479,3.661,492,0.751,502,2.245,512,0.896,523,0.917,525,1.436,527,3.324,528,1.212,529,3.288,533,1.059,536,2.026,542,0.917,549,1.783,551,1.689,554,1.648,555,4.185,559,2.965,575,2.799,612,0.917,626,0.896,638,1.783,648,1.023,652,2.626,659,1.413,661,1.545,663,1.648,669,0.964,671,1.023,677,1.689,682,2.505,683,1.611,691,1.15,693,0.992,694,3.671,695,2.883,707,1.1,712,1.1,731,1.839,748,1.611,751,1.903,763,0.917,775,1.1,776,1.023,780,0.71,786,1.15,787,1.15,788,2.067,808,4.221,809,1.1,810,1.1,901,1.839,957,1.212,990,1.977,1067,1.15,1117,1.212,1144,1.689,1162,0.992,1166,1.1,1207,1.15,1240,0.992,1252,2.179,1290,1.212,1296,2.067,1311,1.903,1353,1.059,1445,1.689,1478,2.815,1504,1.212,1554,2.067,1569,1.296,1624,1.296,1661,1.023,1671,5.441,1792,4.062,1800,2.179,1801,2.179,1803,2.179,1806,2.179,1809,2.179,1812,2.179,1954,1.212,1983,1.212,1993,2.179,1996,1.15,2031,1.977,2060,2.067,2071,1.15,2072,5.061,2185,2.329,2440,1.15,2858,1.15,2868,1.1,2940,6.011,2941,5.061,2942,3.437,2943,1.212,2944,1.296,2945,1.296,2946,1.422,2947,1.422,2948,1.422,2949,1.422,2950,1.422,2951,1.422,2952,1.422,2953,1.422,2954,1.296,2955,1.296,2956,1.422,2957,1.422,2958,1.422,2959,2.329,2960,2.556,2961,4.251,2962,3.482,2963,2.329,2964,2.556,2965,2.556,2966,1.422,2967,3.482,2968,1.422,2969,1.15,2970,1.296,2971,2.329,2972,2.556,2973,1.422,2974,1.422,2975,1.422,2976,1.422,2977,1.422,2978,2.556,2979,2.556,2980,2.556,2981,1.296,2982,1.422,2983,1.422,2984,1.212,2985,1.296,2986,1.296,2987,1.15,2988,1.296,2989,5.42,2990,2.329,2991,1.422,2992,1.422,2993,2.329,2994,2.329,2995,1.296,2996,1.296,2997,2.329,2998,2.329,2999,1.422,3000,1.296,3001,1.422,3002,1.422,3003,1.422,3004,1.422,3005,1.296,3006,2.556,3007,1.422,3008,1.296,3009,1.296,3010,1.296,3011,1.422]],["component/64",[62,0.894]],["title/65-1",[263,24.57,1361,39.892]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[89,22.32,263,24.57]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[53,21.545,59,17.47]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65-4",[53,17.874,59,14.494,1291,30.595]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["title/65-5",[263,20.385,1672,40.438,1749,31.348]],["name/65-5",[]],["text/65-5",[]],["component/65-5",[]],["title/65-6",[148,18.172,149,22.055,384,22.408,3012,31.356]],["name/65-6",[]],["text/65-6",[]],["component/65-6",[]],["title/65-7",[187,38.553]],["name/65-7",[]],["text/65-7",[]],["component/65-7",[]],["title/65-8",[263,24.57,475,26.827]],["name/65-8",[]],["text/65-8",[]],["component/65-8",[]],["title/65-9",[276,33.276,802,44.233]],["name/65-9",[]],["text/65-9",[]],["component/65-9",[]],["title/65",[86,32.69,263,24.57]],["name/65",[263,1.006]],["text/65",[0,1.309,10,2.853,17,4.934,20,2.827,24,0.759,25,2.088,26,1.203,31,3.028,42,1.27,53,2.174,56,1.632,59,0.556,60,2.739,62,3.481,77,1.788,79,1.023,86,1.04,88,1.704,89,3.381,94,2.722,100,2.253,101,2.764,108,1.023,120,0.934,144,1.788,146,1.1,148,1.426,149,0.99,183,1.203,187,2.722,254,0.674,263,4.309,272,1.886,276,2.957,298,1.27,305,2.219,323,1.355,327,1.355,328,1.147,331,1.147,332,1.1,343,1.147,349,2.288,359,1.123,379,1.079,384,2.342,388,1.355,394,1.147,401,1.147,420,1.27,421,1.123,431,1.059,442,1.551,475,1.492,477,1.27,479,2.036,512,2.671,518,1.006,525,1.023,540,2.368,558,1.203,560,1.203,561,2.561,571,1.234,575,3.503,579,2.219,582,3.544,616,1.355,618,2.219,648,3.655,652,3.399,656,3.357,659,1.758,677,2.102,694,2.116,722,2.572,731,1.309,735,1.471,736,1.234,802,4.463,815,1.174,823,3.278,952,1.408,986,1.355,1021,1.658,1162,1.27,1170,1.551,1197,1.408,1266,1.471,1291,1.174,1303,1.174,1319,1.408,1361,1.27,1430,1.551,1445,4.191,1461,1.551,1469,3.048,1505,3.93,1555,1.408,1600,1.408,1603,1.408,1667,1.471,1671,1.471,1683,2.461,1841,5.053,1848,3.782,1947,1.471,2290,2.461,2296,1.408,2325,3.93,2590,2.898,2940,4.295,2941,1.551,2943,4.331,2969,5.129,3012,2.461,3013,3.612,3014,4.238,3015,1.82,3016,1.658,3017,1.658,3018,1.658,3019,1.82,3020,1.658,3021,1.658,3022,1.82,3023,3.181,3024,4.108,3025,5.081,3026,3.655,3027,4.918,3028,7.383,3029,1.658,3030,1.658,3031,5.407,3032,3.181,3033,1.82,3034,1.82,3035,1.82,3036,3.181,3037,1.82,3038,1.82,3039,5.081,3040,5.771,3041,4.238,3042,4.238,3043,1.82,3044,3.181,3045,1.82,3046,1.82,3047,3.181,3048,1.658,3049,1.82,3050,1.82,3051,1.658,3052,1.658,3053,1.82,3054,1.82,3055,1.82,3056,1.82,3057,1.82,3058,1.82,3059,1.82,3060,1.82,3061,1.82,3062,1.82,3063,1.82,3064,1.82,3065,1.82,3066,1.658,3067,1.658]],["component/65",[62,0.894]],["title/66",[34,32.69,62,27.482]],["name/66",[13,1.169]],["text/66",[10,3.308,17,4.866,19,3.275,20,3.015,25,4.139,26,4.159,31,2.791,34,4.801,38,3.537,53,2.372,59,2.566,60,2.989,62,4.036,64,2.989,94,3.372,110,3.883,146,5.077,180,3.48,193,4.391,253,3.883,470,3.805,518,3.48,575,3.229,630,4.529,1568,5.09,1749,4.159,2325,4.869,2748,5.09,2969,5.09,3024,5.09,3026,4.529,3027,5.365,3028,7.159,3031,5.365,3068,4.529,3069,6.296,3070,6.296,3071,6.296,3072,5.735,3073,5.735,3074,5.735]],["component/66",[62,0.894]],["title/67-1",[16,21.038,492,25.041,652,25.418]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[20,12.932,98,20.512,157,26.142,659,22.408]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[53,13.332,59,10.81,62,17.006,64,16.8,661,21.389]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[20,10.016,24,13.089,28,20.247,62,15.089,263,13.49,663,20.247]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67",[3068,51.77]],["name/67",[3068,1.685]],["text/67",[4,2.368,8,1.844,10,1.631,16,3.701,17,4.414,20,3.243,24,2.6,28,1.598,31,3.076,32,1.529,53,3.267,56,3.199,59,2.291,60,2.961,62,5.21,64,2.534,65,1.469,68,1.37,79,2.328,88,2.219,89,2.434,94,2.859,98,3.155,100,1.099,105,1.442,107,2.29,139,1.783,140,1.783,148,3.741,157,2.671,160,1.191,167,1.498,180,1.37,192,1.529,193,3.723,200,2.611,201,1.637,263,1.78,269,2.809,279,2.889,310,1.637,359,1.529,383,1.327,420,1.728,468,4.474,479,2.997,492,1.308,512,1.562,518,2.29,523,1.598,527,3.619,532,1.844,536,3.629,552,2.98,554,4.021,555,4.948,575,2.738,619,1.68,642,1.562,652,2.219,669,1.68,671,1.783,694,1.237,723,1.844,763,1.598,780,1.237,790,2.003,901,1.783,924,3.349,987,1.637,1144,1.637,1249,1.844,1290,2.112,1303,1.598,1445,4.12,1470,1.917,1565,1.68,1571,2.112,1614,2.257,1653,4.128,2163,1.728,2325,1.917,2331,1.844,2413,2.003,2435,4.549,2439,3.53,2837,2.112,2858,2.003,2868,1.917,2942,7.012,2943,5.315,2944,3.773,2945,2.257,2954,2.257,2955,4.862,2969,2.003,2987,2.003,3024,2.003,3026,1.783,3027,2.112,3028,3.53,3029,2.257,3031,2.112,3072,2.257,3073,2.257,3074,2.257,3075,2.478,3076,2.478,3077,2.478,3078,2.257,3079,2.478,3080,2.478,3081,2.257,3082,4.549,3083,6.237,3084,2.478,3085,2.112,3086,2.478,3087,2.112,3088,2.112,3089,4.142,3090,2.257,3091,4.862,3092,2.257,3093,2.257,3094,2.257,3095,2.257,3096,2.112,3097,2.257,3098,2.478]],["component/67",[62,0.894]],["title/68-1",[1384,34.552,1738,34.552,2390,36.931,3099,36.931]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68",[2713,43.496]],["name/68",[2713,1.416]],["text/68",[51,4.229,65,5.593,1361,6.581]],["component/68",[75,1.028]],["title/69-1",[53,17.874,59,14.494,518,26.225]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[20,15.135,75,26.225,181,31.348]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[254,21.179,2187,37.784]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69-4",[102,31.241]],["name/69-4",[]],["text/69-4",[]],["component/69-4",[]],["title/69-5",[695,48.803]],["name/69-5",[]],["text/69-5",[]],["component/69-5",[]],["title/69-6",[479,22.8,525,26.661,638,33.096]],["name/69-6",[]],["text/69-6",[]],["component/69-6",[]],["title/69",[53,21.545,59,17.47]],["name/69",[476,1.548]],["text/69",[16,1.902,17,3.826,19,1.344,20,2.812,27,3.748,31,1.146,44,1.753,53,3.057,59,2.34,60,2.037,69,2.834,75,5.459,88,2.298,94,1.385,98,1.308,100,1.902,102,4.138,103,1.532,123,2.646,125,2.2,146,1.562,151,1.477,153,2.089,154,1.753,160,2.062,181,5.362,190,1.999,235,1.629,254,2.837,272,1.532,279,1.803,282,2.089,301,3.09,339,2.089,350,2.909,351,2.334,371,1.859,383,1.385,401,1.629,421,1.594,431,3.2,450,1.532,476,1.708,479,3.413,491,1.504,492,1.364,525,1.452,536,1.504,549,2.992,551,1.708,552,1.859,612,1.667,616,3.193,638,1.803,644,1.859,652,2.298,659,2.371,669,1.753,671,1.859,677,2.834,683,2.704,693,1.803,694,2.746,695,4.816,712,1.999,748,1.629,751,3.193,775,1.999,776,1.859,787,2.089,788,2.089,808,5.493,810,1.999,901,3.086,1067,2.089,1117,2.203,1158,1.924,1166,3.318,1240,1.803,1252,3.656,1296,2.089,1311,4.094,1470,1.999,1504,2.203,1749,1.708,1792,4.766,1801,3.656,1803,3.656,1806,3.656,1809,3.656,1812,3.656,1925,2.203,1954,2.203,1983,2.203,1993,3.656,2031,3.318,2035,3.908,2060,2.089,2072,3.656,2331,1.924,2440,2.089,2512,2.354,2868,1.999,2940,6.764,2942,3.468,2970,2.354,2971,3.908,2981,2.354,2984,2.203,2985,2.354,2986,2.354,2987,2.089,2988,2.354,2989,7.512,2990,2.354,2993,3.908,2994,2.354,2995,2.354,2996,2.354,2997,3.908,2998,3.908,3000,2.354,3005,2.354,3008,2.354,3009,2.354,3010,2.354,3068,1.859,3082,2.203,3085,2.203,3100,2.585,3101,4.29,3102,2.585,3103,2.585,3104,5.5,3105,6.053,3106,2.585,3107,2.354,3108,2.203,3109,2.354,3110,2.585,3111,4.29,3112,2.585]],["component/69",[75,1.028]],["title/70-1",[31,25.358,263,24.57]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[89,22.32,263,24.57]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[53,21.545,59,17.47]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[53,17.874,59,14.494,1291,30.595]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70-5",[263,20.385,1672,40.438,1749,31.348]],["name/70-5",[]],["text/70-5",[]],["component/70-5",[]],["title/70-6",[148,18.172,149,22.055,384,22.408,3012,31.356]],["name/70-6",[]],["text/70-6",[]],["component/70-6",[]],["title/70-7",[187,38.553]],["name/70-7",[]],["text/70-7",[]],["component/70-7",[]],["title/70-8",[263,24.57,475,26.827]],["name/70-8",[]],["text/70-8",[]],["component/70-8",[]],["title/70-9",[276,33.276,802,44.233]],["name/70-9",[]],["text/70-9",[]],["component/70-9",[]],["title/70",[86,32.69,263,24.57]],["name/70",[263,1.006]],["text/70",[0,1.415,4,1.946,10,3.103,17,4.824,20,2.902,24,1.419,25,2.217,26,1.3,31,2.686,53,2.02,56,1.746,59,0.601,60,2.545,64,0.934,75,4.354,77,1.913,79,1.913,86,1.125,88,2.872,89,3.551,93,1.105,100,1.995,101,3.295,108,1.105,119,2.667,120,2.308,123,1.214,144,1.913,148,1.526,149,1.07,173,1.464,181,1.3,183,1.3,187,3.245,254,0.729,263,4.309,272,2.018,276,3.119,298,1.372,305,2.374,323,1.464,327,1.464,328,1.24,331,1.24,343,1.24,349,1.415,359,1.214,360,1.464,379,1.166,384,2.487,388,1.464,394,1.24,401,1.24,420,1.372,421,1.214,431,2.618,442,1.677,470,1.189,475,1.597,477,1.372,479,2.576,512,2.145,525,1.105,533,1.464,561,2.719,571,1.334,582,3.74,588,1.372,618,1.372,642,1.24,648,3.857,650,4.7,652,1.823,656,3.542,659,1.881,661,2.057,677,2.249,683,2.145,694,2.676,695,2.308,722,2.752,731,1.415,735,1.59,736,1.334,802,4.685,823,2.633,891,1.677,922,1.59,952,1.522,986,2.534,1127,1.522,1162,1.372,1170,1.677,1197,1.522,1266,1.59,1291,1.269,1303,1.269,1319,1.522,1384,1.677,1445,3.542,1461,1.677,1469,3.236,1470,1.522,1505,4.147,1549,3.236,1555,1.522,1600,1.522,1603,1.522,1667,1.59,1683,2.633,1717,1.792,1749,1.3,1841,5.709,1848,4.509,1947,1.59,2290,2.633,2296,1.522,2499,1.792,2785,3.101,2940,5.864,3012,2.633,3013,3.834,3016,1.792,3017,1.792,3018,1.792,3020,1.792,3021,1.792,3026,3.236,3048,1.792,3051,1.792,3052,1.792,3066,1.792,3067,1.792,3105,1.677,3108,3.834,3113,3.404,3114,4.499,3115,3.404,3116,1.967,3117,1.967,3118,3.834,3119,6.063,3120,1.967,3121,1.967,3122,1.967,3123,1.967,3124,1.967,3125,3.404,3126,1.967,3127,4.499,3128,1.967,3129,1.967,3130,4.499,3131,3.404,3132,1.967,3133,1.967,3134,1.967,3135,3.404,3136,1.967,3137,1.967,3138,1.967,3139,3.404,3140,1.967,3141,1.967,3142,1.967,3143,1.967,3144,1.967,3145,1.967,3146,1.967]],["component/70",[75,1.028]],["title/71",[]],["name/71",[293,0.929,3147,1.332]],["text/71",[]],["component/71",[75,1.028]],["title/72",[34,32.69,75,31.61]],["name/72",[13,1.169]],["text/72",[10,3.495,17,4.686,19,3.56,20,3.141,25,4.373,26,4.522,34,5.072,38,3.846,53,2.578,59,2.711,64,3.249,75,4.905,102,2.971,110,4.222,119,4.057,120,3.51,193,4.774,253,4.222,470,4.136,518,3.783,630,4.923,650,4.522,1549,4.923,2748,5.533,3026,4.923,3068,4.923,3118,5.833,3119,5.833,3148,6.234,3149,6.844,3150,6.844,3151,6.234,3152,6.844]],["component/72",[75,1.028]],["title/73-1",[16,21.038,492,25.041,652,25.418]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[20,12.932,98,20.512,157,26.142,659,22.408]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[53,13.332,59,10.81,64,16.8,75,19.561,661,21.389]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[20,10.016,24,13.089,28,20.247,75,17.356,263,13.49,663,20.247]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73",[3068,51.77]],["name/73",[3068,1.685]],["text/73",[4,3.502,10,1.189,16,3.117,17,4.463,20,3.28,24,2.931,28,3.142,31,3.117,32,1.863,51,1.354,53,2.649,56,1.549,59,1.871,60,2.908,62,1.451,64,2.313,68,1.669,73,1.4,75,5.603,79,1.697,88,1.618,89,1.902,98,3.557,107,2.694,120,1.549,123,1.863,148,3.151,157,3.951,160,1.451,167,1.825,192,3.779,193,4.274,200,3.072,201,1.995,263,2.094,269,3.305,279,3.399,306,1.903,310,1.995,359,1.863,364,4.439,379,1.79,446,1.995,462,1.903,479,1.451,492,3.233,502,1.947,518,3.386,525,1.697,527,4.155,552,3.506,554,3.142,555,1.79,575,3.142,642,1.903,650,1.995,669,2.048,671,2.172,694,1.508,723,2.248,780,1.508,901,2.172,924,2.441,955,2.441,987,1.995,1445,1.995,1470,2.336,1549,2.172,1565,2.048,1571,2.574,1653,4.739,1996,2.441,2141,2.751,2163,2.107,2413,4.953,2414,3.94,2418,2.751,2421,2.751,2435,2.574,2439,2.574,2442,2.751,2443,2.751,2625,2.574,2837,2.574,2858,2.441,2871,2.751,2942,6.236,2987,2.441,3013,2.574,3026,2.172,3078,4.439,3081,2.751,3082,5.222,3087,2.574,3088,2.574,3090,2.751,3091,4.439,3092,2.751,3093,2.751,3094,2.751,3095,2.751,3096,2.574,3097,2.751,3099,2.751,3118,2.574,3119,2.574,3151,2.751,3153,4.873,3154,3.02,3155,2.751,3156,3.02,3157,3.02,3158,3.02,3159,2.751,3160,3.02,3161,3.02,3162,3.02,3163,3.02,3164,3.02,3165,7.031,3166,3.02,3167,3.02,3168,3.02,3169,4.873,3170,3.02,3171,3.02,3172,3.02,3173,3.02]],["component/73",[75,1.028]],["title/74",[]],["name/74",[13,1.169]],["text/74",[]],["component/74",[600,1.261]],["title/75-1",[14,40.438,20,15.135,3174,47.449]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[30,32.135,173,42.567]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75-3",[409,42.567,575,29.334]],["name/75-3",[]],["text/75-3",[]],["component/75-3",[]],["title/75-4",[18,25.92,52,36.045]],["name/75-4",[]],["text/75-4",[]],["component/75-4",[]],["title/75-5",[27,30.183,114,36.877]],["name/75-5",[]],["text/75-5",[]],["component/75-5",[]],["title/75-6",[723,42.567,2064,37.784]],["name/75-6",[]],["text/75-6",[]],["component/75-6",[]],["title/75",[18,16.04,20,11.289,24,14.753,38,19.886,329,27.372]],["name/75",[20,0.185,65,0.344,1738,0.495,2823,0.469,2825,0.469]],["text/75",[4,1.84,8,0.837,9,0.411,11,0.423,16,0.499,17,5.011,18,3.028,19,0.585,20,2.567,21,0.476,22,0.476,24,2.227,25,2.176,26,0.389,27,1.09,28,2.847,29,0.667,30,1.809,31,2.275,34,0.643,35,0.343,37,0.837,38,1.609,39,0.502,42,0.785,43,0.809,51,0.504,52,1.018,53,1.562,54,1.095,55,0.343,56,0.302,58,1.547,59,1.179,60,1.968,62,1.192,64,0.279,65,1.224,68,1.142,69,0.389,73,0.522,74,1.224,75,0.893,76,0.411,77,0.331,78,1.025,79,0.908,83,0.389,86,0.337,88,0.315,89,1.256,90,0.667,92,0.38,93,0.331,94,3.165,98,1.255,100,0.716,102,1.8,105,0.343,107,1.142,110,0.363,114,1.332,115,0.594,117,0.363,118,0.399,119,1.698,121,1.583,123,0.363,125,0.302,126,0.536,129,1.67,134,0.411,135,1.095,138,0.476,140,1.486,144,1.161,145,2.146,146,0.976,148,0.724,149,0.612,151,0.923,154,0.763,157,0.725,160,0.283,162,1.306,163,0.502,164,0.612,166,0.356,167,0.356,168,3.352,170,0.74,173,0.438,174,0.411,179,0.502,180,1.142,187,1.329,190,0.87,192,3.85,193,4.353,194,0.455,199,0.438,200,3.724,202,0.411,203,0.536,210,1.882,218,1.127,220,1.329,226,1.332,235,0.371,241,0.809,243,0.785,248,0.438,251,0.476,252,0.502,253,0.363,254,1.817,258,1.332,260,0.371,262,0.502,263,0.887,272,0.349,278,0.502,287,0.502,288,0.476,297,0.785,299,0.909,306,1.302,308,1.919,310,0.389,313,1.042,318,1.908,319,1.025,320,0.536,322,0.959,323,0.438,325,0.438,328,1.302,329,0.455,330,1.018,334,0.371,343,0.371,344,0.502,351,1.751,353,1.162,359,0.363,360,0.438,362,0.476,371,0.423,379,0.349,383,0.315,384,0.893,393,1.401,394,0.709,397,0.959,399,0.389,401,0.371,408,0.909,409,1.202,420,0.411,422,0.343,431,1.202,434,1.882,435,0.909,438,1.095,440,0.343,446,0.743,447,0.438,450,0.667,456,0.536,462,0.709,468,0.725,470,0.356,475,0.276,479,2.243,486,1.025,491,0.343,492,1.309,504,0.363,508,0.455,510,1.067,512,0.709,524,0.585,525,0.632,526,0.785,531,0.959,532,3.286,534,6.225,536,0.94,537,0.502,543,0.536,558,0.389,561,0.356,568,0.331,575,1.979,579,3.08,588,0.411,605,0.725,624,1.846,630,0.423,638,0.411,650,1.067,652,0.865,655,2.005,656,1.639,659,0.325,661,0.356,674,0.411,675,0.959,677,2.345,693,0.411,694,4.39,695,1.401,702,1.761,749,0.363,752,3.777,763,1.599,780,1.238,784,0.476,786,0.476,800,4.372,803,0.476,815,0.725,833,0.438,837,0.476,843,0.536,901,1.162,903,1.025,922,0.476,934,0.536,956,0.87,964,0.502,987,0.743,988,0.476,1019,0.536,1130,0.909,1136,0.476,1144,0.743,1152,0.476,1156,0.536,1165,1.67,1172,0.536,1195,1.162,1223,0.455,1240,0.785,1259,0.502,1289,0.536,1303,0.725,1313,0.502,1316,0.502,1319,0.455,1322,0.536,1445,0.743,1469,0.423,1507,0.536,1565,0.399,1597,0.502,1653,6.346,1724,0.536,1749,0.743,1784,0.536,1792,0.438,1817,0.536,1819,0.476,1836,0.536,1859,0.536,1945,0.909,1977,0.536,2031,0.87,2102,0.536,2135,0.455,2136,0.536,2162,0.536,2163,1.73,2164,0.536,2187,0.389,2207,0.909,2236,0.502,2237,0.502,2366,0.536,2412,0.502,2441,3.777,2503,0.455,2505,0.502,2534,1.025,2538,0.399,2578,0.536,2583,0.536,2717,0.502,2748,0.909,2764,0.536,2804,1.882,2826,1.025,2832,0.536,2840,1.882,2860,0.536,2863,0.325,2864,0.536,2868,0.87,2888,0.476,2898,1.761,2905,0.502,2919,1.025,2940,1.538,2959,0.536,2963,0.536,2984,0.502,2989,0.502,3012,0.455,3024,0.476,3026,0.423,3030,0.536,3085,0.959,3087,4.883,3088,1.761,3096,3.979,3105,0.502,3107,0.536,3108,1.377,3109,1.472,3148,2.609,3155,0.536,3159,0.536,3175,0.536,3176,0.536,3177,0.589,3178,0.589,3179,1.125,3180,0.589,3181,1.125,3182,0.589,3183,1.125,3184,0.589,3185,0.589,3186,0.589,3187,1.615,3188,0.589,3189,0.589,3190,0.589,3191,0.589,3192,0.589,3193,0.589,3194,0.589,3195,0.589,3196,1.125,3197,0.589,3198,0.589,3199,0.589,3200,0.589,3201,0.589,3202,0.589,3203,0.589,3204,2.481,3205,0.589,3206,1.125,3207,0.589,3208,0.589,3209,2.066,3210,5.73,3211,9.153,3212,6.079,3213,6.241,3214,5.341,3215,0.589,3216,0.589,3217,0.589,3218,2.864,3219,2.864,3220,1.125,3221,1.125,3222,1.125,3223,1.125,3224,0.589,3225,2.066,3226,0.589,3227,0.589,3228,0.589,3229,2.066,3230,1.125,3231,0.589,3232,1.125,3233,0.589,3234,0.589,3235,0.589,3236,0.589,3237,0.589,3238,0.589,3239,0.589,3240,0.589,3241,0.589,3242,0.589,3243,0.589,3244,0.589,3245,0.589,3246,1.125,3247,0.589,3248,0.589,3249,0.589,3250,0.589,3251,0.589,3252,1.125,3253,0.589,3254,0.589,3255,2.066,3256,2.066,3257,1.125,3258,1.125,3259,0.589,3260,0.589,3261,1.125,3262,0.589,3263,0.589,3264,0.589,3265,0.589,3266,0.589,3267,0.589,3268,0.589,3269,0.589,3270,0.589,3271,2.066,3272,0.589,3273,0.589,3274,0.589,3275,0.589,3276,0.589,3277,0.589,3278,0.589,3279,0.589,3280,0.589,3281,0.589,3282,0.589,3283,0.589,3284,0.589,3285,0.589,3286,0.589,3287,0.589,3288,0.589,3289,0.589,3290,0.589,3291,0.589,3292,0.589,3293,0.589,3294,0.589,3295,0.589,3296,1.125,3297,0.589,3298,0.589,3299,0.589,3300,1.125,3301,0.589,3302,0.589,3303,0.589,3304,0.589,3305,0.589,3306,0.589,3307,0.589,3308,0.589,3309,0.589,3310,0.589,3311,1.125,3312,1.125,3313,1.125,3314,0.589,3315,1.125,3316,0.589,3317,0.589,3318,0.589,3319,0.589,3320,0.589,3321,0.589,3322,0.589,3323,0.589,3324,1.125,3325,0.589,3326,0.589,3327,0.589,3328,0.589,3329,0.589,3330,0.589,3331,0.589,3332,0.589,3333,0.589]],["component/75",[3334,1.585]],["title/76-1",[18,16.04,20,11.289,24,14.753,38,19.886,329,27.372]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76",[20,18.242,3334,48.741]],["name/76",[13,1.169]],["text/76",[18,3.85,20,3.238,21,6.867,22,6.867,24,3.541,38,4.773,64,4.032,65,5.035,235,5.353,258,5.477,397,7.239,987,5.612,3175,7.737,3176,7.737]],["component/76",[3334,1.585]]],"invertedIndex":[["",{"_index":17,"title":{"20-112":{},"20-114":{},"32-29":{}},"name":{},"text":{"2":{},"7":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"35":{},"36":{},"39":{},"40":{},"47":{},"53":{},"58":{},"60":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{}},"component":{}}],["0",{"_index":964,"title":{},"name":{},"text":{"20":{},"21":{},"75":{}},"component":{}}],["0.1.0",{"_index":3099,"title":{"68-1":{}},"name":{},"text":{"73":{}},"component":{}}],["0.14.0",{"_index":2822,"title":{"33-1":{}},"name":{},"text":{},"component":{}}],["0.15.0",{"_index":2893,"title":{"49-1":{}},"name":{},"text":{},"component":{}}],["0.24",{"_index":2866,"title":{},"name":{},"text":{"38":{}},"component":{}}],["0.24.0",{"_index":2766,"title":{},"name":{},"text":{"32":{}},"component":{}}],["0.25",{"_index":2711,"title":{"29":{}},"name":{"29":{}},"text":{"31":{}},"component":{}}],["0.25.0",{"_index":500,"title":{"30-1":{}},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"25":{},"26":{},"27":{},"28":{}},"component":{}}],["0.25.0.bin",{"_index":3080,"title":{},"name":{},"text":{"67":{}},"component":{}}],["0.5",{"_index":2915,"title":{},"name":{},"text":{"58":{}},"component":{}}],["0.5.0",{"_index":2939,"title":{"63-1":{}},"name":{},"text":{},"component":{}}],["0.6.0",{"_index":2911,"title":{"56-1":{}},"name":{},"text":{},"component":{}}],["0.85",{"_index":2379,"title":{},"name":{},"text":{"23":{}},"component":{}}],["01",{"_index":2825,"title":{"33-1":{},"56-1":{},"63-1":{}},"name":{"75":{}},"text":{},"component":{}}],["01_basic_config",{"_index":2190,"title":{},"name":{"21":{}},"text":{},"component":{}}],["02",{"_index":2824,"title":{"33-1":{},"56-1":{},"63-1":{}},"name":{},"text":{},"component":{}}],["02_filling_out_a_templ",{"_index":2255,"title":{},"name":{"22":{}},"text":{},"component":{}}],["03_writing_a_templ",{"_index":2334,"title":{},"name":{"23":{}},"text":{},"component":{}}],["0b00010111",{"_index":862,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0b0001_0111",{"_index":873,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0o01346475",{"_index":878,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0o0134_6475",{"_index":874,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0o755",{"_index":864,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x012aff",{"_index":860,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x013464de",{"_index":877,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x0134_64de",{"_index":872,"title":{},"name":{},"text":{"20":{}},"component":{}}],["0x80",{"_index":978,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1",{"_index":652,"title":{"32-1":{},"67-1":{},"73-1":{}},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"43":{},"64":{},"65":{},"67":{},"69":{},"70":{},"75":{}},"component":{}}],["1.0",{"_index":2103,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.0.0",{"_index":2157,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.1",{"_index":2714,"title":{"32-2":{}},"name":{},"text":{},"component":{}}],["1.2",{"_index":2716,"title":{"32-3":{}},"name":{},"text":{},"component":{}}],["1.2.0",{"_index":2145,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.23",{"_index":908,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.23e",{"_index":910,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.23e2",{"_index":909,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.3",{"_index":740,"title":{},"name":{},"text":{"17":{},"20":{}},"component":{}}],["1.3.0",{"_index":2146,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.5",{"_index":750,"title":{},"name":{},"text":{"19":{}},"component":{}}],["1.5.0",{"_index":2174,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.5.h",{"_index":2380,"title":{},"name":{},"text":{"23":{}},"component":{}}],["1.6666666666666667",{"_index":1057,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.6666666666666667.mb",{"_index":1107,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.6666666666666667.min",{"_index":1056,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.8.3",{"_index":2170,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.mb",{"_index":1108,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1.min",{"_index":1058,"title":{},"name":{},"text":{"20":{}},"component":{}}],["10",{"_index":891,"title":{},"name":{},"text":{"20":{},"25":{},"70":{}},"component":{}}],["10.15",{"_index":2419,"title":{},"name":{},"text":{"25":{}},"component":{}}],["10.16",{"_index":2445,"title":{},"name":{},"text":{"25":{}},"component":{}}],["10.gb",{"_index":1755,"title":{},"name":{},"text":{"20":{}},"component":{}}],["100",{"_index":1179,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"32":{}},"component":{}}],["100.mb",{"_index":1588,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1000",{"_index":1070,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1000.4400",{"_index":923,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1000000",{"_index":876,"title":{},"name":{},"text":{"20":{}},"component":{}}],["102",{"_index":911,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1023",{"_index":904,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1024",{"_index":1089,"title":{},"name":{},"text":{"20":{}},"component":{}}],["106",{"_index":3238,"title":{},"name":{},"text":{"75":{}},"component":{}}],["10e6",{"_index":930,"title":{},"name":{},"text":{"20":{}},"component":{}}],["10ffff",{"_index":965,"title":{},"name":{},"text":{"20":{}},"component":{}}],["11",{"_index":489,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"20":{},"26":{},"27":{},"28":{},"35":{}},"component":{}}],["11.0.9",{"_index":2446,"title":{},"name":{},"text":{"25":{}},"component":{}}],["11.d",{"_index":1184,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1100",{"_index":1186,"title":{},"name":{},"text":{"20":{}},"component":{}}],["12",{"_index":1738,"title":{"68-1":{}},"name":{"75":{}},"text":{"20":{}},"component":{}}],["123",{"_index":858,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1234",{"_index":1655,"title":{},"name":{},"text":{"20":{},"36":{}},"component":{}}],["125.mb",{"_index":1110,"title":{},"name":{},"text":{"20":{}},"component":{}}],["125.min",{"_index":1060,"title":{},"name":{},"text":{"20":{}},"component":{}}],["127",{"_index":1802,"title":{},"name":{},"text":{"20":{}},"component":{}}],["128",{"_index":981,"title":{},"name":{},"text":{"20":{}},"component":{}}],["13.37",{"_index":2195,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["130",{"_index":3229,"title":{},"name":{},"text":{"75":{}},"component":{}}],["15",{"_index":1384,"title":{"68-1":{}},"name":{},"text":{"20":{},"70":{}},"component":{}}],["15.mb",{"_index":1106,"title":{},"name":{},"text":{"20":{}},"component":{}}],["15.min",{"_index":1055,"title":{},"name":{},"text":{"20":{}},"component":{}}],["16",{"_index":1682,"title":{},"name":{},"text":{"20":{}},"component":{}}],["19",{"_index":1785,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1984",{"_index":1646,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1_000.4_400",{"_index":921,"title":{},"name":{},"text":{"20":{}},"component":{}}],["1_000_000",{"_index":871,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2",{"_index":659,"title":{"32-4":{},"67-2":{},"73-2":{}},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"28":{},"32":{},"43":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["2).tolist",{"_index":2821,"title":{},"name":{},"text":{"32":{}},"component":{}}],["2,147,483,647",{"_index":1808,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2,147,483,648",{"_index":1807,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2.1",{"_index":2718,"title":{"32-5":{}},"name":{},"text":{},"component":{}}],["2.1.1",{"_index":2720,"title":{"32-6":{}},"name":{},"text":{},"component":{}}],["2.1.2",{"_index":2721,"title":{"32-7":{}},"name":{},"text":{},"component":{}}],["2.1.3",{"_index":2722,"title":{"32-8":{}},"name":{},"text":{},"component":{}}],["2.2",{"_index":2723,"title":{"32-9":{}},"name":{},"text":{"35":{}},"component":{}}],["2.3",{"_index":2724,"title":{"32-10":{}},"name":{},"text":{},"component":{}}],["2.5",{"_index":893,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2.mb",{"_index":1109,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2.min",{"_index":1059,"title":{},"name":{},"text":{"20":{}},"component":{}}],["20",{"_index":1346,"title":{},"name":{},"text":{"20":{}},"component":{}}],["20.gb",{"_index":1589,"title":{},"name":{},"text":{"20":{}},"component":{}}],["2000",{"_index":2216,"title":{},"name":{},"text":{"21":{}},"component":{}}],["2023",{"_index":2390,"title":{"68-1":{}},"name":{},"text":{"23":{}},"component":{}}],["2023.1",{"_index":2865,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2024",{"_index":2823,"title":{"33-1":{},"56-1":{},"63-1":{}},"name":{"75":{}},"text":{},"component":{}}],["21",{"_index":1798,"title":{},"name":{},"text":{"20":{}},"component":{}}],["225",{"_index":2308,"title":{},"name":{},"text":{"22":{}},"component":{}}],["23",{"_index":866,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["25",{"_index":896,"title":{},"name":{},"text":{"20":{}},"component":{}}],["255",{"_index":1810,"title":{},"name":{},"text":{"20":{}},"component":{}}],["256",{"_index":1467,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["3",{"_index":661,"title":{"32-11":{},"67-3":{},"73-3":{}},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"32":{},"64":{},"70":{},"75":{}},"component":{}}],["3).apply(4",{"_index":1908,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3).map((n",{"_index":1909,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3).map(addtoa",{"_index":1918,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3.",{"_index":1046,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3.1",{"_index":2725,"title":{"32-12":{}},"name":{},"text":{},"component":{}}],["3.2",{"_index":2726,"title":{"32-13":{}},"name":{},"text":{},"component":{}}],["3.3",{"_index":2727,"title":{"32-14":{}},"name":{},"text":{},"component":{}}],["3.4",{"_index":2728,"title":{"32-15":{}},"name":{},"text":{},"component":{}}],["3.d",{"_index":1041,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3.kib",{"_index":1102,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3.mb",{"_index":1103,"title":{},"name":{},"text":{"20":{}},"component":{}}],["3.min",{"_index":1047,"title":{},"name":{},"text":{"20":{}},"component":{}}],["30",{"_index":611,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"26":{},"27":{}},"component":{}}],["30.min",{"_index":2341,"title":{},"name":{},"text":{"23":{}},"component":{}}],["32,767",{"_index":1805,"title":{},"name":{},"text":{"20":{}},"component":{}}],["32,768",{"_index":1804,"title":{},"name":{},"text":{"20":{}},"component":{}}],["355",{"_index":2220,"title":{},"name":{},"text":{"21":{}},"component":{}}],["3599",{"_index":3217,"title":{},"name":{},"text":{"75":{}},"component":{}}],["4",{"_index":663,"title":{"32-16":{},"67-4":{},"73-4":{}},"name":{},"text":{"16":{},"19":{},"20":{},"22":{},"25":{},"26":{},"32":{},"64":{}},"component":{}}],["4).toint",{"_index":1299,"title":{},"name":{},"text":{"20":{}},"component":{}}],["4,294,967,295",{"_index":1813,"title":{},"name":{},"text":{"20":{}},"component":{}}],["4.1",{"_index":2729,"title":{"32-17":{}},"name":{},"text":{},"component":{}}],["4.2",{"_index":2730,"title":{"32-18":{}},"name":{},"text":{},"component":{}}],["4.3",{"_index":2731,"title":{"32-19":{}},"name":{},"text":{},"component":{}}],["4.95.min",{"_index":1054,"title":{},"name":{},"text":{"20":{}},"component":{}}],["4.996928.mb",{"_index":1105,"title":{},"name":{},"text":{"20":{}},"component":{}}],["40",{"_index":1786,"title":{},"name":{},"text":{"20":{}},"component":{}}],["40.d",{"_index":1176,"title":{},"name":{},"text":{"20":{}},"component":{}}],["4000",{"_index":1181,"title":{},"name":{},"text":{"20":{}},"component":{}}],["42",{"_index":918,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["42.0",{"_index":919,"title":{},"name":{},"text":{"20":{}},"component":{}}],["44",{"_index":979,"title":{},"name":{},"text":{"20":{}},"component":{}}],["443",{"_index":1820,"title":{},"name":{},"text":{"20":{}},"component":{}}],["45",{"_index":1920,"title":{},"name":{},"text":{"20":{}},"component":{}}],["45.min",{"_index":2405,"title":{},"name":{},"text":{"23":{}},"component":{}}],["493",{"_index":867,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5",{"_index":656,"title":{"32-20":{}},"name":{},"text":{"16":{},"19":{},"20":{},"22":{},"26":{},"32":{},"65":{},"70":{},"75":{}},"component":{}}],["5.",{"_index":1033,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.003072.mb",{"_index":1104,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.05.min",{"_index":1053,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.1",{"_index":2732,"title":{"32-21":{}},"name":{},"text":{},"component":{}}],["5.13.mb",{"_index":1100,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.13.min",{"_index":1044,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.b",{"_index":1072,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.gb",{"_index":1081,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.gib",{"_index":1094,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.h",{"_index":1038,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.kb",{"_index":1075,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.kib",{"_index":1090,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.m",{"_index":1030,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.mb",{"_index":1078,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.mib",{"_index":1092,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.min",{"_index":1035,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.n",{"_index":1023,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.pb",{"_index":1087,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.pib",{"_index":1098,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.tb",{"_index":1084,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.tib",{"_index":1096,"title":{},"name":{},"text":{"20":{}},"component":{}}],["5.u",{"_index":1027,"title":{},"name":{},"text":{"20":{}},"component":{}}],["50.mb",{"_index":2343,"title":{},"name":{},"text":{"23":{}},"component":{}}],["50.mib.tounit(\"mb",{"_index":2356,"title":{},"name":{},"text":{"23":{}},"component":{}}],["5678",{"_index":2844,"title":{},"name":{},"text":{"36":{}},"component":{}}],["5786",{"_index":3218,"title":{},"name":{},"text":{"75":{}},"component":{}}],["5939",{"_index":3097,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["6",{"_index":887,"title":{"32-22":{}},"name":{},"text":{"20":{},"22":{},"25":{},"32":{}},"component":{}}],["6.1",{"_index":2733,"title":{"32-23":{}},"name":{},"text":{},"component":{}}],["6.2",{"_index":2734,"title":{"32-24":{}},"name":{},"text":{},"component":{}}],["6.8",{"_index":2587,"title":{},"name":{},"text":{"28":{}},"component":{}}],["6000",{"_index":3223,"title":{},"name":{},"text":{"75":{}},"component":{}}],["6001",{"_index":3226,"title":{},"name":{},"text":{"75":{}},"component":{}}],["6002",{"_index":3227,"title":{},"name":{},"text":{"75":{}},"component":{}}],["6003",{"_index":3228,"title":{},"name":{},"text":{"75":{}},"component":{}}],["64",{"_index":851,"title":{},"name":{},"text":{"20":{}},"component":{}}],["65,535",{"_index":1811,"title":{},"name":{},"text":{"20":{}},"component":{}}],["65535",{"_index":1818,"title":{},"name":{},"text":{"20":{}},"component":{}}],["672",{"_index":1685,"title":{},"name":{},"text":{"20":{}},"component":{}}],["7",{"_index":889,"title":{"32-25":{}},"name":{},"text":{"20":{}},"component":{}}],["7.1",{"_index":2735,"title":{"32-26":{}},"name":{},"text":{},"component":{}}],["7.2",{"_index":2737,"title":{"32-27":{}},"name":{},"text":{},"component":{}}],["7.2.1",{"_index":2738,"title":{"32-28":{}},"name":{},"text":{},"component":{}}],["7.2.2",{"_index":2739,"title":{"32-29":{}},"name":{},"text":{},"component":{}}],["7.2.3",{"_index":2740,"title":{"32-30":{}},"name":{},"text":{},"component":{}}],["7.2.4",{"_index":2741,"title":{"32-31":{}},"name":{},"text":{},"component":{}}],["7.2.5",{"_index":2742,"title":{"32-32":{}},"name":{},"text":{},"component":{}}],["7.3",{"_index":2743,"title":{"32-33":{}},"name":{},"text":{},"component":{}}],["7.4",{"_index":2744,"title":{"32-34":{}},"name":{},"text":{},"component":{}}],["7.4.1",{"_index":2745,"title":{"32-35":{}},"name":{},"text":{},"component":{}}],["7.4.2",{"_index":2746,"title":{"32-36":{}},"name":{},"text":{},"component":{}}],["76543",{"_index":865,"title":{},"name":{},"text":{"20":{}},"component":{}}],["8",{"_index":739,"title":{"32-37":{}},"name":{},"text":{"17":{},"20":{},"21":{},"22":{},"25":{},"32":{}},"component":{}}],["8.",{"_index":1066,"title":{},"name":{},"text":{"20":{}},"component":{}}],["8.1",{"_index":2747,"title":{"32-38":{}},"name":{},"text":{},"component":{}}],["8.kib",{"_index":1115,"title":{},"name":{},"text":{"20":{}},"component":{}}],["8/11/14",{"_index":2422,"title":{},"name":{},"text":{"25":{}},"component":{}}],["8/14/2023",{"_index":2397,"title":{},"name":{},"text":{"23":{}},"component":{}}],["8/15/2023",{"_index":2398,"title":{},"name":{},"text":{"23":{}},"component":{}}],["84",{"_index":980,"title":{},"name":{},"text":{"20":{}},"component":{}}],["89",{"_index":2235,"title":{},"name":{},"text":{"21":{}},"component":{}}],["9",{"_index":1052,"title":{},"name":{},"text":{"20":{}},"component":{}}],["9,223,372,036,854,775,807",{"_index":1814,"title":{},"name":{},"text":{"20":{}},"component":{}}],["90",{"_index":2313,"title":{},"name":{},"text":{"22":{}},"component":{}}],["_",{"_index":1528,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["_diet",{"_index":1933,"title":{},"name":{},"text":{"20":{}},"component":{}}],["_docsit",{"_index":2564,"title":{},"name":{},"text":{"27":{}},"component":{}}],["_element_",{"_index":2230,"title":{},"name":{},"text":{"21":{}},"component":{}}],["_lifespan",{"_index":1981,"title":{},"name":{},"text":{"20":{}},"component":{}}],["_name",{"_index":1978,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["a\"|\"b",{"_index":1846,"title":{},"name":{},"text":{"20":{}},"component":{}}],["a\"|*\"b",{"_index":1849,"title":{},"name":{},"text":{"20":{}},"component":{}}],["a?*.txt",{"_index":2030,"title":{},"name":{},"text":{"20":{}},"component":{}}],["aarch64",{"_index":2421,"title":{},"name":{},"text":{"25":{},"73":{}},"component":{}}],["abbrevi",{"_index":2494,"title":{},"name":{},"text":{"25":{}},"component":{}}],["abc",{"_index":971,"title":{},"name":{},"text":{"20":{}},"component":{}}],["abcdef",{"_index":2017,"title":{},"name":{},"text":{"20":{}},"component":{}}],["abil",{"_index":1172,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["abilitiesbybird",{"_index":1975,"title":{},"name":{},"text":{"20":{}},"component":{}}],["abov",{"_index":1565,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"25":{},"28":{},"43":{},"67":{},"73":{},"75":{}},"component":{}}],["absenc",{"_index":1434,"title":{},"name":{},"text":{"20":{}},"component":{}}],["absent",{"_index":1652,"title":{},"name":{},"text":{"20":{}},"component":{}}],["absolut",{"_index":248,"title":{},"name":{},"text":{"9":{},"14":{},"17":{},"25":{},"27":{},"75":{}},"component":{}}],["abstract",{"_index":154,"title":{"11-1":{}},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"23":{},"64":{},"69":{},"75":{}},"component":{}}],["accept",{"_index":1267,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{},"28":{}},"component":{}}],["access",{"_index":112,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"14":{},"17":{},"20":{},"21":{},"22":{},"25":{},"27":{},"28":{},"36":{}},"component":{}}],["accid",{"_index":2682,"title":{},"name":{},"text":{"28":{}},"component":{}}],["accident",{"_index":1499,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accomplish",{"_index":1210,"title":{},"name":{},"text":{"20":{}},"component":{}}],["accord",{"_index":1668,"title":{},"name":{},"text":{"20":{}},"component":{}}],["account",{"_index":2554,"title":{},"name":{},"text":{"27":{}},"component":{}}],["achiev",{"_index":1322,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["acmecicd",{"_index":2298,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["acmecicd#pipeline.namerequiresbranchnam",{"_index":2326,"title":{},"name":{},"text":{"22":{}},"component":{}}],["acmecicd#timeout",{"_index":2309,"title":{},"name":{},"text":{"22":{}},"component":{}}],["acmecicd.pkl",{"_index":2297,"title":{},"name":{},"text":{"22":{}},"component":{}}],["act",{"_index":171,"title":{},"name":{},"text":{"9":{},"64":{}},"component":{}}],["action",{"_index":649,"title":{},"name":{},"text":{"16":{}},"component":{}}],["actual",{"_index":2345,"title":{},"name":{},"text":{"23":{}},"component":{}}],["ad",{"_index":44,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"20":{},"22":{},"23":{},"25":{},"32":{},"69":{}},"component":{}}],["adapt",{"_index":2151,"title":{},"name":{},"text":{"20":{}},"component":{}}],["add",{"_index":462,"title":{},"name":{},"text":{"13":{},"16":{},"20":{},"22":{},"25":{},"28":{},"32":{},"35":{},"39":{},"64":{},"73":{},"75":{}},"component":{}}],["add(2",{"_index":1914,"title":{},"name":{},"text":{"20":{}},"component":{}}],["add(a",{"_index":1913,"title":{},"name":{},"text":{"20":{}},"component":{}}],["add.apply(2",{"_index":1911,"title":{},"name":{},"text":{"20":{}},"component":{}}],["add2",{"_index":1924,"title":{},"name":{},"text":{"20":{}},"component":{}}],["addit",{"_index":512,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"32":{},"64":{},"65":{},"67":{},"70":{},"75":{}},"component":{}}],["addition",{"_index":702,"title":{},"name":{},"text":{"16":{},"20":{},"75":{}},"component":{}}],["address",{"_index":129,"title":{},"name":{},"text":{"9":{},"21":{},"27":{},"75":{}},"component":{}}],["addtoa",{"_index":1917,"title":{},"name":{},"text":{"20":{}},"component":{}}],["admin",{"_index":3219,"title":{},"name":{},"text":{"75":{}},"component":{}}],["admit",{"_index":1826,"title":{},"name":{},"text":{"20":{}},"component":{}}],["adopt",{"_index":448,"title":{},"name":{},"text":{"13":{}},"component":{}}],["adult",{"_index":2069,"title":{},"name":{},"text":{"20":{}},"component":{}}],["adultbirdfood",{"_index":2281,"title":{},"name":{},"text":{"22":{}},"component":{}}],["adultweightingram",{"_index":1177,"title":{},"name":{},"text":{"20":{}},"component":{}}],["advanc",{"_index":222,"title":{"20-82":{}},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["affect",{"_index":869,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["afraid",{"_index":1357,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ag",{"_index":655,"title":{},"name":{},"text":{"16":{},"19":{},"26":{},"75":{}},"component":{}}],["again",{"_index":685,"title":{},"name":{},"text":{"16":{},"20":{},"28":{}},"component":{}}],["against",{"_index":526,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"23":{},"25":{},"27":{},"28":{},"75":{}},"component":{}}],["agenda",{"_index":2403,"title":{},"name":{},"text":{"23":{}},"component":{}}],["aggreg",{"_index":795,"title":{"20-67":{}},"name":{},"text":{"20":{}},"component":{}}],["ahead",{"_index":1363,"title":{},"name":{},"text":{"20":{}},"component":{}}],["aim",{"_index":3319,"title":{},"name":{},"text":{"75":{}},"component":{}}],["albatross",{"_index":1336,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["alessandra",{"_index":3233,"title":{},"name":{},"text":{"75":{}},"component":{}}],["alessandra#ag",{"_index":3236,"title":{},"name":{},"text":{"75":{}},"component":{}}],["alessandra.pkl",{"_index":3232,"title":{},"name":{},"text":{"75":{}},"component":{}}],["algorithm",{"_index":2147,"title":{},"name":{},"text":{"20":{}},"component":{}}],["alia",{"_index":801,"title":{"20-73":{}},"name":{},"text":{"20":{}},"component":{}}],["alias",{"_index":806,"title":{"20-90":{},"20-91":{},"20-95":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["all:0.25.0",{"_index":634,"title":{},"name":{},"text":{"16":{}},"component":{}}],["allbird",{"_index":1535,"title":{},"name":{},"text":{"20":{}},"component":{}}],["allow",{"_index":110,"title":{},"name":{},"text":{"7":{},"14":{},"15":{},"17":{},"18":{},"19":{},"20":{},"22":{},"25":{},"27":{},"66":{},"72":{},"75":{}},"component":{}}],["allowedmodul",{"_index":2635,"title":{},"name":{},"text":{"28":{}},"component":{}}],["allowedresourc",{"_index":2636,"title":{},"name":{},"text":{"28":{}},"component":{}}],["allowlist",{"_index":109,"title":{"20-79":{}},"name":{},"text":{"7":{},"20":{}},"component":{}}],["alon",{"_index":2986,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["along",{"_index":1188,"title":{},"name":{},"text":{"20":{},"24":{},"58":{}},"component":{}}],["alongsid",{"_index":3321,"title":{},"name":{},"text":{"75":{}},"component":{}}],["alot",{"_index":2794,"title":{},"name":{},"text":{"32":{}},"component":{}}],["alphabet",{"_index":3003,"title":{},"name":{},"text":{"64":{}},"component":{}}],["alphanumer",{"_index":1527,"title":{},"name":{},"text":{"20":{}},"component":{}}],["alpin",{"_index":2415,"title":{"25-5":{}},"name":{},"text":{"25":{}},"component":{}}],["alreadi",{"_index":1953,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{}},"component":{}}],["alsoknowna",{"_index":2551,"title":{},"name":{},"text":{"27":{}},"component":{}}],["altern",{"_index":1749,"title":{"65-5":{},"70-5":{}},"name":{},"text":{"20":{},"26":{},"27":{},"36":{},"66":{},"69":{},"70":{},"75":{}},"component":{}}],["although",{"_index":983,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["alway",{"_index":352,"title":{},"name":{},"text":{"11":{},"19":{},"20":{},"21":{},"23":{},"27":{}},"component":{}}],["am",{"_index":2907,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["amadeu",{"_index":1971,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ambiguu",{"_index":2289,"title":{},"name":{},"text":{"22":{}},"component":{}}],["amd64",{"_index":2418,"title":{},"name":{},"text":{"25":{},"73":{}},"component":{}}],["amend",{"_index":780,"title":{"20-15":{},"20-26":{},"20-34":{},"20-56":{},"20-108":{},"20-109":{},"22-2":{},"22-4":{},"23-2":{},"32-7":{}},"name":{},"text":{"20":{},"22":{},"23":{},"25":{},"27":{},"32":{},"36":{},"40":{},"43":{},"47":{},"53":{},"60":{},"64":{},"67":{},"73":{},"75":{}},"component":{}}],["amendelementsandentries.pkl",{"_index":2279,"title":{},"name":{},"text":{"22":{}},"component":{}}],["amending/extending",{"_index":2791,"title":{},"name":{},"text":{"32":{}},"component":{}}],["amendingobjects.pkl",{"_index":2257,"title":{},"name":{},"text":{"22":{}},"component":{}}],["amount",{"_index":3179,"title":{},"name":{},"text":{"75":{}},"component":{}}],["amountlearn",{"_index":2194,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["amphibian",{"_index":2284,"title":{},"name":{},"text":{"22":{}},"component":{}}],["analog",{"_index":1190,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["analyz",{"_index":1836,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["ancestor",{"_index":1486,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["ancestor.pkl",{"_index":2779,"title":{},"name":{},"text":{"32":{}},"component":{}}],["ancestor2.pkl",{"_index":2780,"title":{},"name":{},"text":{"32":{}},"component":{}}],["anchor",{"_index":2540,"title":{},"name":{},"text":{"27":{}},"component":{}}],["ancillari",{"_index":3182,"title":{},"name":{},"text":{"75":{}},"component":{}}],["angl",{"_index":1832,"title":{},"name":{},"text":{"20":{}},"component":{}}],["anim",{"_index":1954,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["animalia",{"_index":2259,"title":{},"name":{},"text":{"22":{}},"component":{}}],["animals/birds/parrot.pkl",{"_index":1476,"title":{},"name":{},"text":{"20":{}},"component":{}}],["annot",{"_index":536,"title":{"20-30":{},"20-38":{},"20-92":{}},"name":{},"text":{"14":{},"16":{},"19":{},"20":{},"23":{},"27":{},"28":{},"32":{},"36":{},"64":{},"67":{},"69":{},"75":{}},"component":{}}],["announc",{"_index":3176,"title":{},"name":{},"text":{"75":{},"76":{}},"component":{}}],["anonym",{"_index":814,"title":{"20-106":{}},"name":{},"text":{"20":{}},"component":{}}],["anoth",{"_index":1130,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"75":{}},"component":{}}],["answer",{"_index":1231,"title":{},"name":{},"text":{"20":{}},"component":{}}],["anti",{"_index":3192,"title":{},"name":{},"text":{"75":{}},"component":{}}],["antlr",{"_index":2116,"title":{},"name":{},"text":{"20":{}},"component":{}}],["anyhash",{"_index":3104,"title":{},"name":{},"text":{"69":{}},"component":{}}],["anyon",{"_index":441,"title":{},"name":{},"text":{"13":{}},"component":{}}],["anyth",{"_index":1957,"title":{},"name":{},"text":{"20":{},"22":{},"23":{}},"component":{}}],["anywher",{"_index":2764,"title":{},"name":{},"text":{"32":{},"75":{}},"component":{}}],["apart",{"_index":933,"title":{},"name":{},"text":{"20":{},"21":{},"25":{}},"component":{}}],["api",{"_index":86,"title":{"65":{},"70":{},"20-10":{}},"name":{},"text":{"6":{},"7":{},"10":{},"14":{},"16":{},"17":{},"20":{},"24":{},"25":{},"27":{},"32":{},"65":{},"70":{},"75":{}},"component":{}}],["app",{"_index":2826,"title":{},"name":{},"text":{"34":{},"75":{}},"component":{}}],["appconfig",{"_index":2858,"title":{},"name":{},"text":{"36":{},"64":{},"67":{},"73":{}},"component":{}}],["appconfig.loadfrom(sourc",{"_index":3120,"title":{},"name":{},"text":{"70":{}},"component":{}}],["appconfig.loadfrompath(\"pkl/local/appconfig.pkl",{"_index":3172,"title":{},"name":{},"text":{"73":{}},"component":{}}],["appconfig.loadfrompath(context.background",{"_index":3029,"title":{},"name":{},"text":{"65":{},"67":{}},"component":{}}],["appconfig.pkl",{"_index":2837,"title":{},"name":{},"text":{"36":{},"67":{},"73":{}},"component":{}}],["appconfig.pkl.swift",{"_index":3170,"title":{},"name":{},"text":{"73":{}},"component":{}}],["appear",{"_index":2410,"title":{},"name":{},"text":{"23":{}},"component":{}}],["append",{"_index":1622,"title":{},"name":{},"text":{"20":{}},"component":{}}],["appl",{"_index":273,"title":{},"name":{},"text":{"9":{}},"component":{}}],["appli",{"_index":1282,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"32":{}},"component":{}}],["applic",{"_index":192,"title":{},"name":{},"text":{"9":{},"10":{},"13":{},"16":{},"18":{},"20":{},"22":{},"26":{},"35":{},"36":{},"67":{},"73":{},"75":{}},"component":{}}],["application#databas",{"_index":3264,"title":{},"name":{},"text":{"75":{}},"component":{}}],["application(@named(\"hostnam",{"_index":3295,"title":{},"name":{},"text":{"75":{}},"component":{}}],["application.pkl",{"_index":2840,"title":{},"name":{},"text":{"36":{},"75":{}},"component":{}}],["application.pkl.go",{"_index":3270,"title":{},"name":{},"text":{"75":{}},"component":{}}],["applications.pkl",{"_index":3221,"title":{},"name":{},"text":{"75":{}},"component":{}}],["application’",{"_index":2856,"title":{},"name":{},"text":{"36":{}},"component":{}}],["approach",{"_index":127,"title":{},"name":{},"text":{"9":{}},"component":{}}],["appropri",{"_index":1516,"title":{},"name":{},"text":{"20":{},"25":{},"36":{}},"component":{}}],["ara",{"_index":2288,"title":{},"name":{},"text":{"22":{}},"component":{}}],["arbitrari",{"_index":1319,"title":{},"name":{},"text":{"20":{},"21":{},"65":{},"70":{},"75":{}},"component":{}}],["arbitrarili",{"_index":2267,"title":{},"name":{},"text":{"22":{}},"component":{}}],["architectur",{"_index":2442,"title":{},"name":{},"text":{"25":{},"73":{}},"component":{}}],["archiv",{"_index":591,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["archive’",{"_index":2473,"title":{},"name":{},"text":{"25":{}},"component":{}}],["aren’t",{"_index":3110,"title":{},"name":{},"text":{"69":{}},"component":{}}],["aretha",{"_index":1967,"title":{},"name":{},"text":{"20":{}},"component":{}}],["argument",{"_index":619,"title":{},"name":{},"text":{"14":{},"17":{},"19":{},"20":{},"25":{},"27":{},"28":{},"36":{},"67":{}},"component":{}}],["aris",{"_index":1324,"title":{},"name":{},"text":{"20":{}},"component":{}}],["arithmet",{"_index":884,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ariti",{"_index":2107,"title":{},"name":{},"text":{"20":{}},"component":{}}],["around",{"_index":1564,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["arrang",{"_index":1396,"title":{},"name":{},"text":{"20":{}},"component":{}}],["array",{"_index":697,"title":{},"name":{},"text":{"16":{},"21":{}},"component":{}}],["arrow",{"_index":1943,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["artifact",{"_index":2161,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["artifactori",{"_index":3164,"title":{},"name":{},"text":{"73":{}},"component":{}}],["as(javatype.listof(string::class.java",{"_index":770,"title":{},"name":{},"text":{"19":{}},"component":{}}],["ascii",{"_index":2549,"title":{},"name":{},"text":{"27":{}},"component":{}}],["asid",{"_index":363,"title":{},"name":{},"text":{"11":{}},"component":{}}],["ask",{"_index":6,"title":{},"name":{},"text":{"1":{},"21":{}},"component":{}}],["assert",{"_index":1615,"title":{},"name":{},"text":{"20":{}},"component":{}}],["asset",{"_index":790,"title":{"20-49":{}},"name":{},"text":{"20":{},"28":{},"67":{}},"component":{}}],["assign",{"_index":1166,"title":{"32-29":{}},"name":{},"text":{"20":{},"22":{},"64":{},"69":{}},"component":{}}],["assigne",{"_index":2811,"title":{},"name":{},"text":{"32":{}},"component":{}}],["assigned/amend",{"_index":1314,"title":{},"name":{},"text":{"20":{}},"component":{}}],["assist",{"_index":2399,"title":{},"name":{},"text":{"23":{}},"component":{}}],["assum",{"_index":1538,"title":{},"name":{},"text":{"20":{}},"component":{}}],["async",{"_index":3118,"title":{},"name":{},"text":{"70":{},"72":{},"73":{}},"component":{}}],["atom",{"_index":2508,"title":{},"name":{},"text":{"25":{}},"component":{}}],["attach",{"_index":841,"title":{},"name":{},"text":{"20":{}},"component":{}}],["attempt",{"_index":1560,"title":{},"name":{},"text":{"20":{}},"component":{}}],["attend",{"_index":2192,"title":{},"name":{},"text":{"21":{}},"component":{}}],["attribut",{"_index":3147,"title":{},"name":{"71":{}},"text":{},"component":{}}],["audienc",{"_index":426,"title":{},"name":{},"text":{"11":{}},"component":{}}],["author",{"_index":447,"title":{},"name":{},"text":{"13":{},"20":{},"22":{},"32":{},"57":{},"75":{}},"component":{}}],["auto",{"_index":2889,"title":{},"name":{},"text":{"46":{}},"component":{}}],["autocomplet",{"_index":3324,"title":{},"name":{},"text":{"75":{}},"component":{}}],["autom",{"_index":445,"title":{},"name":{},"text":{"13":{},"25":{}},"component":{}}],["automat",{"_index":104,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"20":{},"40":{},"46":{},"48":{}},"component":{}}],["av",{"_index":1129,"title":{},"name":{},"text":{"20":{}},"component":{}}],["avail",{"_index":105,"title":{},"name":{},"text":{"7":{},"9":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"25":{},"26":{},"27":{},"28":{},"36":{},"39":{},"67":{},"75":{}},"component":{}}],["aviat",{"_index":2045,"title":{},"name":{},"text":{"20":{}},"component":{}}],["avoid",{"_index":424,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"28":{},"32":{}},"component":{}}],["await",{"_index":3119,"title":{},"name":{},"text":{"70":{},"72":{},"73":{}},"component":{}}],["awar",{"_index":159,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["awkward",{"_index":3190,"title":{},"name":{},"text":{"75":{}},"component":{}}],["a|b|c",{"_index":2981,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["b",{"_index":1569,"title":{},"name":{},"text":{"20":{},"64":{}},"component":{}}],["ba",{"_index":2875,"title":{},"name":{},"text":{"40":{}},"component":{}}],["back",{"_index":1207,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"64":{}},"component":{}}],["backbon",{"_index":1119,"title":{},"name":{},"text":{"20":{}},"component":{}}],["background",{"_index":2835,"title":{},"name":{},"text":{"36":{}},"component":{}}],["backslash",{"_index":962,"title":{},"name":{},"text":{"20":{}},"component":{}}],["backtick",{"_index":1132,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bad.pkl",{"_index":2781,"title":{},"name":{},"text":{"32":{}},"component":{}}],["badg",{"_index":2832,"title":{},"name":{},"text":{"35":{},"75":{}},"component":{}}],["badgeid",{"_index":3275,"title":{},"name":{},"text":{"75":{}},"component":{}}],["bandwidthrequirementpersecond",{"_index":2342,"title":{},"name":{},"text":{"23":{}},"component":{}}],["bar",{"_index":1848,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"32":{},"65":{},"70":{}},"component":{}}],["bar.pkl",{"_index":2460,"title":{},"name":{},"text":{"25":{},"32":{}},"component":{}}],["bar.pkl'",{"_index":2459,"title":{},"name":{},"text":{"25":{}},"component":{}}],["barn",{"_index":1331,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{}},"component":{}}],["barney",{"_index":1987,"title":{},"name":{},"text":{"20":{}},"component":{}}],["barnowl",{"_index":1930,"title":{},"name":{},"text":{"20":{}},"component":{}}],["barnowlwithdiet",{"_index":1931,"title":{},"name":{},"text":{"20":{}},"component":{}}],["base",{"_index":468,"title":{"64-4":{}},"name":{},"text":{"13":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"64":{},"67":{},"75":{}},"component":{}}],["baseuri",{"_index":2155,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bash",{"_index":1556,"title":{},"name":{},"text":{"20":{}},"component":{}}],["basi",{"_index":2959,"title":{},"name":{},"text":{"64":{},"75":{}},"component":{}}],["basic",{"_index":2187,"title":{"21":{},"21-1":{},"23-1":{},"64-8":{},"69-3":{}},"name":{},"text":{"21":{},"23":{},"24":{},"46":{},"75":{}},"component":{}}],["batch",{"_index":2416,"title":{"25-22":{}},"name":{},"text":{},"component":{}}],["baz",{"_index":1851,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["baz.pkl",{"_index":2760,"title":{},"name":{},"text":{"32":{}},"component":{}}],["be",{"_index":1311,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"28":{},"64":{},"69":{}},"component":{}}],["becom",{"_index":190,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"69":{},"75":{}},"component":{}}],["befor",{"_index":605,"title":{},"name":{},"text":{"14":{},"17":{},"19":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"75":{}},"component":{}}],["begin",{"_index":562,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["beginn",{"_index":2404,"title":{},"name":{},"text":{"23":{}},"component":{}}],["behav",{"_index":1191,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["behavior",{"_index":1555,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"65":{},"70":{}},"component":{}}],["beingimpl",{"_index":3011,"title":{},"name":{},"text":{"64":{}},"component":{}}],["believ",{"_index":278,"title":{},"name":{},"text":{"9":{},"12":{},"75":{}},"component":{}}],["below",{"_index":751,"title":{},"name":{},"text":{"19":{},"20":{},"25":{},"58":{},"64":{},"69":{}},"component":{}}],["benefit",{"_index":395,"title":{},"name":{},"text":{"11":{},"13":{},"14":{}},"component":{}}],["berri",{"_index":1325,"title":{},"name":{},"text":{"20":{},"22":{},"25":{}},"component":{}}],["besid",{"_index":1973,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["best",{"_index":434,"title":{},"name":{},"text":{"12":{},"75":{}},"component":{}}],["bestforconfig",{"_index":2350,"title":{},"name":{},"text":{"23":{}},"component":{}}],["better",{"_index":1716,"title":{},"name":{},"text":{"20":{},"26":{},"32":{}},"component":{}}],["betti",{"_index":2401,"title":{},"name":{},"text":{"23":{}},"component":{}}],["between",{"_index":438,"title":{},"name":{},"text":{"12":{},"14":{},"20":{},"23":{},"25":{},"27":{},"28":{},"32":{},"75":{}},"component":{}}],["beyond",{"_index":1879,"title":{},"name":{},"text":{"20":{}},"component":{}}],["binari",{"_index":279,"title":{"32-32":{}},"name":{},"text":{"9":{},"20":{},"25":{},"64":{},"67":{},"69":{},"73":{}},"component":{}}],["bind",{"_index":52,"title":{"4":{},"20-16":{},"20-27":{},"20-35":{},"20-132":{},"75-4":{}},"name":{"4":{}},"text":{"2":{},"20":{},"25":{},"32":{},"75":{}},"component":{}}],["bird",{"_index":844,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["bird'",{"_index":2040,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird(lifespan",{"_index":2070,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird.greet",{"_index":2081,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird.greet(pigeon",{"_index":1422,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird.lifespan",{"_index":2068,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird.nam",{"_index":1420,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["bird.pkl",{"_index":1273,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird.taxonomi",{"_index":2277,"title":{},"name":{},"text":{"22":{}},"component":{}}],["bird1",{"_index":1839,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["bird2",{"_index":1828,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["bird3",{"_index":2251,"title":{},"name":{},"text":{"21":{}},"component":{}}],["bird](https://en.wikipedia.org/wiki/bird",{"_index":2046,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bird`][bird",{"_index":2077,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdcolor",{"_index":2128,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdcount",{"_index":2222,"title":{},"name":{},"text":{"21":{}},"component":{}}],["birddiet",{"_index":1687,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdfil",{"_index":1656,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdlifespan",{"_index":1301,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdlifespan(24",{"_index":1300,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdlifespan(i",{"_index":1298,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds'",{"_index":1350,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.adult",{"_index":2079,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.bird",{"_index":2078,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.bird.greet",{"_index":2082,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.bird.nam",{"_index":2080,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.ispigeon",{"_index":2085,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.mapindexed((i",{"_index":2126,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.pigeon",{"_index":2083,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.pigeonnam",{"_index":1315,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.pkl",{"_index":1312,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.tolist().map((it",{"_index":1714,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds.zip(diet",{"_index":1695,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/*.pkl",{"_index":1534,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/*.{yml,json",{"_index":2029,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/bird.pkl",{"_index":1479,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/falcon.pkl",{"_index":1546,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/parrot.\\(parrot.output.renderer.extens",{"_index":1613,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/parrot.pkl",{"_index":1544,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/parrot.yaml",{"_index":1606,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/pigeon.\\(pigeon.output.renderer.extens",{"_index":1612,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/pigeon.json",{"_index":1605,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/pigeon.pkl",{"_index":1542,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/pklproject",{"_index":2166,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds/{*.yml,*.json",{"_index":2027,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds2",{"_index":1333,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds2[\"parrot\"].diet",{"_index":1388,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds[\"parrot",{"_index":1379,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds[\"pigeon",{"_index":1378,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds[0].nam",{"_index":1328,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds[1].diet",{"_index":1330,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birds[2",{"_index":2249,"title":{},"name":{},"text":{"21":{}},"component":{}}],["birdsbynam",{"_index":1979,"title":{},"name":{},"text":{"20":{}},"component":{}}],["birdx",{"_index":2253,"title":{},"name":{},"text":{"21":{}},"component":{}}],["bird|str",{"_index":1871,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bit",{"_index":852,"title":{},"name":{},"text":{"20":{}},"component":{}}],["biz",{"_index":2812,"title":{},"name":{},"text":{"32":{}},"component":{}}],["blank",{"_index":406,"title":{"20-129":{}},"name":{},"text":{"11":{},"20":{},"32":{}},"component":{}}],["blend",{"_index":3197,"title":{},"name":{},"text":{"75":{}},"component":{}}],["block",{"_index":838,"title":{"32-19":{}},"name":{},"text":{"20":{},"28":{},"32":{}},"component":{}}],["blog",{"_index":3334,"title":{"76":{}},"name":{},"text":{},"component":{"75":{},"76":{}}}],["blown",{"_index":188,"title":{},"name":{},"text":{"9":{}},"component":{}}],["blue",{"_index":2130,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["bodi",{"_index":830,"title":{"20-133":{},"32-9":{},"32-34":{}},"name":{},"text":{"20":{},"32":{},"44":{}},"component":{}}],["bool",{"_index":2970,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["boolean",{"_index":776,"title":{"20-5":{}},"name":{},"text":{"20":{},"23":{},"28":{},"32":{},"64":{},"69":{}},"component":{}}],["booleean",{"_index":2806,"title":{},"name":{},"text":{"32":{}},"component":{}}],["boot",{"_index":72,"title":{"34":{}},"name":{},"text":{"3":{},"9":{},"14":{},"17":{},"28":{},"34":{},"35":{},"36":{}},"component":{}}],["bootstrap",{"_index":3069,"title":{},"name":{},"text":{"66":{}},"component":{}}],["boot’",{"_index":2828,"title":{},"name":{},"text":{"34":{}},"component":{}}],["borrow",{"_index":3198,"title":{},"name":{},"text":{"75":{}},"component":{}}],["both",{"_index":399,"title":{},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"21":{},"22":{},"25":{},"27":{},"28":{},"75":{}},"component":{}}],["bottom",{"_index":1400,"title":{},"name":{},"text":{"20":{}},"component":{}}],["bound",{"_index":1157,"title":{},"name":{},"text":{"20":{}},"component":{}}],["boundari",{"_index":1219,"title":{},"name":{},"text":{"20":{}},"component":{}}],["box",{"_index":378,"title":{},"name":{},"text":{"11":{},"13":{}},"component":{}}],["brace",{"_index":1122,"title":{"32-28":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["bracket",{"_index":1833,"title":{"52":{}},"name":{"52":{}},"text":{"20":{},"21":{},"52":{},"54":{}},"component":{}}],["branch",{"_index":1644,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["branchnam",{"_index":2301,"title":{},"name":{},"text":{"22":{}},"component":{}}],["break",{"_index":989,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["breeder",{"_index":2214,"title":{},"name":{},"text":{"21":{}},"component":{}}],["brew",{"_index":3160,"title":{},"name":{},"text":{"73":{}},"component":{}}],["brief",{"_index":2447,"title":{},"name":{},"text":{"25":{}},"component":{}}],["bring",{"_index":2409,"title":{},"name":{},"text":{"23":{}},"component":{}}],["brittl",{"_index":2383,"title":{},"name":{},"text":{"23":{}},"component":{}}],["brows",{"_index":84,"title":{},"name":{},"text":{"6":{},"16":{},"19":{},"26":{},"27":{}},"component":{}}],["browser",{"_index":3329,"title":{},"name":{},"text":{"75":{}},"component":{}}],["bug",{"_index":364,"title":{},"name":{},"text":{"11":{},"73":{}},"component":{}}],["buggi",{"_index":367,"title":{},"name":{},"text":{"11":{}},"component":{}}],["build",{"_index":35,"title":{},"name":{},"text":{"2":{},"9":{},"10":{},"12":{},"14":{},"16":{},"17":{},"20":{},"21":{},"25":{},"26":{},"27":{},"28":{},"36":{},"56":{},"75":{}},"component":{}}],["build.gradl",{"_index":493,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"28":{},"35":{},"36":{}},"component":{}}],["build.gradle.kt",{"_index":2588,"title":{},"name":{},"text":{"28":{}},"component":{}}],["build/test",{"_index":2470,"title":{},"name":{},"text":{"25":{}},"component":{}}],["builder",{"_index":761,"title":{},"name":{},"text":{"19":{}},"component":{}}],["built",{"_index":173,"title":{"75-2":{}},"name":{},"text":{"9":{},"20":{},"25":{},"70":{},"75":{}},"component":{}}],["bunch",{"_index":2208,"title":{},"name":{},"text":{"21":{}},"component":{}}],["bundl",{"_index":501,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"43":{}},"component":{}}],["buri",{"_index":2091,"title":{},"name":{},"text":{"20":{}},"component":{}}],["buz",{"_index":2782,"title":{},"name":{},"text":{"32":{}},"component":{}}],["buz.pkl",{"_index":2761,"title":{},"name":{},"text":{"32":{}},"component":{}}],["bypass",{"_index":1598,"title":{},"name":{},"text":{"20":{}},"component":{}}],["byte",{"_index":1073,"title":{},"name":{},"text":{"20":{}},"component":{}}],["c",{"_index":1570,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["ca",{"_index":620,"title":{"25-29":{}},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["cach",{"_index":571,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{},"65":{},"70":{}},"component":{}}],["call",{"_index":379,"title":{"32-31":{}},"name":{},"text":{"11":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"32":{},"58":{},"65":{},"70":{},"73":{},"75":{}},"component":{}}],["came",{"_index":3193,"title":{},"name":{},"text":{"75":{}},"component":{}}],["camel",{"_index":2546,"title":{},"name":{},"text":{"27":{}},"component":{}}],["camelcas",{"_index":2752,"title":{},"name":{},"text":{"32":{}},"component":{}}],["canfli",{"_index":1280,"title":{},"name":{},"text":{"20":{}},"component":{}}],["can’t",{"_index":2285,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["capabl",{"_index":179,"title":{},"name":{},"text":{"9":{},"20":{},"75":{}},"component":{}}],["capit",{"_index":2060,"title":{},"name":{},"text":{"20":{},"27":{},"64":{},"69":{}},"component":{}}],["care",{"_index":2902,"title":{},"name":{},"text":{"52":{},"54":{}},"component":{}}],["carri",{"_index":2018,"title":{},"name":{},"text":{"20":{}},"component":{}}],["carriag",{"_index":960,"title":{},"name":{},"text":{"20":{}},"component":{}}],["case",{"_index":431,"title":{"13":{}},"name":{"13":{}},"text":{"11":{},"12":{},"20":{},"22":{},"23":{},"25":{},"27":{},"32":{},"36":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["caseiter",{"_index":3107,"title":{},"name":{},"text":{"69":{},"75":{}},"component":{}}],["cast",{"_index":804,"title":{"20-85":{}},"name":{},"text":{"20":{}},"component":{}}],["catch",{"_index":1859,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["categor",{"_index":2556,"title":{},"name":{},"text":{"27":{}},"component":{}}],["categori",{"_index":2559,"title":{},"name":{},"text":{"27":{}},"component":{}}],["caught",{"_index":483,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["caus",{"_index":420,"title":{},"name":{},"text":{"11":{},"20":{},"25":{},"28":{},"65":{},"67":{},"70":{},"75":{}},"component":{}}],["cc",{"_index":3162,"title":{},"name":{},"text":{"73":{}},"component":{}}],["cell",{"_index":1192,"title":{},"name":{},"text":{"20":{}},"component":{}}],["central",{"_index":488,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"22":{},"26":{},"27":{},"28":{},"35":{}},"component":{}}],["certain",{"_index":206,"title":{},"name":{},"text":{"9":{},"20":{},"23":{}},"component":{}}],["certif",{"_index":621,"title":{"25-29":{}},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["cfg",{"_index":3027,"title":{},"name":{},"text":{"65":{},"66":{},"67":{}},"component":{}}],["cfg.host",{"_index":3074,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["chain",{"_index":826,"title":{"20-125":{},"32-31":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["challeng",{"_index":191,"title":{},"name":{},"text":{"9":{}},"component":{}}],["chanc",{"_index":2113,"title":{},"name":{},"text":{"20":{}},"component":{}}],["chang",{"_index":1007,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"50":{}},"component":{}}],["changelog",{"_index":2713,"title":{"30":{},"33":{},"49":{},"56":{},"63":{},"68":{}},"name":{"30":{},"33":{},"49":{},"56":{},"63":{},"68":{}},"text":{"31":{},"50":{}},"component":{}}],["chapter",{"_index":487,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"27":{}},"component":{}}],["charact",{"_index":551,"title":{"20-117":{}},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"27":{},"28":{},"32":{},"64":{},"69":{}},"component":{}}],["chars.first",{"_index":3242,"title":{},"name":{},"text":{"75":{}},"component":{}}],["chars.last",{"_index":3243,"title":{},"name":{},"text":{"75":{}},"component":{}}],["check",{"_index":568,"title":{"20-62":{},"37-5":{},"37-6":{},"37-7":{},"37-8":{}},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"46":{},"48":{},"50":{},"57":{},"75":{}},"component":{}}],["checksum",{"_index":1464,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["child",{"_index":648,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"32":{},"64":{},"65":{},"70":{}},"component":{}}],["chirp",{"_index":1974,"title":{},"name":{},"text":{"20":{}},"component":{}}],["chmod",{"_index":2439,"title":{},"name":{},"text":{"25":{},"67":{},"73":{}},"component":{}}],["choic",{"_index":3081,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["choos",{"_index":1522,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["choosen",{"_index":1844,"title":{},"name":{},"text":{"20":{}},"component":{}}],["chosen",{"_index":1519,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cicd#pipelines[#1].nam",{"_index":2327,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cicd#timeout",{"_index":2311,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cicd.pkl",{"_index":2306,"title":{},"name":{},"text":{"22":{}},"component":{}}],["citi",{"_index":2072,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["cla",{"_index":2904,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["clade",{"_index":2260,"title":{},"name":{},"text":{"22":{}},"component":{}}],["clash",{"_index":1518,"title":{},"name":{},"text":{"20":{}},"component":{}}],["class",{"_index":102,"title":{"20-39":{},"20-40":{},"20-93":{},"20-117":{},"21-2":{},"32-20":{},"32-21":{},"64-9":{},"69-4":{}},"name":{},"text":{"7":{},"10":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"41":{},"43":{},"44":{},"46":{},"53":{},"54":{},"59":{},"60":{},"61":{},"64":{},"69":{},"72":{},"75":{}},"component":{}}],["class/symbol",{"_index":2862,"title":{"37-4":{}},"name":{},"text":{},"component":{}}],["classes/struct",{"_index":3254,"title":{},"name":{},"text":{"75":{}},"component":{}}],["classnam",{"_index":2524,"title":{},"name":{},"text":{"26":{}},"component":{}}],["classpath",{"_index":2684,"title":{},"name":{},"text":{"28":{}},"component":{}}],["claus",{"_index":793,"title":{"20-59":{},"32-7":{}},"name":{},"text":{"20":{},"22":{},"23":{},"32":{},"40":{},"43":{}},"component":{}}],["claw",{"_index":2228,"title":{},"name":{},"text":{"21":{}},"component":{}}],["clean",{"_index":239,"title":{},"name":{},"text":{"9":{}},"component":{}}],["clear",{"_index":684,"title":{},"name":{},"text":{"16":{},"20":{},"25":{}},"component":{}}],["cli",{"_index":56,"title":{"25":{},"14-6":{},"14-10":{},"17-6":{},"17-10":{},"20-64":{},"27-8":{},"27-14":{}},"name":{},"text":{"2":{},"8":{},"10":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"32":{},"64":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["click",{"_index":2510,"title":{},"name":{},"text":{"25":{},"27":{},"41":{},"46":{},"47":{}},"component":{}}],["clickabl",{"_index":2317,"title":{},"name":{},"text":{"22":{}},"component":{}}],["clidocgener",{"_index":2577,"title":{},"name":{},"text":{"27":{}},"component":{}}],["client",{"_index":2467,"title":{},"name":{},"text":{"25":{}},"component":{}}],["clientport",{"_index":900,"title":{},"name":{},"text":{"20":{}},"component":{}}],["clievalu",{"_index":2502,"title":{},"name":{},"text":{"25":{}},"component":{}}],["close",{"_index":668,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"26":{},"32":{},"40":{},"52":{},"54":{}},"component":{}}],["closur",{"_index":1916,"title":{},"name":{},"text":{"20":{}},"component":{}}],["clutter",{"_index":161,"title":{},"name":{},"text":{"9":{}},"component":{}}],["cmd+doubl",{"_index":2509,"title":{},"name":{},"text":{"25":{}},"component":{}}],["cmd/main.go",{"_index":3098,"title":{},"name":{},"text":{"67":{}},"component":{}}],["coalesc",{"_index":797,"title":{"20-70":{}},"name":{},"text":{"20":{}},"component":{}}],["code",{"_index":59,"title":{"14":{},"17":{},"40":{},"41":{},"42":{},"44":{},"45":{},"50":{},"53":{},"59":{},"60":{},"64":{},"69":{},"25-26":{},"28-7":{},"28-10":{},"37-1":{},"37-2":{},"40-3":{},"43-1":{},"64-1":{},"64-2":{},"65-3":{},"65-4":{},"67-3":{},"69-1":{},"70-3":{},"70-4":{},"73-3":{}},"name":{"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"53":{},"59":{},"60":{}},"text":{"2":{},"9":{},"10":{},"11":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"32":{},"36":{},"40":{},"42":{},"43":{},"46":{},"48":{},"50":{},"51":{},"53":{},"54":{},"55":{},"60":{},"61":{},"62":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{}},"component":{}}],["codebas",{"_index":2432,"title":{},"name":{},"text":{"25":{}},"component":{}}],["codegen",{"_index":476,"title":{},"name":{"14":{},"17":{},"64":{},"69":{}},"text":{"14":{},"17":{},"28":{},"36":{},"64":{},"69":{}},"component":{}}],["code’",{"_index":1866,"title":{},"name":{},"text":{"20":{}},"component":{}}],["codingkey",{"_index":3130,"title":{},"name":{},"text":{"70":{}},"component":{}}],["coincid",{"_index":2585,"title":{},"name":{},"text":{"28":{}},"component":{}}],["coll",{"_index":1834,"title":{},"name":{},"text":{"20":{}},"component":{}}],["collaps",{"_index":2539,"title":{},"name":{},"text":{"27":{},"41":{},"46":{},"54":{},"59":{},"61":{}},"component":{}}],["collat",{"_index":2012,"title":{},"name":{},"text":{"20":{}},"component":{}}],["collect",{"_index":696,"title":{"21-7":{}},"name":{},"text":{"16":{},"20":{},"28":{},"32":{}},"component":{}}],["collections.pkl",{"_index":2239,"title":{},"name":{},"text":{"21":{}},"component":{}}],["collid",{"_index":3005,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["collis",{"_index":2114,"title":{},"name":{},"text":{"20":{}},"component":{}}],["colon",{"_index":1506,"title":{},"name":{},"text":{"20":{}},"component":{}}],["columba",{"_index":1401,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["columbiform",{"_index":2262,"title":{},"name":{},"text":{"22":{}},"component":{}}],["com.animals.bird",{"_index":1431,"title":{},"name":{},"text":{"20":{}},"component":{}}],["com.exampl",{"_index":2569,"title":{},"name":{},"text":{"27":{}},"component":{}}],["com.example.bird",{"_index":2570,"title":{},"name":{},"text":{"27":{}},"component":{}}],["com.example.bird.parrot",{"_index":2572,"title":{},"name":{},"text":{"27":{}},"component":{}}],["com.example.birds.parrot",{"_index":2571,"title":{},"name":{},"text":{"27":{}},"component":{}}],["com.example.foo",{"_index":2759,"title":{},"name":{},"text":{"32":{}},"component":{}}],["combin",{"_index":732,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["combinedmap",{"_index":1756,"title":{},"name":{},"text":{"20":{}},"component":{}}],["come",{"_index":443,"title":{},"name":{},"text":{"13":{},"20":{},"25":{},"27":{},"32":{}},"component":{}}],["comfort",{"_index":3320,"title":{},"name":{},"text":{"75":{}},"component":{}}],["comma",{"_index":557,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"32":{}},"component":{}}],["command",{"_index":32,"title":{"25-25":{}},"name":{},"text":{"2":{},"10":{},"12":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"47":{},"67":{},"73":{}},"component":{}}],["comment",{"_index":166,"title":{"20-1":{},"20-122":{},"32-16":{},"32-17":{},"32-18":{},"32-19":{}},"name":{},"text":{"9":{},"14":{},"17":{},"20":{},"27":{},"32":{},"40":{},"75":{}},"component":{}}],["commit",{"_index":2681,"title":{},"name":{},"text":{"28":{}},"component":{}}],["common",{"_index":330,"title":{"25-20":{}},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"75":{}},"component":{}}],["commonmark",{"_index":2050,"title":{},"name":{},"text":{"20":{}},"component":{}}],["commun",{"_index":0,"title":{"1":{}},"name":{"1":{}},"text":{"9":{},"11":{},"25":{},"65":{},"70":{}},"component":{}}],["compar",{"_index":223,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["comparison",{"_index":122,"title":{"9":{}},"name":{"9":{}},"text":{"9":{},"12":{},"20":{}},"component":{}}],["comparison1",{"_index":881,"title":{},"name":{},"text":{"20":{}},"component":{}}],["comparison2",{"_index":882,"title":{},"name":{},"text":{"20":{}},"component":{}}],["comparison4",{"_index":883,"title":{},"name":{},"text":{"20":{}},"component":{}}],["compat",{"_index":460,"title":{},"name":{},"text":{"13":{},"14":{},"17":{},"20":{},"27":{}},"component":{}}],["compatibilti",{"_index":2983,"title":{},"name":{},"text":{"64":{}},"component":{}}],["compil",{"_index":267,"title":{},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"19":{},"25":{},"26":{},"27":{},"28":{},"35":{},"36":{}},"component":{}}],["complain",{"_index":2319,"title":{},"name":{},"text":{"22":{}},"component":{}}],["complet",{"_index":177,"title":{"37-1":{},"37-2":{},"40-3":{}},"name":{},"text":{"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"20":{},"25":{},"40":{},"43":{},"46":{},"58":{}},"component":{}}],["complex",{"_index":43,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{},"20":{},"25":{},"75":{}},"component":{}}],["complic",{"_index":1791,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["compon",{"_index":293,"title":{"10":{}},"name":{"10":{},"71":{}},"text":{"10":{},"12":{},"14":{},"20":{},"36":{}},"component":{}}],["compos",{"_index":2254,"title":{"22-1":{}},"name":{},"text":{},"component":{}}],["composit",{"_index":813,"title":{"20-105":{}},"name":{},"text":{"20":{}},"component":{}}],["comprehens",{"_index":831,"title":{},"name":{},"text":{"20":{},"24":{}},"component":{}}],["comput",{"_index":333,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["concaten",{"_index":969,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"32":{}},"component":{}}],["concept",{"_index":316,"title":{"11":{}},"name":{"11":{}},"text":{"11":{},"12":{},"25":{}},"component":{}}],["conceptu",{"_index":2464,"title":{},"name":{},"text":{"25":{}},"component":{}}],["concern",{"_index":2793,"title":{},"name":{},"text":{"32":{}},"component":{}}],["concret",{"_index":404,"title":{},"name":{},"text":{"11":{}},"component":{}}],["condit",{"_index":1977,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["condition",{"_index":1961,"title":{},"name":{},"text":{"20":{}},"component":{}}],["confer",{"_index":2215,"title":{},"name":{},"text":{"21":{}},"component":{}}],["config",{"_index":120,"title":{"16":{},"19":{},"9-1":{},"9-3":{},"37-1":{}},"name":{"16":{},"19":{}},"text":{"9":{},"10":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"28":{},"36":{},"40":{},"43":{},"58":{},"65":{},"70":{},"72":{},"73":{}},"component":{}}],["config.a",{"_index":768,"title":{},"name":{},"text":{"19":{}},"component":{}}],["config.get(\"pigeon",{"_index":660,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{}}],["config.host",{"_index":3152,"title":{},"name":{},"text":{"72":{}},"component":{}}],["config.host)\\n",{"_index":3173,"title":{},"name":{},"text":{"73":{}},"component":{}}],["config.pkl",{"_index":1568,"title":{},"name":{},"text":{"20":{},"25":{},"32":{},"66":{}},"component":{}}],["config.to",{"_index":767,"title":{},"name":{},"text":{"19":{}},"component":{}}],["config.yaml",{"_index":2449,"title":{},"name":{},"text":{"25":{}},"component":{}}],["config.yml",{"_index":2756,"title":{},"name":{},"text":{"32":{}},"component":{}}],["config/appconfig.pkl",{"_index":2946,"title":{},"name":{},"text":{"64":{}},"component":{}}],["config1.pkl",{"_index":2486,"title":{},"name":{},"text":{"25":{}},"component":{}}],["config2.pkl",{"_index":2487,"title":{},"name":{},"text":{"25":{}},"component":{}}],["config3.pkl",{"_index":2488,"title":{},"name":{},"text":{"25":{}},"component":{}}],["config[\"name\"].to",{"_index":773,"title":{},"name":{},"text":{"19":{}},"component":{}}],["config[\"pigeon",{"_index":756,"title":{},"name":{},"text":{"19":{}},"component":{}}],["configclass",{"_index":2847,"title":{},"name":{},"text":{"36":{}},"component":{}}],["configevalu",{"_index":639,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{}}],["configevaluator.preconfigur",{"_index":651,"title":{},"name":{},"text":{"16":{}},"component":{}}],["configevaluator.preconfigured().forkotlin",{"_index":753,"title":{},"name":{},"text":{"19":{}},"component":{}}],["configevaluatorbuild",{"_index":737,"title":{},"name":{},"text":{"16":{}},"component":{}}],["configevaluatorbuilder.preconfigur",{"_index":666,"title":{},"name":{},"text":{"16":{}},"component":{}}],["configevaluatorbuilder.unconfigur",{"_index":667,"title":{},"name":{},"text":{"16":{}},"component":{}}],["configs.setup",{"_index":2934,"title":{},"name":{},"text":{"58":{}},"component":{}}],["configur",{"_index":24,"title":{"21":{},"75":{},"16-5":{},"22-1":{},"28-4":{},"28-9":{},"28-12":{},"28-15":{},"28-18":{},"28-21":{},"64-2":{},"67-4":{},"73-4":{},"76-1":{}},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"34":{},"36":{},"64":{},"65":{},"67":{},"70":{},"73":{},"75":{},"76":{}},"component":{}}],["configurablefilecollect",{"_index":2622,"title":{},"name":{},"text":{"28":{}},"component":{}}],["configurationpropertiesscan",{"_index":2852,"title":{},"name":{},"text":{"36":{}},"component":{}}],["confirm",{"_index":2360,"title":{},"name":{},"text":{"23":{},"51":{}},"component":{}}],["conflict",{"_index":638,"title":{"64-11":{},"69-6":{}},"name":{},"text":{"16":{},"20":{},"25":{},"64":{},"69":{},"75":{}},"component":{}}],["conform",{"_index":1699,"title":{},"name":{},"text":{"20":{}},"component":{}}],["confus",{"_index":2184,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["congratul",{"_index":1229,"title":{},"name":{},"text":{"20":{}},"component":{}}],["conjunct",{"_index":944,"title":{},"name":{},"text":{"20":{}},"component":{}}],["connect",{"_index":624,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"27":{},"75":{}},"component":{}}],["consecut",{"_index":842,"title":{},"name":{},"text":{"20":{}},"component":{}}],["consequ",{"_index":1495,"title":{},"name":{},"text":{"20":{}},"component":{}}],["consid",{"_index":1661,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"64":{}},"component":{}}],["consider",{"_index":2232,"title":{},"name":{},"text":{"21":{}},"component":{}}],["consist",{"_index":294,"title":{},"name":{},"text":{"10":{},"20":{},"22":{},"32":{}},"component":{}}],["consol",{"_index":1679,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["const",{"_index":786,"title":{"20-23":{}},"name":{},"text":{"20":{},"64":{},"75":{}},"component":{}}],["constant",{"_index":2185,"title":{},"name":{},"text":{"20":{},"64":{}},"component":{}}],["constantly(_",{"_index":2127,"title":{},"name":{},"text":{"20":{}},"component":{}}],["constitu",{"_index":1831,"title":{},"name":{},"text":{"20":{}},"component":{}}],["constrain",{"_index":1019,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["constraint",{"_index":393,"title":{"20-104":{},"20-105":{},"37-7":{}},"name":{},"text":{"11":{},"20":{},"22":{},"23":{},"32":{},"75":{}},"component":{}}],["constru",{"_index":2231,"title":{},"name":{},"text":{"21":{}},"component":{}}],["construct",{"_index":1021,"title":{},"name":{},"text":{"20":{},"65":{}},"component":{}}],["constructor",{"_index":540,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"28":{},"32":{},"65":{}},"component":{}}],["constructor.pkl",{"_index":2775,"title":{},"name":{},"text":{"32":{}},"component":{}}],["constructor’",{"_index":714,"title":{},"name":{},"text":{"16":{}},"component":{}}],["consult",{"_index":1470,"title":{},"name":{},"text":{"20":{},"67":{},"69":{},"70":{},"73":{}},"component":{}}],["consum",{"_index":303,"title":{"16-5":{}},"name":{},"text":{"10":{},"11":{},"13":{},"14":{},"16":{},"17":{},"20":{}},"component":{}}],["cont",{"_index":1835,"title":{},"name":{},"text":{"20":{}},"component":{}}],["contact",{"_index":1894,"title":{"34-1":{}},"name":{},"text":{"20":{}},"component":{}}],["contain",{"_index":504,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"43":{},"47":{},"75":{}},"component":{}}],["content",{"_index":986,"title":{},"name":{},"text":{"20":{},"25":{},"26":{},"28":{},"65":{},"70":{}},"component":{}}],["context",{"_index":2325,"title":{},"name":{},"text":{"22":{},"40":{},"65":{},"66":{},"67":{}},"component":{}}],["context.background",{"_index":3053,"title":{},"name":{},"text":{"65":{}},"component":{}}],["continu",{"_index":1243,"title":{},"name":{},"text":{"20":{}},"component":{}}],["contraint",{"_index":1883,"title":{},"name":{},"text":{"20":{}},"component":{}}],["contrast",{"_index":2001,"title":{},"name":{},"text":{"20":{}},"component":{}}],["control",{"_index":359,"title":{},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"23":{},"25":{},"27":{},"32":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["conveni",{"_index":480,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["convent",{"_index":1427,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["convers",{"_index":631,"title":{"16-7":{}},"name":{},"text":{"16":{},"19":{},"20":{}},"component":{}}],["conversionexcept",{"_index":679,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{}}],["conversions.pstringtocharact",{"_index":724,"title":{},"name":{},"text":{"16":{}},"component":{}}],["convert",{"_index":342,"title":{},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["convert.pkl",{"_index":2755,"title":{},"name":{},"text":{"32":{}},"component":{}}],["converter`",{"_index":733,"title":{},"name":{},"text":{"16":{}},"component":{}}],["converterfactori",{"_index":720,"title":{},"name":{},"text":{"16":{}},"component":{}}],["converterfactories.pcollectiontocollect",{"_index":727,"title":{},"name":{},"text":{"16":{}},"component":{}}],["convey",{"_index":2792,"title":{},"name":{},"text":{"32":{}},"component":{}}],["copi",{"_index":1200,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["core",{"_index":304,"title":{"26":{}},"name":{},"text":{"10":{},"16":{},"26":{},"43":{}},"component":{}}],["core:0.25.0",{"_index":2515,"title":{},"name":{},"text":{"26":{}},"component":{}}],["correct",{"_index":2244,"title":{},"name":{},"text":{"21":{},"25":{},"28":{}},"component":{}}],["correctli",{"_index":2200,"title":{},"name":{},"text":{"21":{}},"component":{}}],["correspond",{"_index":300,"title":{},"name":{},"text":{"10":{},"14":{},"16":{},"17":{},"20":{},"21":{},"25":{},"27":{},"40":{},"64":{}},"component":{}}],["count",{"_index":1524,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["counterpart",{"_index":1857,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cours",{"_index":2206,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["cousin",{"_index":1865,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cover",{"_index":375,"title":{},"name":{},"text":{"11":{},"20":{},"23":{}},"component":{}}],["cp",{"_index":521,"title":{},"name":{},"text":{"14":{},"17":{},"27":{}},"component":{}}],["cpu",{"_index":369,"title":{},"name":{},"text":{"11":{}},"component":{}}],["creat",{"_index":4,"title":{"20-137":{}},"name":{},"text":{"1":{},"2":{},"9":{},"12":{},"16":{},"20":{},"22":{},"23":{},"25":{},"28":{},"32":{},"47":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["creation",{"_index":2153,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cross",{"_index":2014,"title":{},"name":{},"text":{"20":{},"25":{},"27":{}},"component":{}}],["cucullatu",{"_index":2275,"title":{},"name":{},"text":{"22":{}},"component":{}}],["cupertino",{"_index":2997,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["curl",{"_index":2435,"title":{},"name":{},"text":{"25":{},"67":{},"73":{}},"component":{}}],["curli",{"_index":1121,"title":{},"name":{},"text":{"20":{}},"component":{}}],["current",{"_index":502,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{},"35":{},"43":{},"64":{},"73":{}},"component":{}}],["custom",{"_index":276,"title":{"20-9":{},"32-23":{},"65-9":{},"70-9":{}},"name":{},"text":{"9":{},"11":{},"16":{},"20":{},"25":{},"26":{},"28":{},"32":{},"39":{},"42":{},"65":{},"70":{}},"component":{}}],["customari",{"_index":1912,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["data",{"_index":28,"title":{"20-12":{},"67-4":{},"73-4":{}},"name":{},"text":{"2":{},"9":{},"11":{},"19":{},"20":{},"67":{},"73":{},"75":{}},"component":{}}],["databas",{"_index":3211,"title":{},"name":{},"text":{"75":{}},"component":{}}],["database(@named(\"usernam",{"_index":3303,"title":{},"name":{},"text":{"75":{}},"component":{}}],["database.pkl.go",{"_index":3281,"title":{},"name":{},"text":{"75":{}},"component":{}}],["database_password=hunter2",{"_index":3224,"title":{},"name":{},"text":{"75":{}},"component":{}}],["datas",{"_index":1067,"title":{},"name":{},"text":{"20":{},"23":{},"64":{},"69":{}},"component":{}}],["datasize1",{"_index":1071,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasize2",{"_index":1074,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasize3",{"_index":1077,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasize4",{"_index":1080,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasize5",{"_index":1083,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasize6",{"_index":1086,"title":{},"name":{},"text":{"20":{}},"component":{}}],["datasizeunit",{"_index":1068,"title":{},"name":{},"text":{"20":{}},"component":{}}],["date",{"_index":2396,"title":{},"name":{},"text":{"23":{},"28":{}},"component":{}}],["day",{"_index":1042,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dbname",{"_index":3214,"title":{},"name":{},"text":{"75":{}},"component":{}}],["deal",{"_index":1799,"title":{},"name":{},"text":{"20":{}},"component":{}}],["debug",{"_index":189,"title":{"20-81":{}},"name":{},"text":{"9":{},"20":{}},"component":{}}],["decid",{"_index":2252,"title":{},"name":{},"text":{"21":{}},"component":{}}],["decim",{"_index":854,"title":{},"name":{},"text":{"20":{}},"component":{}}],["declar",{"_index":491,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"25":{},"26":{},"27":{},"28":{},"32":{},"35":{},"36":{},"43":{},"69":{},"75":{}},"component":{}}],["declaract",{"_index":3007,"title":{},"name":{},"text":{"64":{}},"component":{}}],["decod",{"_index":3108,"title":{},"name":{},"text":{"69":{},"70":{},"75":{}},"component":{}}],["deep",{"_index":2092,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["deeper",{"_index":1242,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["deepli",{"_index":2268,"title":{},"name":{},"text":{"22":{}},"component":{}}],["def",{"_index":972,"title":{},"name":{},"text":{"20":{}},"component":{}}],["default",{"_index":108,"title":{"20-29":{},"20-37":{},"20-103":{}},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"17":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"64":{},"65":{},"70":{}},"component":{}}],["defer",{"_index":3041,"title":{},"name":{},"text":{"65":{}},"component":{}}],["defin",{"_index":98,"title":{"20-14":{},"20-25":{},"20-33":{},"67-2":{},"73-2":{}},"name":{},"text":{"7":{},"9":{},"11":{},"13":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"36":{},"64":{},"67":{},"69":{},"73":{},"75":{}},"component":{}}],["definit",{"_index":422,"title":{"20-127":{},"32-14":{}},"name":{},"text":{"11":{},"14":{},"20":{},"23":{},"25":{},"32":{},"40":{},"41":{},"45":{},"46":{},"54":{},"59":{},"61":{},"75":{}},"component":{}}],["delay",{"_index":2430,"title":{},"name":{},"text":{"25":{}},"component":{}}],["deleg",{"_index":686,"title":{},"name":{},"text":{"16":{}},"component":{}}],["delet",{"_index":2121,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["delight",{"_index":3175,"title":{},"name":{},"text":{"75":{},"76":{}},"component":{}}],["delimimt",{"_index":2810,"title":{},"name":{},"text":{"32":{}},"component":{}}],["delimit",{"_index":779,"title":{"20-9":{},"32-23":{}},"name":{},"text":{"20":{},"32":{},"40":{}},"component":{}}],["demand",{"_index":1369,"title":{},"name":{},"text":{"20":{}},"component":{}}],["demonstr",{"_index":2860,"title":{},"name":{},"text":{"36":{},"75":{}},"component":{}}],["denot",{"_index":1824,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["depend",{"_index":492,"title":{"20-52":{},"20-135":{},"20-136":{},"20-138":{},"67-1":{},"73-1":{}},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"35":{},"36":{},"64":{},"67":{},"69":{},"73":{},"75":{}},"component":{}}],["deploy",{"_index":3204,"title":{},"name":{},"text":{"75":{}},"component":{}}],["deprec",{"_index":1308,"title":{},"name":{},"text":{"20":{}},"component":{}}],["depth",{"_index":3327,"title":{},"name":{},"text":{"75":{}},"component":{}}],["deriv",{"_index":1284,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["describ",{"_index":123,"title":{},"name":{},"text":{"9":{},"11":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"64":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["descript",{"_index":832,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{},"32":{}},"component":{}}],["descriptor",{"_index":2583,"title":{},"name":{},"text":{"27":{},"75":{}},"component":{}}],["design",{"_index":174,"title":{},"name":{},"text":{"9":{},"11":{},"16":{},"20":{},"25":{},"28":{},"32":{},"75":{}},"component":{}}],["desir",{"_index":735,"title":{},"name":{},"text":{"16":{},"20":{},"65":{},"70":{}},"component":{}}],["despit",{"_index":1830,"title":{},"name":{},"text":{"20":{}},"component":{}}],["detail",{"_index":642,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"32":{},"67":{},"70":{},"73":{}},"component":{}}],["detect",{"_index":1406,"title":{},"name":{},"text":{"20":{}},"component":{}}],["determin",{"_index":559,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"36":{},"64":{}},"component":{}}],["dev",{"_index":2441,"title":{},"name":{},"text":{"25":{},"75":{}},"component":{}}],["dev\"|\"qa\"|\"prod",{"_index":3215,"title":{},"name":{},"text":{"75":{}},"component":{}}],["dev(\"dev",{"_index":3311,"title":{},"name":{},"text":{"75":{}},"component":{}}],["dev/stdin",{"_index":2484,"title":{},"name":{},"text":{"25":{}},"component":{}}],["develop",{"_index":199,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"22":{},"25":{},"75":{}},"component":{}}],["deviat",{"_index":2861,"title":{},"name":{},"text":{"36":{}},"component":{}}],["dhall",{"_index":238,"title":{},"name":{},"text":{"9":{}},"component":{}}],["diagnost",{"_index":1436,"title":{},"name":{},"text":{"20":{}},"component":{}}],["didn’t",{"_index":2322,"title":{},"name":{},"text":{"22":{}},"component":{}}],["diet",{"_index":657,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"25":{},"26":{}},"component":{}}],["diets[0",{"_index":1690,"title":{},"name":{},"text":{"20":{}},"component":{}}],["diets[2",{"_index":1693,"title":{},"name":{},"text":{"20":{}},"component":{}}],["differ",{"_index":328,"title":{},"name":{},"text":{"11":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"65":{},"70":{},"75":{}},"component":{}}],["differenti",{"_index":245,"title":{},"name":{},"text":{"9":{}},"component":{}}],["difficult",{"_index":204,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["digit",{"_index":3000,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["dinosauria",{"_index":2261,"title":{},"name":{},"text":{"22":{}},"component":{}}],["dir",{"_index":553,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["dir1/path/to/my_module.pkl",{"_index":1450,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dir1:/zip1.zip:/jar1.jar",{"_index":1449,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dir1:zip1.zip:jar1.jar",{"_index":589,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["direct",{"_index":1614,"title":{},"name":{},"text":{"20":{},"67":{}},"component":{}}],["directli",{"_index":736,"title":{"27-10":{}},"name":{},"text":{"16":{},"20":{},"25":{},"27":{},"28":{},"36":{},"65":{},"70":{}},"component":{}}],["directori",{"_index":527,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"64":{},"67":{},"73":{}},"component":{}}],["directoryproperti",{"_index":2609,"title":{},"name":{},"text":{"28":{}},"component":{}}],["disabl",{"_index":576,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{},"58":{}},"component":{}}],["disclosur",{"_index":812,"title":{"20-102":{}},"name":{},"text":{"20":{}},"component":{}}],["discov",{"_index":2316,"title":{},"name":{},"text":{"22":{}},"component":{}}],["discuss",{"_index":9,"title":{},"name":{},"text":{"1":{},"9":{},"11":{},"20":{},"22":{},"23":{},"25":{},"75":{}},"component":{}}],["disjunct",{"_index":945,"title":{},"name":{},"text":{"20":{}},"component":{}}],["disk",{"_index":211,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["dispatch",{"_index":1417,"title":{},"name":{},"text":{"20":{}},"component":{}}],["display",{"_index":587,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{}},"component":{}}],["distinct",{"_index":787,"title":{"20-31":{}},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["distinguish",{"_index":3016,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["distribut",{"_index":91,"title":{},"name":{},"text":{"7":{},"51":{}},"component":{}}],["dive",{"_index":1241,"title":{},"name":{},"text":{"20":{}},"component":{}}],["divis",{"_index":892,"title":{},"name":{},"text":{"20":{}},"component":{}}],["do",{"_index":1838,"title":{},"name":{},"text":{"20":{},"22":{},"23":{}},"component":{}}],["doc",{"_index":87,"title":{"20-122":{},"32-17":{}},"name":{},"text":{"6":{},"7":{},"14":{},"17":{},"20":{},"27":{},"28":{},"32":{},"36":{},"51":{}},"component":{}}],["doc.jar",{"_index":2581,"title":{},"name":{},"text":{"27":{}},"component":{}}],["doc:0.25.0",{"_index":2563,"title":{},"name":{},"text":{"27":{}},"component":{}}],["docgener",{"_index":2579,"title":{},"name":{},"text":{"27":{}},"component":{}}],["docsit",{"_index":2582,"title":{},"name":{},"text":{"27":{}},"component":{}}],["document",{"_index":93,"title":{"27-10":{},"27-11":{}},"name":{},"text":{"7":{},"9":{},"10":{},"11":{},"13":{},"14":{},"17":{},"20":{},"24":{},"27":{},"28":{},"32":{},"36":{},"40":{},"70":{},"75":{}},"component":{}}],["dodo",{"_index":848,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["dodo\".contains(\"al",{"_index":1015,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo\".length",{"_index":1011,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo\".revers",{"_index":1013,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo.extinct",{"_index":1126,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo.nam",{"_index":1124,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo.taxonomi",{"_index":1150,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodo.taxonomy.class",{"_index":1135,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodoisextinct",{"_index":1125,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dodonam",{"_index":1123,"title":{},"name":{},"text":{"20":{}},"component":{}}],["doesn't",{"_index":1890,"title":{},"name":{},"text":{"20":{}},"component":{}}],["doesn’t",{"_index":2296,"title":{},"name":{},"text":{"22":{},"23":{},"32":{},"65":{},"70":{}},"component":{}}],["dog",{"_index":2988,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["domain",{"_index":2347,"title":{},"name":{},"text":{"23":{}},"component":{}}],["don't",{"_index":1951,"title":{},"name":{},"text":{"20":{}},"component":{}}],["done",{"_index":671,"title":{},"name":{},"text":{"16":{},"19":{},"26":{},"64":{},"67":{},"69":{},"73":{}},"component":{}}],["don’t",{"_index":1142,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"25":{}},"component":{}}],["door",{"_index":1321,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dosomethingwith(it",{"_index":1636,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dosomethingwith(nam",{"_index":1637,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dot",{"_index":792,"title":{"20-55":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["dotglob",{"_index":1559,"title":{},"name":{},"text":{"20":{}},"component":{}}],["doubl",{"_index":835,"title":{},"name":{},"text":{"20":{},"47":{}},"component":{}}],["double(5",{"_index":2497,"title":{},"name":{},"text":{"25":{}},"component":{}}],["double(n",{"_index":2496,"title":{},"name":{},"text":{"25":{}},"component":{}}],["doubt",{"_index":1323,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dove",{"_index":1160,"title":{},"name":{},"text":{"20":{}},"component":{}}],["down",{"_index":2364,"title":{},"name":{},"text":{"23":{},"47":{}},"component":{}}],["download",{"_index":310,"title":{"25-2":{},"25-18":{}},"name":{},"text":{"10":{},"20":{},"25":{},"27":{},"51":{},"67":{},"73":{},"75":{}},"component":{}}],["downstream",{"_index":1193,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dr",{"_index":1639,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dragon",{"_index":1358,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dri",{"_index":2366,"title":{},"name":{},"text":{"23":{},"75":{}},"component":{}}],["drift",{"_index":482,"title":{},"name":{},"text":{"14":{},"16":{},"17":{}},"component":{}}],["drop",{"_index":1788,"title":{},"name":{},"text":{"20":{}},"component":{}}],["drown",{"_index":2382,"title":{},"name":{},"text":{"23":{}},"component":{}}],["dsl",{"_index":3187,"title":{},"name":{},"text":{"75":{}},"component":{}}],["due",{"_index":1996,"title":{},"name":{},"text":{"20":{},"25":{},"64":{},"73":{}},"component":{}}],["duplic",{"_index":1995,"title":{},"name":{},"text":{"20":{},"45":{}},"component":{}}],["durat",{"_index":612,"title":{"20-11":{}},"name":{},"text":{"14":{},"17":{},"20":{},"23":{},"25":{},"27":{},"28":{},"32":{},"64":{},"69":{}},"component":{}}],["duration(isposit",{"_index":1428,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration.ofseconds(10",{"_index":2646,"title":{},"name":{},"text":{"28":{}},"component":{}}],["duration1",{"_index":1022,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration2",{"_index":1026,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration3",{"_index":1029,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration4",{"_index":1032,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration5",{"_index":1034,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration6",{"_index":1037,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration7",{"_index":1040,"title":{},"name":{},"text":{"20":{}},"component":{}}],["durationunit",{"_index":1020,"title":{},"name":{},"text":{"20":{}},"component":{}}],["duration’",{"_index":1045,"title":{},"name":{},"text":{"20":{}},"component":{}}],["dure",{"_index":400,"title":{},"name":{},"text":{"11":{},"20":{},"25":{},"36":{},"64":{}},"component":{}}],["dynam",{"_index":712,"title":{},"name":{},"text":{"16":{},"20":{},"25":{},"64":{},"69":{}},"component":{}}],["e",{"_index":577,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"27":{}},"component":{}}],["e.g",{"_index":2987,"title":{},"name":{},"text":{"64":{},"67":{},"69":{},"73":{}},"component":{}}],["each",{"_index":69,"title":{},"name":{},"text":{"2":{},"16":{},"20":{},"25":{},"27":{},"28":{},"32":{},"64":{},"69":{},"75":{}},"component":{}}],["eager",{"_index":1215,"title":{},"name":{},"text":{"20":{}},"component":{}}],["eagerli",{"_index":1376,"title":{},"name":{},"text":{"20":{}},"component":{}}],["eagl",{"_index":2125,"title":{},"name":{},"text":{"20":{}},"component":{}}],["earlier",{"_index":2553,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["earth",{"_index":2048,"title":{},"name":{},"text":{"20":{}},"component":{}}],["easi",{"_index":308,"title":{},"name":{},"text":{"10":{},"13":{},"20":{},"22":{},"75":{}},"component":{}}],["easier",{"_index":240,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["easiest",{"_index":2372,"title":{},"name":{},"text":{"23":{}},"component":{}}],["easili",{"_index":262,"title":{},"name":{},"text":{"9":{},"27":{},"75":{}},"component":{}}],["eat",{"_index":2795,"title":{},"name":{},"text":{"32":{}},"component":{}}],["echo",{"_index":2480,"title":{},"name":{},"text":{"25":{}},"component":{}}],["ecosystem",{"_index":3194,"title":{},"name":{},"text":{"75":{}},"component":{}}],["edit",{"_index":1195,"title":{"40":{}},"name":{"40":{}},"text":{"20":{},"43":{},"46":{},"47":{},"75":{}},"component":{}}],["editor",{"_index":114,"title":{"75-5":{}},"name":{},"text":{"8":{},"9":{},"11":{},"20":{},"25":{},"42":{},"47":{},"52":{},"54":{},"75":{}},"component":{}}],["editor/id",{"_index":2054,"title":{},"name":{},"text":{"20":{}},"component":{}}],["effect",{"_index":216,"title":{},"name":{},"text":{"9":{},"20":{},"32":{}},"component":{}}],["effort",{"_index":185,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["eggincub",{"_index":1175,"title":{},"name":{},"text":{"20":{}},"component":{}}],["eggincubation.valu",{"_index":1178,"title":{},"name":{},"text":{"20":{}},"component":{}}],["elabor",{"_index":2307,"title":{},"name":{},"text":{"22":{}},"component":{}}],["element",{"_index":326,"title":{"20-29":{},"20-31":{},"21-4":{}},"name":{},"text":{"11":{},"20":{},"21":{},"22":{},"32":{}},"component":{}}],["element(",{"_index":2008,"title":{},"name":{},"text":{"20":{}},"component":{}}],["elements1",{"_index":1989,"title":{},"name":{},"text":{"20":{}},"component":{}}],["elements2",{"_index":1990,"title":{},"name":{},"text":{"20":{}},"component":{}}],["elementtyp",{"_index":1362,"title":{},"name":{},"text":{"20":{}},"component":{}}],["elf",{"_index":2498,"title":{},"name":{},"text":{"25":{}},"component":{}}],["elimin",{"_index":217,"title":{},"name":{},"text":{"9":{},"11":{},"19":{}},"component":{}}],["elsewher",{"_index":2318,"title":{},"name":{},"text":{"22":{}},"component":{}}],["email",{"_index":1710,"title":{},"name":{},"text":{"20":{}},"component":{}}],["emailaddress",{"_index":1793,"title":{},"name":{},"text":{"20":{}},"component":{}}],["emaillist",{"_index":1796,"title":{},"name":{},"text":{"20":{}},"component":{}}],["emailregex",{"_index":1768,"title":{},"name":{},"text":{"20":{}},"component":{}}],["emailregex.findmatchesin(\"pigeon@example.com",{"_index":1777,"title":{},"name":{},"text":{"20":{}},"component":{}}],["emb",{"_index":630,"title":{},"name":{},"text":{"15":{},"18":{},"20":{},"26":{},"66":{},"72":{},"75":{}},"component":{}}],["embed",{"_index":37,"title":{},"name":{},"text":{"2":{},"9":{},"20":{},"25":{},"64":{},"75":{}},"component":{}}],["embedd",{"_index":23,"title":{},"name":{},"text":{"2":{},"10":{},"20":{}},"component":{}}],["employe",{"_index":3271,"title":{},"name":{},"text":{"75":{}},"component":{}}],["employee'",{"_index":3274,"title":{},"name":{},"text":{"75":{}},"component":{}}],["empti",{"_index":588,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"70":{},"75":{}},"component":{}}],["enabl",{"_index":175,"title":{},"name":{},"text":{"9":{},"20":{},"27":{},"28":{},"58":{}},"component":{}}],["enableconfigurationproperti",{"_index":2853,"title":{},"name":{},"text":{"36":{}},"component":{}}],["enclos",{"_index":951,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["encod",{"_index":2717,"title":{"32-3":{}},"name":{},"text":{"32":{},"75":{}},"component":{}}],["encount",{"_index":1837,"title":{},"name":{},"text":{"20":{}},"component":{}}],["end",{"_index":837,"title":{},"name":{},"text":{"20":{},"32":{},"58":{},"75":{}},"component":{}}],["endpoint",{"_index":2839,"title":{},"name":{},"text":{"36":{}},"component":{}}],["endpoint1",{"_index":2842,"title":{},"name":{},"text":{"36":{}},"component":{}}],["endpoint2",{"_index":2843,"title":{},"name":{},"text":{"36":{}},"component":{}}],["enforc",{"_index":1237,"title":{},"name":{},"text":{"20":{},"23":{},"25":{}},"component":{}}],["engin",{"_index":274,"title":{},"name":{},"text":{"9":{},"13":{},"58":{}},"component":{}}],["english",{"_index":2329,"title":{},"name":{},"text":{"22":{}},"component":{}}],["enhanc",{"_index":3181,"title":{},"name":{},"text":{"75":{}},"component":{}}],["enjoy",{"_index":289,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["enough",{"_index":184,"title":{},"name":{},"text":{"9":{}},"component":{}}],["ensur",{"_index":2625,"title":{},"name":{},"text":{"28":{},"60":{},"73":{}},"component":{}}],["ensure_instal",{"_index":2935,"title":{},"name":{},"text":{"58":{}},"component":{}}],["enter",{"_index":2562,"title":{},"name":{},"text":{"27":{},"40":{}},"component":{}}],["entir",{"_index":402,"title":{},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"36":{}},"component":{}}],["entiti",{"_index":2034,"title":{},"name":{},"text":{"20":{}},"component":{}}],["entri",{"_index":513,"title":{"21-5":{}},"name":{},"text":{"14":{},"17":{},"20":{},"21":{},"22":{},"32":{}},"component":{}}],["entries1",{"_index":1986,"title":{},"name":{},"text":{"20":{}},"component":{}}],["entries2",{"_index":1988,"title":{},"name":{},"text":{"20":{}},"component":{}}],["entries—cannot",{"_index":2005,"title":{},"name":{},"text":{"20":{}},"component":{}}],["entry’",{"_index":1385,"title":{},"name":{},"text":{"20":{}},"component":{}}],["enum",{"_index":695,"title":{"64-10":{},"69-5":{}},"name":{},"text":{"16":{},"20":{},"40":{},"64":{},"69":{},"70":{},"75":{}},"component":{}}],["enumer",{"_index":335,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["env",{"_index":578,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["env:,prop:,package:,projectpackag",{"_index":569,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["enviorn",{"_index":3210,"title":{},"name":{},"text":{"75":{}},"component":{}}],["enviornment(str",{"_index":3314,"title":{},"name":{},"text":{"75":{}},"component":{}}],["environ",{"_index":200,"title":{},"name":{},"text":{"9":{},"14":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{},"36":{},"67":{},"73":{},"75":{}},"component":{}}],["environment/environment.pkl.go",{"_index":3287,"title":{},"name":{},"text":{"75":{}},"component":{}}],["environmentvari",{"_index":2006,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["eof",{"_index":2930,"title":{},"name":{},"text":{"58":{}},"component":{}}],["equal",{"_index":478,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"28":{}},"component":{}}],["equip",{"_index":1208,"title":{},"name":{},"text":{"20":{}},"component":{}}],["equival",{"_index":875,"title":{},"name":{},"text":{"20":{},"36":{}},"component":{}}],["eras",{"_index":209,"title":{},"name":{},"text":{"9":{}},"component":{}}],["err",{"_index":3028,"title":{},"name":{},"text":{"65":{},"66":{},"67":{}},"component":{}}],["error",{"_index":220,"title":{"47":{},"20-80":{}},"name":{"47":{}},"text":{"9":{},"11":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"45":{},"46":{},"47":{},"75":{}},"component":{}}],["escap",{"_index":821,"title":{"20-119":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["especi",{"_index":1203,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["etc",{"_index":701,"title":{},"name":{},"text":{"16":{},"20":{},"38":{}},"component":{}}],["eval",{"_index":297,"title":{"25-8":{}},"name":{},"text":{"10":{},"20":{},"21":{},"22":{},"23":{},"25":{},"75":{}},"component":{}}],["evalexcept",{"_index":641,"title":{},"name":{},"text":{"16":{}},"component":{}}],["evalpkl",{"_index":2591,"title":{},"name":{},"text":{"28":{}},"component":{}}],["evalrootdir",{"_index":2630,"title":{},"name":{},"text":{"28":{}},"component":{}}],["evalrootdir.filevalu",{"_index":2644,"title":{},"name":{},"text":{"28":{}},"component":{}}],["evaltimeout",{"_index":2645,"title":{},"name":{},"text":{"28":{}},"component":{}}],["evalu",{"_index":263,"title":{"65":{},"70":{},"11-2":{},"20-54":{},"25-21":{},"25-22":{},"25-26":{},"28-2":{},"65-1":{},"65-2":{},"65-5":{},"65-8":{},"67-4":{},"70-1":{},"70-2":{},"70-5":{},"70-8":{},"73-4":{}},"name":{"65":{},"70":{}},"text":{"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["evaluatemodul",{"_index":3126,"title":{},"name":{},"text":{"70":{}},"component":{}}],["evaluator.clos",{"_index":3042,"title":{},"name":{},"text":{"65":{}},"component":{}}],["evaluator.evalu",{"_index":2518,"title":{},"name":{},"text":{"26":{}},"component":{}}],["evaluator.evaluateexpress",{"_index":3052,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["evaluator.evaluatemodule(context.background",{"_index":3043,"title":{},"name":{},"text":{"65":{}},"component":{}}],["evaluator.evaluatemodule(sourc",{"_index":3128,"title":{},"name":{},"text":{"70":{}},"component":{}}],["evaluator.evaluateoutputtext",{"_index":3046,"title":{},"name":{},"text":{"65":{}},"component":{}}],["evaluator.evaluateoutputtext(context.background",{"_index":3049,"title":{},"name":{},"text":{"65":{}},"component":{}}],["evaluator.evaluateoutputtext(sourc",{"_index":3136,"title":{},"name":{},"text":{"70":{}},"component":{}}],["evaluator.evaluatetext",{"_index":653,"title":{},"name":{},"text":{"16":{}},"component":{}}],["evaluator.preconfigur",{"_index":2517,"title":{},"name":{},"text":{"26":{}},"component":{}}],["evaluator.us",{"_index":754,"title":{},"name":{},"text":{"19":{}},"component":{}}],["evaluatoropt",{"_index":3058,"title":{},"name":{},"text":{"65":{}},"component":{}}],["evaluator’",{"_index":1673,"title":{},"name":{},"text":{"20":{}},"component":{}}],["even",{"_index":1152,"title":{},"name":{},"text":{"20":{},"22":{},"24":{},"75":{}},"component":{}}],["event",{"_index":2386,"title":{},"name":{},"text":{"23":{}},"component":{}}],["eventu",{"_index":2183,"title":{},"name":{},"text":{"20":{}},"component":{}}],["everybodi",{"_index":413,"title":{},"name":{},"text":{"11":{}},"component":{}}],["everyth",{"_index":1437,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{}},"component":{}}],["evolut",{"_index":396,"title":{},"name":{},"text":{"11":{}},"component":{}}],["exact",{"_index":2557,"title":{},"name":{},"text":{"27":{}},"component":{}}],["exactli",{"_index":2304,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["exampl",{"_index":60,"title":{"14-12":{},"17-12":{},"20-120":{},"27-16":{}},"name":{},"text":{"2":{},"7":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["example.com",{"_index":1889,"title":{},"name":{},"text":{"20":{}},"component":{}}],["exampleobjectwithjustintel",{"_index":2212,"title":{},"name":{},"text":{"21":{}},"component":{}}],["exampleobjectwithmixedel",{"_index":2213,"title":{},"name":{},"text":{"21":{}},"component":{}}],["exce",{"_index":2805,"title":{},"name":{},"text":{"32":{}},"component":{}}],["excel",{"_index":1320,"title":{},"name":{},"text":{"20":{}},"component":{}}],["except",{"_index":357,"title":{},"name":{},"text":{"11":{},"20":{},"22":{},"23":{},"25":{},"32":{},"43":{}},"component":{}}],["excit",{"_index":3333,"title":{},"name":{},"text":{"75":{}},"component":{}}],["exclud",{"_index":2087,"title":{},"name":{},"text":{"20":{}},"component":{}}],["exclus",{"_index":947,"title":{},"name":{},"text":{"20":{},"21":{},"25":{}},"component":{}}],["execut",{"_index":265,"title":{"25-3":{},"25-4":{},"25-5":{},"25-6":{}},"name":{},"text":{"9":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["executabletarget",{"_index":3157,"title":{},"name":{},"text":{"73":{}},"component":{}}],["exercis",{"_index":2189,"title":{"21-8":{}},"name":{},"text":{},"component":{}}],["exist",{"_index":626,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{},"32":{},"42":{},"46":{},"64":{}},"component":{}}],["exit",{"_index":1446,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["expand",{"_index":1532,"title":{},"name":{},"text":{"20":{},"22":{},"27":{},"41":{},"46":{},"54":{},"59":{},"61":{}},"component":{}}],["expect",{"_index":1240,"title":{},"name":{},"text":{"20":{},"22":{},"25":{},"27":{},"28":{},"64":{},"69":{},"75":{}},"component":{}}],["expens",{"_index":1692,"title":{},"name":{},"text":{"20":{}},"component":{}}],["experi",{"_index":2412,"title":{},"name":{},"text":{"24":{},"25":{},"75":{}},"component":{}}],["expert",{"_index":430,"title":{},"name":{},"text":{"11":{},"23":{}},"component":{}}],["explain",{"_index":128,"title":{},"name":{},"text":{"9":{},"11":{},"14":{}},"component":{}}],["explicit",{"_index":1220,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["explicitli",{"_index":1353,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"36":{},"64":{}},"component":{}}],["exploit",{"_index":229,"title":{},"name":{},"text":{"9":{}},"component":{}}],["explor",{"_index":80,"title":{},"name":{},"text":{"6":{}},"component":{}}],["expon",{"_index":907,"title":{},"name":{},"text":{"20":{}},"component":{}}],["exponenti",{"_index":895,"title":{},"name":{},"text":{"20":{}},"component":{}}],["export",{"_index":3004,"title":{},"name":{},"text":{"64":{}},"component":{}}],["expos",{"_index":2516,"title":{},"name":{},"text":{"26":{}},"component":{}}],["expr",{"_index":1896,"title":{},"name":{},"text":{"20":{}},"component":{}}],["express",{"_index":187,"title":{"20-60":{},"20-74":{},"20-83":{},"20-89":{},"32-30":{},"65-7":{},"70-7":{}},"name":{},"text":{"9":{},"11":{},"12":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"32":{},"65":{},"70":{},"75":{}},"component":{}}],["expression’",{"_index":1717,"title":{},"name":{},"text":{"20":{},"70":{}},"component":{}}],["ext",{"_index":2908,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["extend",{"_index":748,"title":{"20-57":{},"20-78":{},"32-7":{}},"name":{},"text":{"19":{},"20":{},"32":{},"40":{},"43":{},"53":{},"60":{},"64":{},"69":{}},"component":{}}],["extens",{"_index":749,"title":{"50":{},"20-53":{}},"name":{},"text":{"19":{},"20":{},"25":{},"28":{},"32":{},"34":{},"46":{},"50":{},"51":{},"58":{},"75":{}},"component":{}}],["extern",{"_index":343,"title":{},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"36":{},"64":{},"65":{},"70":{},"75":{}},"component":{}}],["externalproperti",{"_index":2647,"title":{},"name":{},"text":{"28":{}},"component":{}}],["extinct",{"_index":847,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["extinct,\\nth",{"_index":996,"title":{},"name":{},"text":{"20":{}},"component":{}}],["f",{"_index":2016,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{},"27":{}},"component":{}}],["face",{"_index":840,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fact",{"_index":1947,"title":{},"name":{},"text":{"20":{},"23":{},"65":{},"70":{}},"component":{}}],["factor",{"_index":1069,"title":{},"name":{},"text":{"20":{}},"component":{}}],["factori",{"_index":730,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["fail",{"_index":675,"title":{},"name":{},"text":{"16":{},"20":{},"75":{}},"component":{}}],["falcon",{"_index":1790,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["falcon.pkl",{"_index":1539,"title":{},"name":{},"text":{"20":{}},"component":{}}],["falcon@example.com",{"_index":1778,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fall",{"_index":3178,"title":{},"name":{},"text":{"75":{}},"component":{}}],["fals",{"_index":932,"title":{},"name":{},"text":{"20":{},"21":{},"28":{},"58":{}},"component":{}}],["famili",{"_index":721,"title":{},"name":{},"text":{"16":{},"24":{}},"component":{}}],["familiar",{"_index":163,"title":{},"name":{},"text":{"9":{},"21":{},"75":{}},"component":{}}],["fanci",{"_index":337,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["far",{"_index":1223,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"75":{}},"component":{}}],["faster",{"_index":2424,"title":{},"name":{},"text":{"25":{}},"component":{}}],["fat",{"_index":636,"title":{},"name":{},"text":{"16":{}},"component":{}}],["fatal",{"_index":227,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["faultypigeon",{"_index":1233,"title":{},"name":{},"text":{"20":{}},"component":{}}],["faultypigeon2",{"_index":1239,"title":{},"name":{},"text":{"20":{}},"component":{}}],["favorit",{"_index":2918,"title":{},"name":{},"text":{"58":{}},"component":{}}],["favoritefood",{"_index":2280,"title":{},"name":{},"text":{"22":{}},"component":{}}],["featur",{"_index":318,"title":{"46":{},"54":{},"61":{},"27-1":{}},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"27":{},"28":{},"38":{},"43":{},"50":{},"57":{},"75":{}},"component":{}}],["feed",{"_index":958,"title":{},"name":{},"text":{"20":{}},"component":{}}],["feel",{"_index":2534,"title":{},"name":{},"text":{"27":{},"75":{}},"component":{}}],["fetch",{"_index":2474,"title":{},"name":{},"text":{"25":{}},"component":{}}],["few",{"_index":358,"title":{},"name":{},"text":{"11":{},"20":{},"23":{}},"component":{}}],["fewer",{"_index":2179,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["field",{"_index":533,"title":{},"name":{},"text":{"14":{},"22":{},"23":{},"28":{},"64":{},"70":{}},"component":{}}],["figur",{"_index":2542,"title":{},"name":{},"text":{"27":{}},"component":{}}],["file",{"_index":148,"title":{"20-46":{},"20-66":{},"25-28":{},"32-1":{},"32-3":{},"64-3":{},"65-6":{},"70-6":{}},"name":{},"text":{"9":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"43":{},"51":{},"57":{},"58":{},"64":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["file(\"%{moduledir}/%{modulename}.%{outputformat",{"_index":2605,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file(\"/absolute/path/to/cach",{"_index":2653,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file(\"/some/absolute/path",{"_index":2629,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file(\"module2.pkl",{"_index":2594,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file:,http",{"_index":1562,"title":{},"name":{},"text":{"20":{}},"component":{}}],["file:///alessandra.pkl",{"_index":3237,"title":{},"name":{},"text":{"75":{}},"component":{}}],["file:///foo/bar/baz.pkl",{"_index":2454,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["file:///path/to/my_module.pkl",{"_index":1442,"title":{},"name":{},"text":{"20":{}},"component":{}}],["file:///person.pkl",{"_index":3235,"title":{},"name":{},"text":{"75":{}},"component":{}}],["file:///some/module.pkl",{"_index":1686,"title":{},"name":{},"text":{"20":{}},"component":{}}],["file:///users/me/tutorial/acmecicd.pkl",{"_index":2310,"title":{},"name":{},"text":{"22":{}},"component":{}}],["file:///users/me/tutorial/cicd.pkl",{"_index":2312,"title":{},"name":{},"text":{"22":{}},"component":{}}],["file://foo/bar.pkl",{"_index":2884,"title":{},"name":{},"text":{"43":{}},"component":{}}],["filenam",{"_index":2715,"title":{"32-2":{}},"name":{},"text":{"32":{}},"component":{}}],["files(\"dir1",{"_index":2656,"title":{},"name":{},"text":{"28":{}},"component":{}}],["files(\"module1.pkl",{"_index":2623,"title":{},"name":{},"text":{"28":{}},"component":{}}],["filetree(\"config\").include(\"**/*.pkl",{"_index":2616,"title":{},"name":{},"text":{"28":{}},"component":{}}],["file’",{"_index":1609,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"32":{}},"component":{}}],["fill",{"_index":405,"title":{"22":{}},"name":{},"text":{"11":{},"20":{},"22":{},"23":{},"24":{}},"component":{}}],["filter",{"_index":2951,"title":{},"name":{},"text":{"64":{}},"component":{}}],["final",{"_index":532,"title":{},"name":{},"text":{"14":{},"20":{},"23":{},"28":{},"67":{},"75":{}},"component":{}}],["find",{"_index":704,"title":{},"name":{},"text":{"16":{},"20":{},"22":{},"27":{},"43":{},"46":{}},"component":{}}],["fine",{"_index":376,"title":{},"name":{},"text":{"11":{}},"component":{}}],["finit",{"_index":925,"title":{},"name":{},"text":{"20":{}},"component":{}}],["first",{"_index":987,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"27":{},"33":{},"67":{},"73":{},"75":{},"76":{}},"component":{}}],["firstbirdnam",{"_index":1327,"title":{},"name":{},"text":{"20":{}},"component":{}}],["firstnam",{"_index":2965,"title":{},"name":{},"text":{"64":{}},"component":{}}],["fish",{"_index":1337,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["fit",{"_index":195,"title":{},"name":{},"text":{"9":{},"13":{}},"component":{}}],["five",{"_index":999,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fix",{"_index":785,"title":{"20-22":{}},"name":{},"text":{"20":{},"22":{},"23":{}},"component":{}}],["flag",{"_index":529,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"64":{}},"component":{}}],["flavor",{"_index":2051,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["flight",{"_index":2041,"title":{},"name":{},"text":{"20":{}},"component":{}}],["float",{"_index":775,"title":{"20-4":{}},"name":{},"text":{"20":{},"23":{},"64":{},"69":{}},"component":{}}],["float(isbetween(0",{"_index":929,"title":{},"name":{},"text":{"20":{}},"component":{}}],["float(isfinit",{"_index":927,"title":{},"name":{},"text":{"20":{}},"component":{}}],["float64",{"_index":2971,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["float’",{"_index":928,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fmt",{"_index":3024,"title":{},"name":{},"text":{"65":{},"66":{},"67":{},"75":{}},"component":{}}],["fmt.printf(\"got",{"_index":3032,"title":{},"name":{},"text":{"65":{}},"component":{}}],["fmt.printf(\"i'm",{"_index":3072,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["fmt.println(r",{"_index":3055,"title":{},"name":{},"text":{"65":{}},"component":{}}],["fmt.println(textoutput",{"_index":3050,"title":{},"name":{},"text":{"65":{}},"component":{}}],["fn",{"_index":2906,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["focu",{"_index":419,"title":{},"name":{},"text":{"11":{}},"component":{}}],["fold",{"_index":2538,"title":{"41":{},"59":{}},"name":{"41":{},"59":{}},"text":{"27":{},"46":{},"54":{},"61":{},"75":{}},"component":{}}],["folder",{"_index":1477,"title":{},"name":{},"text":{"20":{}},"component":{}}],["follow",{"_index":160,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"43":{},"44":{},"45":{},"50":{},"51":{},"57":{},"60":{},"64":{},"67":{},"69":{},"73":{},"75":{}},"component":{}}],["foo",{"_index":1841,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"25":{},"32":{},"40":{},"65":{},"70":{}},"component":{}}],["foo\"|\"bar\"|\"baz",{"_index":2818,"title":{},"name":{},"text":{"32":{}},"component":{}}],["foo,{bar,baz",{"_index":2020,"title":{},"name":{},"text":{"20":{}},"component":{}}],["foo.pkl",{"_index":2290,"title":{},"name":{},"text":{"22":{},"25":{},"32":{},"65":{},"70":{}},"component":{}}],["foo.pkl'",{"_index":2458,"title":{},"name":{},"text":{"25":{}},"component":{}}],["foo.self",{"_index":3125,"title":{},"name":{},"text":{"70":{}},"component":{}}],["foo.swift",{"_index":3124,"title":{},"name":{},"text":{"70":{}},"component":{}}],["foo.touppercas",{"_index":2813,"title":{},"name":{},"text":{"32":{}},"component":{}}],["foo/bar.pkl",{"_index":1489,"title":{},"name":{},"text":{"20":{},"43":{}},"component":{}}],["foo/bar/baz.pkl",{"_index":1487,"title":{},"name":{},"text":{"20":{}},"component":{}}],["forc",{"_index":2471,"title":{},"name":{},"text":{"25":{}},"component":{}}],["forest",{"_index":2242,"title":{},"name":{},"text":{"21":{}},"component":{}}],["forkotlin",{"_index":760,"title":{},"name":{},"text":{"19":{}},"component":{}}],["form",{"_index":834,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"27":{}},"component":{}}],["format",{"_index":121,"title":{"42":{},"9-1":{},"32-25":{}},"name":{"42":{}},"text":{"9":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{},"21":{},"23":{},"25":{},"27":{},"28":{},"42":{},"46":{},"75":{}},"component":{}}],["format=json",{"_index":2489,"title":{},"name":{},"text":{"25":{}},"component":{}}],["fortun",{"_index":1141,"title":{},"name":{},"text":{"20":{}},"component":{}}],["forward",{"_index":1507,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["found",{"_index":2071,"title":{},"name":{},"text":{"20":{},"22":{},"27":{},"64":{}},"component":{}}],["foundat",{"_index":2514,"title":{},"name":{},"text":{"26":{}},"component":{}}],["four",{"_index":1259,"title":{},"name":{},"text":{"20":{},"21":{},"75":{}},"component":{}}],["fraction",{"_index":906,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fragment",{"_index":1552,"title":{},"name":{},"text":{"20":{}},"component":{}}],["framework",{"_index":70,"title":{"3":{}},"name":{},"text":{"9":{}},"component":{}}],["francisco",{"_index":2996,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["francisco\"|\"cupertino\"|\"london",{"_index":2994,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["frank",{"_index":1965,"title":{},"name":{},"text":{"20":{}},"component":{}}],["franklin",{"_index":1968,"title":{},"name":{},"text":{"20":{}},"component":{}}],["free",{"_index":162,"title":{},"name":{},"text":{"9":{},"21":{},"27":{},"75":{}},"component":{}}],["freeli",{"_index":2224,"title":{},"name":{},"text":{"21":{}},"component":{}}],["freez",{"_index":2100,"title":{},"name":{},"text":{"20":{}},"component":{}}],["frequent",{"_index":1000,"title":{},"name":{},"text":{"20":{}},"component":{}}],["friend",{"_index":1382,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["friendli",{"_index":143,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["fruit",{"_index":2167,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fruit/pear.pkl",{"_index":2178,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fruit/pklproject",{"_index":2172,"title":{},"name":{},"text":{"20":{}},"component":{}}],["full",{"_index":63,"title":{"14-12":{},"17-12":{},"27-16":{}},"name":{},"text":{"2":{},"9":{},"14":{},"16":{},"17":{},"19":{},"20":{},"24":{},"27":{},"28":{},"64":{}},"component":{}}],["fulli",{"_index":538,"title":{},"name":{},"text":{"14":{},"20":{},"22":{},"26":{}},"component":{}}],["fun",{"_index":2905,"title":{},"name":{},"text":{"53":{},"60":{},"75":{}},"component":{}}],["func",{"_index":3026,"title":{},"name":{},"text":{"65":{},"66":{},"67":{},"70":{},"72":{},"73":{},"75":{}},"component":{}}],["func(opt",{"_index":3057,"title":{},"name":{},"text":{"65":{}},"component":{}}],["function",{"_index":815,"title":{"20-106":{},"20-108":{},"20-130":{}},"name":{},"text":{"20":{},"25":{},"27":{},"32":{},"53":{},"60":{},"65":{},"75":{}},"component":{}}],["function0",{"_index":1902,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function1",{"_index":1903,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function2",{"_index":1904,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function3",{"_index":1905,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function4",{"_index":1906,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function5",{"_index":1907,"title":{},"name":{},"text":{"20":{}},"component":{}}],["function’",{"_index":1915,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fundament",{"_index":99,"title":{},"name":{},"text":{"7":{},"20":{}},"component":{}}],["further",{"_index":373,"title":{"16-8":{},"19-5":{},"26-5":{}},"name":{},"text":{"11":{},"20":{},"23":{},"25":{}},"component":{}}],["furthermor",{"_index":1488,"title":{},"name":{},"text":{"20":{}},"component":{}}],["futur",{"_index":461,"title":{},"name":{},"text":{"13":{}},"component":{}}],["galápago",{"_index":1146,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gather",{"_index":2148,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gb",{"_index":1593,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gen",{"_index":2942,"title":{},"name":{},"text":{"64":{},"67":{},"69":{},"73":{}},"component":{}}],["gener",{"_index":53,"title":{"14":{},"17":{},"64":{},"69":{},"9-2":{},"20-97":{},"20-110":{},"20-111":{},"20-131":{},"27-10":{},"27-11":{},"28-7":{},"28-10":{},"28-13":{},"32-38":{},"40-1":{},"64-1":{},"64-2":{},"65-3":{},"65-4":{},"67-3":{},"69-1":{},"70-3":{},"70-4":{},"73-3":{}},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"25":{},"27":{},"28":{},"32":{},"36":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{}},"component":{}}],["generated/configclass",{"_index":2845,"title":{},"name":{},"text":{"36":{}},"component":{}}],["generategett",{"_index":2675,"title":{},"name":{},"text":{"28":{}},"component":{}}],["generategetters.set(tru",{"_index":2849,"title":{},"name":{},"text":{"36":{}},"component":{}}],["generatespringbootconfig",{"_index":2686,"title":{},"name":{},"text":{"28":{}},"component":{}}],["generatespringbootconfig.set(tru",{"_index":2850,"title":{},"name":{},"text":{"36":{}},"component":{}}],["generator’",{"_index":2697,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{}}],["genjava",{"_index":2669,"title":{},"name":{},"text":{"28":{}},"component":{}}],["genkotlin",{"_index":2689,"title":{},"name":{},"text":{"28":{}},"component":{}}],["get",{"_index":371,"title":{},"name":{},"text":{"11":{},"13":{},"20":{},"32":{},"64":{},"69":{},"75":{}},"component":{}}],["get\"|\"put\"|\"post",{"_index":2880,"title":{},"name":{},"text":{"40":{}},"component":{}}],["getter",{"_index":528,"title":{},"name":{},"text":{"14":{},"28":{},"64":{}},"component":{}}],["ghi",{"_index":973,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gibibyt",{"_index":1095,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gif",{"_index":3325,"title":{},"name":{},"text":{"75":{}},"component":{}}],["gigabyt",{"_index":1082,"title":{},"name":{},"text":{"20":{}},"component":{}}],["giraff",{"_index":1278,"title":{},"name":{},"text":{"20":{}},"component":{}}],["github",{"_index":8,"title":{},"name":{},"text":{"1":{},"6":{},"20":{},"36":{},"67":{},"75":{}},"component":{}}],["github.com/apple/pkl",{"_index":2943,"title":{},"name":{},"text":{"64":{},"65":{},"67":{}},"component":{}}],["github.com/myapp/myteam/appconfig",{"_index":3023,"title":{},"name":{},"text":{"65":{}},"component":{}}],["github.com/myorg/myproject",{"_index":2953,"title":{},"name":{},"text":{"64":{}},"component":{}}],["github.com/myorg/myproject/appconfig",{"_index":2952,"title":{},"name":{},"text":{"64":{}},"component":{}}],["github.com/myorg/myteam",{"_index":3089,"title":{},"name":{},"text":{"67":{}},"component":{}}],["github.com/myorg/myteam/appconfig",{"_index":3083,"title":{},"name":{},"text":{"67":{}},"component":{}}],["github.com/myteam/myapp/myconfig",{"_index":3070,"title":{},"name":{},"text":{"66":{}},"component":{}}],["give",{"_index":1235,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{}},"component":{}}],["given",{"_index":183,"title":{},"name":{},"text":{"9":{},"16":{},"20":{},"21":{},"23":{},"25":{},"26":{},"28":{},"65":{},"70":{}},"component":{}}],["glibc",{"_index":2425,"title":{},"name":{},"text":{"25":{}},"component":{}}],["glimps",{"_index":3331,"title":{},"name":{},"text":{"75":{}},"component":{}}],["glob",{"_index":794,"title":{"20-61":{},"20-77":{},"20-115":{}},"name":{},"text":{"20":{}},"component":{}}],["glob(7",{"_index":2011,"title":{},"name":{},"text":{"20":{}},"component":{}}],["global",{"_index":2960,"title":{},"name":{},"text":{"64":{}},"component":{}}],["globbabl",{"_index":1548,"title":{},"name":{},"text":{"20":{}},"component":{}}],["go",{"_index":62,"title":{"66":{},"37-4":{},"64-7":{},"67-3":{},"67-4":{}},"name":{},"text":{"2":{},"4":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"24":{},"25":{},"27":{},"28":{},"64":{},"65":{},"66":{},"67":{},"73":{},"75":{}},"component":{"63":{},"64":{},"65":{},"66":{},"67":{}}}],["go.field",{"_index":2961,"title":{},"name":{},"text":{"64":{}},"component":{}}],["go.mod",{"_index":2954,"title":{},"name":{},"text":{"64":{},"67":{}},"component":{}}],["go.nam",{"_index":3006,"title":{},"name":{},"text":{"64":{}},"component":{}}],["go.packag",{"_index":2955,"title":{},"name":{},"text":{"64":{},"67":{}},"component":{}}],["go/cmd/pkl",{"_index":2944,"title":{},"name":{},"text":{"64":{},"67":{}},"component":{}}],["go/pkl",{"_index":3025,"title":{},"name":{},"text":{"65":{}},"component":{}}],["go/pkl.golang@#/generatorsettings.pkl",{"_index":2948,"title":{},"name":{},"text":{"64":{}},"component":{}}],["go/pkl.golang@0.5.0#/go.pkl",{"_index":3086,"title":{},"name":{},"text":{"67":{}},"component":{}}],["go/releases/download/v0.5.0/pkl",{"_index":3076,"title":{},"name":{},"text":{"67":{}},"component":{}}],["go@latest",{"_index":2945,"title":{},"name":{},"text":{"64":{},"67":{}},"component":{}}],["go@v0.5.0",{"_index":3075,"title":{},"name":{},"text":{"67":{}},"component":{}}],["goal",{"_index":287,"title":{},"name":{},"text":{"9":{},"20":{},"75":{}},"component":{}}],["goe",{"_index":1878,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["goland",{"_index":2505,"title":{},"name":{},"text":{"25":{},"38":{},"75":{}},"component":{}}],["golang",{"_index":458,"title":{},"name":{},"text":{"13":{}},"component":{}}],["good",{"_index":194,"title":{},"name":{},"text":{"9":{},"13":{},"20":{},"23":{},"75":{}},"component":{}}],["good.pkl",{"_index":2778,"title":{},"name":{},"text":{"32":{}},"component":{}}],["go’",{"_index":2152,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gradl",{"_index":57,"title":{"28":{},"14-2":{},"14-4":{},"14-8":{},"16-2":{},"17-2":{},"17-4":{},"17-8":{},"19-2":{},"26-2":{},"27-4":{},"27-6":{},"27-12":{},"35-1":{}},"name":{},"text":{"2":{},"8":{},"9":{},"10":{},"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"36":{}},"component":{}}],["gradlew",{"_index":2603,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{}}],["gradual",{"_index":291,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["grain",{"_index":377,"title":{},"name":{},"text":{"11":{}},"component":{}}],["grammar",{"_index":827,"title":{"20-127":{}},"name":{},"text":{"20":{}},"component":{}}],["grant",{"_index":111,"title":{},"name":{},"text":{"7":{},"20":{}},"component":{}}],["graph",{"_index":3247,"title":{},"name":{},"text":{"75":{}},"component":{}}],["great",{"_index":250,"title":{},"name":{},"text":{"9":{},"20":{},"22":{}},"component":{}}],["green",{"_index":2286,"title":{},"name":{},"text":{"22":{}},"component":{}}],["greet",{"_index":974,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["greet(bird",{"_index":1419,"title":{},"name":{},"text":{"20":{}},"component":{}}],["greet(nam",{"_index":1429,"title":{},"name":{},"text":{"20":{}},"component":{}}],["greeting1",{"_index":1423,"title":{},"name":{},"text":{"20":{}},"component":{}}],["greeting2",{"_index":1425,"title":{},"name":{},"text":{"20":{}},"component":{}}],["greetpigeon(bird",{"_index":1421,"title":{},"name":{},"text":{"20":{}},"component":{}}],["greetpigeon(parrot",{"_index":1426,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ground",{"_index":437,"title":{},"name":{},"text":{"12":{}},"component":{}}],["group",{"_index":2568,"title":{},"name":{},"text":{"27":{}},"component":{}}],["grow",{"_index":320,"title":{},"name":{},"text":{"11":{},"75":{}},"component":{}}],["guarante",{"_index":1650,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["guard",{"_index":3184,"title":{},"name":{},"text":{"75":{}},"component":{}}],["guess",{"_index":1134,"title":{},"name":{},"text":{"20":{}},"component":{}}],["guid",{"_index":2748,"title":{"32":{}},"name":{},"text":{"66":{},"72":{},"75":{}},"component":{}}],["guidelin",{"_index":2057,"title":{},"name":{},"text":{"20":{}},"component":{}}],["gutter",{"_index":2882,"title":{},"name":{},"text":{"41":{}},"component":{}}],["h",{"_index":586,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["habitat",{"_index":2240,"title":{},"name":{},"text":{"21":{}},"component":{}}],["half",{"_index":1816,"title":{},"name":{},"text":{"20":{}},"component":{}}],["haliaetu",{"_index":1295,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hamburg",{"_index":2797,"title":{},"name":{},"text":{"32":{}},"component":{}}],["hamper",{"_index":1003,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hand",{"_index":277,"title":{},"name":{},"text":{"9":{},"20":{},"36":{}},"component":{}}],["handi",{"_index":1854,"title":{},"name":{},"text":{"20":{}},"component":{}}],["happen",{"_index":1137,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["hard",{"_index":210,"title":{},"name":{},"text":{"9":{},"75":{}},"component":{}}],["harder",{"_index":2809,"title":{},"name":{},"text":{"32":{}},"component":{}}],["harrier",{"_index":2402,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hasax",{"_index":1014,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hasconfig",{"_index":2931,"title":{},"name":{},"text":{"58":{}},"component":{}}],["hasexercis",{"_index":2340,"title":{},"name":{},"text":{"23":{}},"component":{}}],["hash",{"_index":1438,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hashabl",{"_index":3109,"title":{},"name":{},"text":{"69":{},"75":{}},"component":{}}],["hashcod",{"_index":485,"title":{},"name":{},"text":{"14":{}},"component":{}}],["have",{"_index":2348,"title":{},"name":{},"text":{"23":{}},"component":{}}],["haven’t",{"_index":233,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hawk",{"_index":1275,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hcl",{"_index":237,"title":{},"name":{},"text":{"9":{}},"component":{}}],["header",{"_index":2719,"title":{"32-5":{}},"name":{},"text":{"32":{}},"component":{}}],["hear",{"_index":3,"title":{},"name":{},"text":{"1":{}},"component":{}}],["hello",{"_index":952,"title":{},"name":{},"text":{"20":{},"25":{},"32":{},"65":{},"70":{}},"component":{}}],["help",{"_index":201,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"17":{},"20":{},"23":{},"25":{},"27":{},"67":{},"73":{}},"component":{}}],["hemispher",{"_index":2388,"title":{},"name":{},"text":{"23":{}},"component":{}}],["henc",{"_index":106,"title":{},"name":{},"text":{"7":{},"16":{},"20":{},"28":{}},"component":{}}],["here",{"_index":763,"title":{},"name":{},"text":{"19":{},"20":{},"22":{},"23":{},"25":{},"32":{},"36":{},"58":{},"64":{},"67":{},"75":{}},"component":{}}],["heterogen",{"_index":1725,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hexadecim",{"_index":855,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hi",{"_index":975,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["hidden",{"_index":784,"title":{"20-20":{}},"name":{},"text":{"20":{},"22":{},"75":{}},"component":{}}],["hierarch",{"_index":196,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"25":{},"28":{}},"component":{}}],["hierarchi",{"_index":1397,"title":{},"name":{},"text":{"20":{}},"component":{}}],["high",{"_index":509,"title":{},"name":{},"text":{"14":{},"17":{},"27":{}},"component":{}}],["higher",{"_index":490,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"35":{},"38":{},"58":{}},"component":{}}],["highest",{"_index":705,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["highli",{"_index":259,"title":{},"name":{},"text":{"9":{},"24":{}},"component":{}}],["highlight",{"_index":2863,"title":{"37":{},"48":{},"55":{},"62":{}},"name":{"37":{},"48":{},"55":{},"62":{}},"text":{"38":{},"46":{},"48":{},"51":{},"54":{},"55":{},"57":{},"58":{},"61":{},"62":{},"75":{}},"component":{}}],["hit",{"_index":2328,"title":{},"name":{},"text":{"22":{},"25":{}},"component":{}}],["hobbi",{"_index":758,"title":{},"name":{},"text":{"19":{},"20":{},"26":{}},"component":{}}],["hoc",{"_index":45,"title":{},"name":{},"text":{"2":{},"12":{},"20":{}},"component":{}}],["hold",{"_index":1360,"title":{},"name":{},"text":{"20":{},"47":{}},"component":{}}],["homebrew",{"_index":309,"title":{},"name":{},"text":{"10":{}},"component":{}}],["honor",{"_index":2501,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hoo",{"_index":1976,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hood",{"_index":1958,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["hope",{"_index":288,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"75":{}},"component":{}}],["host",{"_index":193,"title":{},"name":{},"text":{"9":{},"20":{},"35":{},"66":{},"67":{},"72":{},"73":{},"75":{}},"component":{}}],["hostnam",{"_index":3087,"title":{},"name":{},"text":{"67":{},"73":{},"75":{}},"component":{}}],["hour",{"_index":1039,"title":{},"name":{},"text":{"20":{}},"component":{}}],["http",{"_index":1459,"title":{},"name":{},"text":{"20":{},"22":{},"25":{},"28":{},"43":{}},"component":{}}],["http(",{"_index":789,"title":{"20-47":{}},"name":{},"text":{"20":{}},"component":{}}],["https://apple.com/path/to/mymodule.pkl",{"_index":1483,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com",{"_index":2053,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com/\\(name)/\\(name)@\\(version).zip",{"_index":2159,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com/birds@\\(version).zip",{"_index":2171,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com/foobar.pkl",{"_index":2887,"title":{},"name":{},"text":{"43":{}},"component":{}}],["https://example.com/fruit@\\(version).zip",{"_index":2175,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com/my_module.pkl",{"_index":1444,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://example.com/mypackage@1.0.0",{"_index":1460,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["https://example.com/pkl/bird.pkl",{"_index":1435,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://github.com/apple/pkl",{"_index":2898,"title":{},"name":{},"text":{"51":{},"58":{},"75":{}},"component":{}}],["https://github.com/apple/pkl/blob/0.24.0/stdlib/base.pkl#l90",{"_index":2238,"title":{},"name":{},"text":{"21":{}},"component":{}}],["https://github.com/apple/pkl/blob/e4d8c882d/stdlib/base.pkl#l90",{"_index":2314,"title":{},"name":{},"text":{"22":{}},"component":{}}],["https://github.com/apple/pkl/releases/download/0.25.0",{"_index":2436,"title":{},"name":{},"text":{"25":{}},"component":{}}],["https://github.com/apple/pkl/releases/download/0.25.0/pkl",{"_index":3079,"title":{},"name":{},"text":{"67":{}},"component":{}}],["https://github.com/pkl",{"_index":3155,"title":{},"name":{},"text":{"73":{},"75":{}},"component":{}}],["https://mycompany.com/modules/pigeon.pkl",{"_index":1510,"title":{},"name":{},"text":{"20":{}},"component":{}}],["https://pkl",{"_index":2867,"title":{},"name":{},"text":{"39":{}},"component":{}}],["hub",{"_index":2371,"title":{},"name":{},"text":{"23":{}},"component":{}}],["human",{"_index":142,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["hundr",{"_index":270,"title":{},"name":{},"text":{"9":{}},"component":{}}],["hunter2",{"_index":3225,"title":{},"name":{},"text":{"75":{}},"component":{}}],["hyperlink",{"_index":2537,"title":{},"name":{},"text":{"27":{}},"component":{}}],["hyphen",{"_index":1529,"title":{},"name":{},"text":{"20":{}},"component":{}}],["hypothet",{"_index":1182,"title":{},"name":{},"text":{"20":{}},"component":{}}],["i.",{"_index":2177,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["icon",{"_index":2881,"title":{},"name":{},"text":{"41":{}},"component":{}}],["id",{"_index":243,"title":{},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"24":{},"28":{},"36":{},"75":{}},"component":{}}],["id(\"org.pkl",{"_index":2589,"title":{},"name":{},"text":{"28":{}},"component":{}}],["idea",{"_index":2503,"title":{},"name":{},"text":{"25":{},"28":{},"38":{},"47":{},"75":{}},"component":{}}],["idea://open?file=/prod.pkl&line=1",{"_index":2892,"title":{},"name":{},"text":{"47":{}},"component":{}}],["idempot",{"_index":2150,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ident",{"_index":1541,"title":{},"name":{},"text":{"20":{},"22":{},"25":{},"28":{}},"component":{}}],["identifi",{"_index":823,"title":{"20-121":{},"20-129":{}},"name":{},"text":{"20":{},"65":{},"70":{}},"component":{}}],["identifier’",{"_index":2042,"title":{},"name":{},"text":{"20":{}},"component":{}}],["idol",{"_index":1963,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ifnonnul",{"_index":799,"title":{"20-72":{}},"name":{},"text":{"20":{}},"component":{}}],["ignor",{"_index":707,"title":{},"name":{},"text":{"16":{},"20":{},"25":{},"28":{},"64":{}},"component":{}}],["iii",{"_index":2202,"title":{},"name":{},"text":{"21":{}},"component":{}}],["illeg",{"_index":2039,"title":{},"name":{},"text":{"20":{}},"component":{}}],["imagin",{"_index":3092,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["imaginari",{"_index":3207,"title":{},"name":{},"text":{"75":{}},"component":{}}],["immedi",{"_index":1498,"title":{},"name":{},"text":{"20":{}},"component":{}}],["immut",{"_index":311,"title":{"11-3":{}},"name":{},"text":{"11":{},"14":{},"20":{},"21":{}},"component":{}}],["imp",{"_index":2909,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["implement",{"_index":305,"title":{},"name":{},"text":{"10":{},"11":{},"14":{},"16":{},"20":{},"32":{},"65":{},"70":{}},"component":{}}],["impli",{"_index":936,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["implic",{"_index":948,"title":{},"name":{},"text":{"20":{}},"component":{}}],["implicit",{"_index":1843,"title":{},"name":{},"text":{"20":{}},"component":{}}],["implicitli",{"_index":1164,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["import",{"_index":94,"title":{"20-58":{},"20-59":{},"20-60":{},"20-61":{},"32-8":{}},"name":{},"text":{"7":{},"9":{},"11":{},"20":{},"22":{},"23":{},"32":{},"40":{},"43":{},"53":{},"60":{},"65":{},"66":{},"67":{},"69":{},"75":{}},"component":{}}],["import(\"../fruit/pklproject",{"_index":2168,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"birds/falcon.pkl",{"_index":1547,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"birds/parrot.pkl",{"_index":1545,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"birds/pigeon.pkl",{"_index":1543,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"falcon.pkl",{"_index":1825,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"parrot.pkl",{"_index":1531,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"pigeon.pkl",{"_index":1530,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import(\"somemodule.pkl",{"_index":1271,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import*(\"birds/*.pkl",{"_index":1537,"title":{},"name":{},"text":{"20":{}},"component":{}}],["import*(#\"\\{foo.pkl",{"_index":2022,"title":{},"name":{},"text":{"20":{}},"component":{}}],["importantli",{"_index":3200,"title":{},"name":{},"text":{"75":{}},"component":{}}],["impress",{"_index":2536,"title":{},"name":{},"text":{"27":{}},"component":{}}],["improv",{"_index":292,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["includ",{"_index":140,"title":{},"name":{},"text":{"9":{},"20":{},"22":{},"25":{},"28":{},"67":{},"75":{}},"component":{}}],["incorpor",{"_index":2021,"title":{},"name":{},"text":{"20":{}},"component":{}}],["increas",{"_index":387,"title":{},"name":{},"text":{"11":{},"13":{}},"component":{}}],["increasingli",{"_index":321,"title":{},"name":{},"text":{"11":{}},"component":{}}],["incred",{"_index":1202,"title":{},"name":{},"text":{"20":{}},"component":{}}],["inde",{"_index":2332,"title":{},"name":{},"text":{"22":{}},"component":{}}],["indent",{"_index":547,"title":{"32-27":{}},"name":{},"text":{"14":{},"17":{},"20":{},"28":{},"32":{},"40":{},"52":{},"54":{},"58":{}},"component":{}}],["independ",{"_index":296,"title":{},"name":{},"text":{"10":{},"11":{}},"component":{}}],["index",{"_index":13,"title":{},"name":{"2":{},"12":{},"15":{},"18":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"31":{},"32":{},"34":{},"38":{},"46":{},"50":{},"54":{},"57":{},"61":{},"66":{},"72":{},"74":{},"76":{}},"text":{"20":{},"21":{},"22":{}},"component":{}}],["index.pkl",{"_index":1540,"title":{},"name":{},"text":{"20":{}},"component":{}}],["indexedlisting.pkl",{"_index":2247,"title":{},"name":{},"text":{"21":{}},"component":{}}],["indic",{"_index":530,"title":{},"name":{},"text":{"14":{},"17":{},"19":{},"20":{},"22":{}},"component":{}}],["indirectli",{"_index":2624,"title":{},"name":{},"text":{"28":{}},"component":{}}],["individu",{"_index":719,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"23":{}},"component":{}}],["industri",{"_index":2381,"title":{},"name":{},"text":{"23":{}},"component":{}}],["infant(_nam",{"_index":2073,"title":{},"name":{},"text":{"20":{}},"component":{}}],["infeas",{"_index":2956,"title":{},"name":{},"text":{"64":{}},"component":{}}],["infer",{"_index":1348,"title":{"37-9":{}},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["infin",{"_index":913,"title":{},"name":{},"text":{"20":{}},"component":{}}],["infix",{"_index":2817,"title":{},"name":{},"text":{"32":{}},"component":{}}],["influenc",{"_index":1584,"title":{},"name":{},"text":{"20":{}},"component":{}}],["info",{"_index":2874,"title":{},"name":{},"text":{"40":{}},"component":{}}],["info.pkl",{"_index":2565,"title":{},"name":{},"text":{"27":{},"28":{}},"component":{}}],["info.pkl\",\"template1.pkl",{"_index":2696,"title":{},"name":{},"text":{"28":{}},"component":{}}],["inform",{"_index":386,"title":{"16-8":{},"19-5":{},"26-5":{}},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"23":{},"25":{},"27":{},"32":{},"36":{}},"component":{}}],["inherit",{"_index":788,"title":{"20-40":{}},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["init(hostnam",{"_index":3259,"title":{},"name":{},"text":{"75":{}},"component":{}}],["init(usernam",{"_index":3265,"title":{},"name":{},"text":{"75":{}},"component":{}}],["init.vim",{"_index":2920,"title":{},"name":{},"text":{"58":{}},"component":{}}],["initi",{"_index":1361,"title":{"65-1":{}},"name":{},"text":{"20":{},"29":{},"32":{},"56":{},"63":{},"65":{},"68":{}},"component":{}}],["inject",{"_index":2855,"title":{},"name":{},"text":{"36":{}},"component":{}}],["inlin",{"_index":1800,"title":{},"name":{},"text":{"20":{},"32":{},"64":{}},"component":{}}],["innt",{"_index":3132,"title":{},"name":{},"text":{"70":{}},"component":{}}],["input",{"_index":477,"title":{},"name":{},"text":{"14":{},"21":{},"22":{},"23":{},"25":{},"28":{},"65":{},"70":{}},"component":{}}],["input/output",{"_index":2466,"title":{},"name":{},"text":{"25":{}},"component":{}}],["insect",{"_index":2283,"title":{},"name":{},"text":{"22":{}},"component":{}}],["insert",{"_index":976,"title":{},"name":{},"text":{"20":{},"40":{},"53":{},"54":{},"61":{}},"component":{}}],["insid",{"_index":955,"title":{},"name":{},"text":{"20":{},"21":{},"28":{},"73":{}},"component":{}}],["inspir",{"_index":2096,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["instal",{"_index":16,"title":{"35":{},"39":{},"51":{},"58":{},"14-1":{},"16-1":{},"17-1":{},"19-1":{},"25-1":{},"26-1":{},"27-3":{},"28-1":{},"67-1":{},"73-1":{}},"name":{"35":{},"39":{},"51":{},"58":{}},"text":{"2":{},"10":{},"14":{},"17":{},"25":{},"27":{},"38":{},"39":{},"50":{},"51":{},"57":{},"58":{},"60":{},"64":{},"67":{},"69":{},"73":{},"75":{}},"component":{}}],["instanc",{"_index":691,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"64":{}},"component":{}}],["instanti",{"_index":1228,"title":{},"name":{},"text":{"20":{},"23":{},"32":{}},"component":{}}],["instantli",{"_index":2423,"title":{},"name":{},"text":{"25":{}},"component":{}}],["instead",{"_index":334,"title":{},"name":{},"text":{"11":{},"14":{},"19":{},"20":{},"22":{},"23":{},"25":{},"28":{},"32":{},"36":{},"64":{},"75":{}},"component":{}}],["instruct",{"_index":2331,"title":{},"name":{},"text":{"22":{},"50":{},"57":{},"60":{},"67":{},"69":{}},"component":{}}],["instructor",{"_index":2391,"title":{},"name":{},"text":{"23":{}},"component":{}}],["int",{"_index":677,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"22":{},"23":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["int(isbetween(0",{"_index":903,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["int(thi",{"_index":2303,"title":{},"name":{},"text":{"22":{}},"component":{}}],["int.self",{"_index":3140,"title":{},"name":{},"text":{"70":{}},"component":{}}],["int16",{"_index":1803,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["int32",{"_index":1806,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["int8",{"_index":1801,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["integ",{"_index":774,"title":{"20-3":{}},"name":{},"text":{"20":{},"21":{}},"component":{}}],["integer’",{"_index":870,"title":{},"name":{},"text":{"20":{}},"component":{}}],["integr",{"_index":34,"title":{"3":{},"15":{},"18":{},"34":{},"66":{},"72":{}},"name":{"3":{}},"text":{"2":{},"3":{},"9":{},"10":{},"15":{},"18":{},"28":{},"66":{},"72":{},"75":{}},"component":{}}],["intellij",{"_index":115,"title":{"38":{}},"name":{},"text":{"8":{},"24":{},"25":{},"28":{},"38":{},"43":{},"46":{},"47":{},"75":{}},"component":{"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{}}}],["intellij/updateplugins.xml",{"_index":2869,"title":{},"name":{},"text":{"39":{}},"component":{}}],["intend",{"_index":1359,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["intention",{"_index":2783,"title":{},"name":{},"text":{"32":{}},"component":{}}],["interact",{"_index":360,"title":{},"name":{},"text":{"11":{},"23":{},"24":{},"25":{},"70":{},"75":{}},"component":{}}],["interest",{"_index":1354,"title":{},"name":{},"text":{"20":{}},"component":{}}],["interfac",{"_index":1671,"title":{},"name":{},"text":{"20":{},"25":{},"64":{},"65":{}},"component":{}}],["intermedi",{"_index":645,"title":{},"name":{},"text":{"16":{},"23":{}},"component":{}}],["intern",{"_index":2138,"title":{},"name":{},"text":{"20":{}},"component":{}}],["internet",{"_index":1458,"title":{},"name":{},"text":{"20":{}},"component":{}}],["interpol",{"_index":777,"title":{"20-7":{},"32-24":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["interpret",{"_index":1008,"title":{},"name":{},"text":{"20":{}},"component":{}}],["intro.pkl",{"_index":2191,"title":{},"name":{},"text":{"21":{}},"component":{}}],["introduc",{"_index":329,"title":{"75":{},"76-1":{}},"name":{},"text":{"11":{},"20":{},"75":{}},"component":{}}],["introduct",{"_index":48,"title":{"12":{},"20-43":{}},"name":{},"text":{"2":{},"20":{}},"component":{}}],["intseq",{"_index":1983,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["intuit",{"_index":2294,"title":{},"name":{},"text":{"22":{}},"component":{}}],["invalid",{"_index":3106,"title":{},"name":{},"text":{"69":{}},"component":{}}],["invalid.pkl",{"_index":1277,"title":{},"name":{},"text":{"20":{}},"component":{}}],["invalid2.pkl",{"_index":1307,"title":{},"name":{},"text":{"20":{}},"component":{}}],["invok",{"_index":709,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"36":{}},"component":{}}],["irrelev",{"_index":711,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["isbetween",{"_index":899,"title":{},"name":{},"text":{"20":{}},"component":{}}],["isbetween(0",{"_index":1817,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["isdistinct",{"_index":1367,"title":{},"name":{},"text":{"20":{}},"component":{}}],["isdistinctbi",{"_index":1370,"title":{},"name":{},"text":{"20":{}},"component":{}}],["isfinit",{"_index":926,"title":{},"name":{},"text":{"20":{}},"component":{}}],["isinteract",{"_index":2193,"title":{},"name":{},"text":{"21":{}},"component":{}}],["isn’t",{"_index":208,"title":{},"name":{},"text":{"9":{},"23":{},"36":{},"64":{}},"component":{}}],["isol",{"_index":312,"title":{"11-4":{}},"name":{},"text":{},"component":{}}],["isolderthan",{"_index":2065,"title":{},"name":{},"text":{"20":{}},"component":{}}],["isolderthan(bird",{"_index":2067,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ispigeon",{"_index":2084,"title":{},"name":{},"text":{"20":{}},"component":{}}],["issing",{"_index":1964,"title":{},"name":{},"text":{"20":{}},"component":{}}],["issu",{"_index":5,"title":{},"name":{},"text":{"1":{},"34":{}},"component":{}}],["it.evaluatetext(\"\"\"pigeon",{"_index":755,"title":{},"name":{},"text":{"19":{}},"component":{}}],["it.evaluatetext(\"nam",{"_index":772,"title":{},"name":{},"text":{"19":{}},"component":{}}],["it.groups[1].valu",{"_index":1783,"title":{},"name":{},"text":{"20":{}},"component":{}}],["it.nam",{"_index":1372,"title":{},"name":{},"text":{"20":{}},"component":{}}],["it.start",{"_index":1781,"title":{},"name":{},"text":{"20":{}},"component":{}}],["it.valu",{"_index":1782,"title":{},"name":{},"text":{"20":{}},"component":{}}],["iter",{"_index":1982,"title":{},"name":{},"text":{"20":{}},"component":{}}],["itself",{"_index":1316,"title":{},"name":{},"text":{"20":{},"36":{},"75":{}},"component":{}}],["it’",{"_index":1945,"title":{},"name":{},"text":{"20":{},"23":{},"26":{},"75":{}},"component":{}}],["jar",{"_index":505,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"27":{},"28":{},"43":{}},"component":{}}],["jar1.jar",{"_index":1453,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["java",{"_index":73,"title":{"14":{},"15":{},"16":{},"14-3":{},"14-9":{},"17-3":{},"17-9":{},"25-6":{},"27-5":{},"27-13":{},"28-7":{}},"name":{"16":{}},"text":{"4":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"34":{},"35":{},"36":{},"43":{},"73":{},"75":{}},"component":{}}],["java(script",{"_index":1409,"title":{},"name":{},"text":{"20":{}},"component":{}}],["java.beans.constructorproperti",{"_index":715,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java.io.fil",{"_index":2617,"title":{},"name":{},"text":{"28":{}},"component":{}}],["java.io.serializ",{"_index":546,"title":{},"name":{},"text":{"14":{}},"component":{}}],["java.jar",{"_index":522,"title":{},"name":{},"text":{"14":{}},"component":{}}],["java.lang.annotation.elementtype.type_us",{"_index":544,"title":{},"name":{},"text":{"14":{}},"component":{}}],["java.lang.byt",{"_index":1821,"title":{},"name":{},"text":{"20":{}},"component":{}}],["java.lang.charact",{"_index":726,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java.lang.charsequ",{"_index":2620,"title":{},"name":{},"text":{"28":{}},"component":{}}],["java.lang.object",{"_index":3290,"title":{},"name":{},"text":{"75":{}},"component":{}}],["java.lang.overrid",{"_index":3291,"title":{},"name":{},"text":{"75":{}},"component":{}}],["java.lang.str",{"_index":3292,"title":{},"name":{},"text":{"75":{}},"component":{}}],["java.lang.stringbuild",{"_index":3293,"title":{},"name":{},"text":{"75":{}},"component":{}}],["java.net.uri",{"_index":1823,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["java.net.uri/url",{"_index":700,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java.net.url",{"_index":2619,"title":{},"name":{},"text":{"28":{}},"component":{}}],["java.nio.file.path",{"_index":2618,"title":{},"name":{},"text":{"28":{}},"component":{}}],["java.time.dur",{"_index":699,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java.util.collect",{"_index":729,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java.util.object",{"_index":3294,"title":{},"name":{},"text":{"75":{}},"component":{}}],["java.util.opt",{"_index":698,"title":{},"name":{},"text":{"16":{}},"component":{}}],["java:0.25.0",{"_index":495,"title":{},"name":{},"text":{"14":{}},"component":{}}],["javacodegener",{"_index":2668,"title":{},"name":{},"text":{"28":{},"36":{}},"component":{}}],["javadoc",{"_index":517,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"26":{},"27":{}},"component":{}}],["javascript",{"_index":1156,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["javatype.listof",{"_index":680,"title":{},"name":{},"text":{"16":{}},"component":{}}],["javax.inject.nam",{"_index":716,"title":{},"name":{},"text":{"16":{},"28":{}},"component":{}}],["javax.inject:javax.inject:1",{"_index":2677,"title":{},"name":{},"text":{"28":{}},"component":{}}],["java’",{"_index":1448,"title":{},"name":{},"text":{"20":{}},"component":{}}],["jerom",{"_index":2394,"title":{},"name":{},"text":{"23":{}},"component":{}}],["jetbrain",{"_index":3322,"title":{},"name":{},"text":{"75":{}},"component":{}}],["jit",{"_index":266,"title":{},"name":{},"text":{"9":{}},"component":{}}],["job",{"_index":2305,"title":{},"name":{},"text":{"22":{}},"component":{}}],["joy",{"_index":3205,"title":{},"name":{},"text":{"75":{}},"component":{}}],["jpkl",{"_index":2443,"title":{},"name":{},"text":{"25":{},"73":{}},"component":{}}],["jr",{"_index":1413,"title":{},"name":{},"text":{"20":{}},"component":{}}],["json",{"_index":134,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"21":{},"25":{},"28":{},"75":{}},"component":{}}],["jsonnet",{"_index":236,"title":{},"name":{},"text":{"9":{},"11":{},"25":{},"28":{}},"component":{}}],["jsonnet.render",{"_index":1577,"title":{},"name":{},"text":{"20":{}},"component":{}}],["jsonrender",{"_index":1576,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["jump",{"_index":2890,"title":{"47":{}},"name":{"47":{}},"text":{"46":{}},"component":{}}],["junit",{"_index":2469,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["junitreportsdir",{"_index":2661,"title":{},"name":{},"text":{"28":{}},"component":{}}],["junitreportsdir.set(layout.builddirectory.dir(\"report",{"_index":2665,"title":{},"name":{},"text":{"28":{}},"component":{}}],["justifi",{"_index":1225,"title":{},"name":{},"text":{"20":{}},"component":{}}],["jvm",{"_index":251,"title":{},"name":{},"text":{"9":{},"13":{},"20":{},"75":{}},"component":{}}],["k",{"_index":3101,"title":{},"name":{},"text":{"69":{}},"component":{}}],["k8",{"_index":3252,"title":{},"name":{},"text":{"75":{}},"component":{}}],["k8sresource.pkl",{"_index":2751,"title":{},"name":{},"text":{"32":{}},"component":{}}],["kate",{"_index":2392,"title":{},"name":{},"text":{"23":{}},"component":{}}],["kdoc",{"_index":744,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kebab",{"_index":2754,"title":{},"name":{},"text":{"32":{}},"component":{}}],["keep",{"_index":390,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["kept",{"_index":1351,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kevin",{"_index":2400,"title":{},"name":{},"text":{"23":{}},"component":{}}],["key",{"_index":1120,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{},"27":{},"28":{},"47":{}},"component":{}}],["key.revers",{"_index":1391,"title":{},"name":{},"text":{"20":{}},"component":{}}],["key/valu",{"_index":1893,"title":{},"name":{},"text":{"20":{}},"component":{}}],["keytyp",{"_index":1395,"title":{},"name":{},"text":{"20":{}},"component":{}}],["keyword",{"_index":829,"title":{"20-128":{}},"name":{},"text":{"20":{},"22":{},"32":{}},"component":{}}],["key–valu",{"_index":1116,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kibibyt",{"_index":1091,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kid",{"_index":1411,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kill",{"_index":372,"title":{},"name":{},"text":{"11":{}},"component":{}}],["kilobyt",{"_index":1076,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kind",{"_index":1221,"title":{},"name":{},"text":{"20":{},"21":{},"27":{}},"component":{}}],["kingdom",{"_index":2258,"title":{},"name":{},"text":{"22":{}},"component":{}}],["know",{"_index":49,"title":{},"name":{},"text":{"2":{},"11":{},"20":{},"21":{},"22":{},"23":{}},"component":{}}],["knowledg",{"_index":1209,"title":{},"name":{},"text":{"20":{}},"component":{}}],["known",{"_index":282,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"69":{}},"component":{}}],["kotlin",{"_index":74,"title":{"17":{},"18":{},"19":{},"28-10":{}},"name":{"19":{}},"text":{"4":{},"10":{},"13":{},"17":{},"18":{},"19":{},"20":{},"28":{},"36":{},"75":{}},"component":{}}],["kotlin.byt",{"_index":1822,"title":{},"name":{},"text":{"20":{}},"component":{}}],["kotlin.int",{"_index":3316,"title":{},"name":{},"text":{"75":{}},"component":{}}],["kotlin.jar",{"_index":747,"title":{},"name":{},"text":{"17":{}},"component":{}}],["kotlin.long",{"_index":3317,"title":{},"name":{},"text":{"75":{}},"component":{}}],["kotlin.str",{"_index":3318,"title":{},"name":{},"text":{"75":{}},"component":{}}],["kotlin:0.25.0",{"_index":741,"title":{},"name":{},"text":{"17":{},"19":{}},"component":{}}],["kotlincodegener",{"_index":2688,"title":{},"name":{},"text":{"28":{}},"component":{}}],["kubernet",{"_index":3253,"title":{},"name":{},"text":{"75":{}},"component":{}}],["lambda",{"_index":1884,"title":{},"name":{},"text":{"20":{},"44":{},"53":{},"60":{}},"component":{}}],["lamp",{"_index":2094,"title":{},"name":{},"text":{"20":{}},"component":{}}],["lang",{"_index":499,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"28":{},"35":{},"36":{}},"component":{}}],["lang.org/pkl",{"_index":2868,"title":{},"name":{},"text":{"39":{},"64":{},"67":{},"69":{},"75":{}},"component":{}}],["lang/pkl",{"_index":3156,"title":{},"name":{},"text":{"73":{}},"component":{}}],["lang/pkl/blob/0.25.0/stdlib/base.pkl#l106",{"_index":3239,"title":{},"name":{},"text":{"75":{}},"component":{}}],["lang:pkl",{"_index":633,"title":{},"name":{},"text":{"16":{},"17":{},"19":{},"26":{},"27":{},"35":{}},"component":{}}],["languag",{"_index":18,"title":{"4":{},"5":{},"20":{},"24":{},"75":{},"9-2":{},"9-3":{},"20-65":{},"75-4":{},"76-1":{}},"name":{"4":{},"5":{}},"text":{"2":{},"5":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"32":{},"38":{},"50":{},"57":{},"75":{},"76":{}},"component":{}}],["larg",{"_index":41,"title":{},"name":{},"text":{"2":{},"9":{},"11":{},"12":{},"20":{}},"component":{}}],["larger",{"_index":280,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["largest",{"_index":1043,"title":{},"name":{},"text":{"20":{}},"component":{}}],["last",{"_index":988,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"75":{}},"component":{}}],["lastnam",{"_index":2968,"title":{},"name":{},"text":{"64":{}},"component":{}}],["late",{"_index":781,"title":{"20-16":{},"20-27":{},"20-35":{}},"name":{},"text":{"20":{},"25":{},"32":{}},"component":{}}],["later",{"_index":1217,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["latest",{"_index":2143,"title":{},"name":{},"text":{"20":{},"25":{},"35":{},"50":{},"51":{}},"component":{}}],["latin",{"_index":3002,"title":{},"name":{},"text":{"64":{}},"component":{}}],["latter’",{"_index":676,"title":{},"name":{},"text":{"16":{}},"component":{}}],["launch",{"_index":212,"title":{},"name":{},"text":{"9":{}},"component":{}}],["layer",{"_index":3196,"title":{},"name":{},"text":{"75":{}},"component":{}}],["layout.builddirectory.dir(\"generated/pkl",{"_index":2679,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.builddirectory.dir(\"pkl",{"_index":2651,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.builddirectory.dir(\"pkldoc",{"_index":2698,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.builddirectory.dir(\"report",{"_index":2662,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.builddirectory.file(\"module1.yaml",{"_index":2596,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.dir(\"output",{"_index":2610,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.dir(\"pkl",{"_index":2627,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.dir(\"src/main/pkl",{"_index":2680,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.file(\"%{moduledir}/output",{"_index":2611,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.file(\"config.yaml",{"_index":2606,"title":{},"name":{},"text":{"28":{}},"component":{}}],["layout.projectdirectory.file(\"mysettings.pkl",{"_index":2634,"title":{},"name":{},"text":{"28":{}},"component":{}}],["laysegg",{"_index":1274,"title":{},"name":{},"text":{"20":{}},"component":{}}],["lazi",{"_index":1214,"title":{},"name":{},"text":{"20":{}},"component":{}}],["lazili",{"_index":1118,"title":{},"name":{},"text":{"20":{}},"component":{}}],["lead",{"_index":993,"title":{},"name":{},"text":{"20":{}},"component":{}}],["leading/clos",{"_index":1004,"title":{},"name":{},"text":{"20":{}},"component":{}}],["leaf",{"_index":646,"title":{},"name":{},"text":{"16":{}},"component":{}}],["learn",{"_index":241,"title":{},"name":{},"text":{"9":{},"11":{},"20":{},"21":{},"22":{},"25":{},"75":{}},"component":{}}],["leav",{"_index":354,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["left",{"_index":1922,"title":{},"name":{},"text":{"20":{},"35":{}},"component":{}}],["legaci",{"_index":1855,"title":{},"name":{},"text":{"20":{}},"component":{}}],["legal",{"_index":2044,"title":{},"name":{},"text":{"20":{}},"component":{}}],["length",{"_index":1724,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["less",{"_index":230,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["let'",{"_index":1955,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["letter",{"_index":2031,"title":{},"name":{},"text":{"20":{},"23":{},"64":{},"69":{},"75":{}},"component":{}}],["let’",{"_index":317,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"25":{},"26":{},"27":{},"36":{}},"component":{}}],["level",{"_index":510,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"32":{},"75":{}},"component":{}}],["lexic",{"_index":1261,"title":{},"name":{},"text":{"20":{}},"component":{}}],["libc",{"_index":2428,"title":{},"name":{},"text":{"25":{}},"component":{}}],["librari",{"_index":51,"title":{"7":{},"16":{},"19":{},"26":{},"14-3":{},"14-9":{},"17-3":{},"17-9":{},"20-50":{},"27-5":{},"27-13":{}},"name":{"7":{}},"text":{"2":{},"5":{},"7":{},"9":{},"10":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"35":{},"43":{},"63":{},"68":{},"73":{},"75":{}},"component":{}}],["library’",{"_index":85,"title":{},"name":{},"text":{"6":{},"16":{},"19":{},"20":{},"26":{}},"component":{}}],["libstdc",{"_index":2426,"title":{},"name":{},"text":{"25":{}},"component":{}}],["lifecycl",{"_index":3017,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["lifespan",{"_index":1226,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["lifetim",{"_index":3020,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["lift",{"_index":1946,"title":{},"name":{},"text":{"20":{}},"component":{}}],["likewis",{"_index":1571,"title":{},"name":{},"text":{"20":{},"67":{},"73":{}},"component":{}}],["limit",{"_index":153,"title":{},"name":{},"text":{"9":{},"27":{},"43":{},"69":{}},"component":{}}],["line",{"_index":33,"title":{"32-18":{},"32-26":{},"32-35":{}},"name":{},"text":{"2":{},"10":{},"12":{},"14":{},"17":{},"20":{},"22":{},"25":{},"27":{},"32":{},"40":{}},"component":{}}],["line/block",{"_index":2872,"title":{},"name":{},"text":{"40":{}},"component":{}}],["linear",{"_index":3180,"title":{},"name":{},"text":{"75":{}},"component":{}}],["link",{"_index":15,"title":{"20-123":{}},"name":{},"text":{"2":{},"20":{},"22":{},"25":{},"27":{}},"component":{}}],["links:[9",{"_index":2089,"title":{},"name":{},"text":{"20":{}},"component":{}}],["linux",{"_index":2414,"title":{"25-4":{},"25-5":{}},"name":{},"text":{"25":{},"73":{}},"component":{}}],["linux/aarch64",{"_index":3167,"title":{},"name":{},"text":{"73":{}},"component":{}}],["linux/amd64",{"_index":3168,"title":{},"name":{},"text":{"73":{}},"component":{}}],["list",{"_index":125,"title":{"20-24":{},"20-25":{},"20-26":{},"20-28":{},"20-86":{}},"name":{},"text":{"9":{},"11":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"36":{},"39":{},"64":{},"69":{},"75":{}},"component":{}}],["list'",{"_index":1343,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\"mic",{"_index":1691,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\"pigeon",{"_index":1380,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\"pigeon@example.com",{"_index":1789,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\"robin",{"_index":2123,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\"se",{"_index":1688,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(0",{"_index":1784,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["list(1",{"_index":1722,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["list(2",{"_index":1736,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(3",{"_index":1726,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(4",{"_index":1737,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(43",{"_index":1919,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(5",{"_index":1727,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(\\\"swim",{"_index":2520,"title":{},"name":{},"text":{"26":{}},"component":{}}],["list(diets[2",{"_index":1689,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list(pair(\"pigeon",{"_index":1696,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.contains(3",{"_index":1730,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.drop(1).take(2",{"_index":1734,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.first",{"_index":1731,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.map((n",{"_index":1735,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.rest",{"_index":1732,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list.revers",{"_index":1733,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list1",{"_index":1720,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list2",{"_index":1721,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list3",{"_index":1723,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list[2",{"_index":1729,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listel",{"_index":1728,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listen",{"_index":3088,"title":{},"name":{},"text":{"67":{},"73":{},"75":{}},"component":{}}],["listing'",{"_index":1366,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listing(isdistinct",{"_index":1368,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listing(isdistinctby((it",{"_index":1371,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listing.default",{"_index":1939,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listing’",{"_index":1317,"title":{},"name":{},"text":{"20":{}},"component":{}}],["listproperti",{"_index":2615,"title":{},"name":{},"text":{"28":{}},"component":{}}],["list|bird",{"_index":1842,"title":{},"name":{},"text":{"20":{}},"component":{}}],["list’",{"_index":1718,"title":{},"name":{},"text":{"20":{}},"component":{}}],["liter",{"_index":682,"title":{"20-99":{}},"name":{},"text":{"16":{},"20":{},"21":{},"32":{},"40":{},"64":{}},"component":{}}],["littl",{"_index":158,"title":{},"name":{},"text":{"9":{}},"component":{}}],["live",{"_index":336,"title":{},"name":{},"text":{"11":{},"20":{},"23":{},"25":{},"28":{}},"component":{}}],["load",{"_index":560,"title":{"25-24":{}},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{},"43":{},"65":{}},"component":{}}],["loadabl",{"_index":565,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["loader",{"_index":1480,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["loadfrom(evaluator:sourc",{"_index":3117,"title":{},"name":{},"text":{"70":{}},"component":{}}],["loadfrom(sourc",{"_index":3116,"title":{},"name":{},"text":{"70":{}},"component":{}}],["loadfrompath",{"_index":3022,"title":{},"name":{},"text":{"65":{}},"component":{}}],["local",{"_index":167,"title":{"20-21":{},"20-138":{}},"name":{},"text":{"9":{},"11":{},"20":{},"22":{},"25":{},"28":{},"32":{},"43":{},"58":{},"67":{},"73":{},"75":{}},"component":{}}],["localhost",{"_index":3096,"title":{},"name":{},"text":{"67":{},"73":{},"75":{}},"component":{}}],["localhost.pkl",{"_index":3216,"title":{},"name":{},"text":{"75":{}},"component":{}}],["locat",{"_index":169,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{},"43":{},"46":{},"47":{},"64":{}},"component":{}}],["log",{"_index":3061,"title":{},"name":{},"text":{"65":{}},"component":{}}],["logic",{"_index":934,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["london",{"_index":2998,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["lone",{"_index":1860,"title":{},"name":{},"text":{"20":{}},"component":{}}],["long",{"_index":2804,"title":{},"name":{},"text":{"32":{},"75":{}},"component":{}}],["longer",{"_index":670,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"26":{},"32":{}},"component":{}}],["look",{"_index":1144,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"64":{},"67":{},"75":{}},"component":{}}],["loop",{"_index":299,"title":{},"name":{},"text":{"10":{},"20":{},"25":{},"75":{}},"component":{}}],["lot",{"_index":416,"title":{},"name":{},"text":{"11":{}},"component":{}}],["love",{"_index":2,"title":{},"name":{},"text":{"1":{}},"component":{}}],["low",{"_index":2578,"title":{},"name":{},"text":{"27":{},"75":{}},"component":{}}],["lower",{"_index":511,"title":{},"name":{},"text":{"14":{},"17":{},"23":{}},"component":{}}],["lowest",{"_index":1563,"title":{},"name":{},"text":{"20":{}},"component":{}}],["lua",{"_index":2929,"title":{},"name":{},"text":{"58":{}},"component":{}}],["lunch",{"_index":2796,"title":{},"name":{},"text":{"32":{}},"component":{}}],["lunchhour",{"_index":2801,"title":{},"name":{},"text":{"32":{}},"component":{}}],["m",{"_index":1604,"title":{},"name":{},"text":{"20":{},"25":{},"27":{}},"component":{}}],["ma",{"_index":2876,"title":{},"name":{},"text":{"40":{}},"component":{}}],["macaw",{"_index":2287,"title":{},"name":{},"text":{"22":{}},"component":{}}],["machin",{"_index":3078,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["maco",{"_index":2413,"title":{"25-3":{}},"name":{},"text":{"25":{},"67":{},"73":{}},"component":{}}],["macos.bin",{"_index":3077,"title":{},"name":{},"text":{"67":{}},"component":{}}],["made",{"_index":1199,"title":{},"name":{},"text":{"20":{}},"component":{}}],["madeupbird",{"_index":1183,"title":{},"name":{},"text":{"20":{}},"component":{}}],["madeupbird'",{"_index":1187,"title":{},"name":{},"text":{"20":{}},"component":{}}],["madeupbird.adultweightingram",{"_index":1185,"title":{},"name":{},"text":{"20":{}},"component":{}}],["main",{"_index":10,"title":{},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"26":{},"28":{},"36":{},"65":{},"66":{},"67":{},"70":{},"72":{},"73":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{}}}],["main.go",{"_index":3047,"title":{},"name":{},"text":{"65":{}},"component":{}}],["main.swift",{"_index":3135,"title":{},"name":{},"text":{"70":{}},"component":{}}],["maintain",{"_index":323,"title":{},"name":{},"text":{"11":{},"13":{},"20":{},"65":{},"70":{},"75":{}},"component":{}}],["maintian",{"_index":459,"title":{},"name":{},"text":{"13":{}},"component":{}}],["make",{"_index":226,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"14":{},"19":{},"20":{},"22":{},"25":{},"28":{},"32":{},"75":{}},"component":{}}],["makepackag",{"_index":2699,"title":{},"name":{},"text":{"28":{}},"component":{}}],["malici",{"_index":368,"title":{},"name":{},"text":{"11":{}},"component":{}}],["manag",{"_index":1469,"title":{},"name":{},"text":{"20":{},"26":{},"39":{},"58":{},"65":{},"70":{},"75":{}},"component":{}}],["mandatori",{"_index":1715,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mani",{"_index":218,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"16":{},"20":{},"21":{},"32":{},"75":{}},"component":{}}],["manipul",{"_index":172,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["manual",{"_index":12,"title":{"2":{}},"name":{},"text":{"10":{},"13":{},"25":{}},"component":{}}],["map",{"_index":301,"title":{"16-6":{},"20-32":{},"20-33":{},"20-34":{},"20-36":{},"20-88":{},"64-5":{}},"name":{},"text":{"10":{},"16":{},"17":{},"20":{},"21":{},"23":{},"25":{},"28":{},"43":{},"64":{},"69":{}},"component":{}}],["map'",{"_index":1206,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(\"pigeon",{"_index":1759,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(\"robin",{"_index":2129,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(1",{"_index":1752,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(2",{"_index":1757,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(4",{"_index":1758,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(length",{"_index":1895,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map(new",{"_index":1754,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map.containskey(\"parrot",{"_index":1762,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map.containsvalue(8.gb",{"_index":1763,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map.getornull(\"falcon",{"_index":1766,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map.isempti",{"_index":1764,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map.length",{"_index":1765,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map1",{"_index":1750,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map2",{"_index":1751,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map3",{"_index":1753,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map[\"parrot",{"_index":1761,"title":{},"name":{},"text":{"20":{}},"component":{}}],["map[k]v",{"_index":2972,"title":{},"name":{},"text":{"64":{}},"component":{}}],["map[string]str",{"_index":3279,"title":{},"name":{},"text":{"75":{}},"component":{}}],["map[t]struct",{"_index":2973,"title":{},"name":{},"text":{"64":{}},"component":{}}],["mapkeys((key",{"_index":1390,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mapping.default",{"_index":1940,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mapping’",{"_index":1375,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mapproperti",{"_index":2637,"title":{},"name":{},"text":{"28":{}},"component":{}}],["map’",{"_index":1748,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mark",{"_index":1827,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["markdown",{"_index":2049,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["marker",{"_index":1845,"title":{},"name":{},"text":{"20":{}},"component":{}}],["marketplac",{"_index":2870,"title":{},"name":{},"text":{"39":{}},"component":{}}],["markup",{"_index":2076,"title":{},"name":{},"text":{"20":{}},"component":{}}],["match",{"_index":561,"title":{"52":{}},"name":{"52":{}},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{},"32":{},"54":{},"65":{},"70":{},"75":{}},"component":{}}],["matches.drop(1).map((it",{"_index":1780,"title":{},"name":{},"text":{"20":{}},"component":{}}],["matches[0",{"_index":1787,"title":{},"name":{},"text":{"20":{}},"component":{}}],["math.pi",{"_index":1512,"title":{},"name":{},"text":{"20":{}},"component":{}}],["matter",{"_index":2367,"title":{},"name":{},"text":{"23":{}},"component":{}}],["maven",{"_index":307,"title":{"14-5":{},"16-3":{},"17-5":{},"19-3":{},"26-3":{},"27-7":{},"35-2":{}},"name":{},"text":{"10":{},"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"28":{},"35":{}},"component":{}}],["maxfinitefloat",{"_index":2548,"title":{},"name":{},"text":{"27":{}},"component":{}}],["maximum",{"_index":1815,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mayb",{"_index":3183,"title":{},"name":{},"text":{"75":{}},"component":{}}],["mb",{"_index":1592,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mean",{"_index":956,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"32":{},"75":{}},"component":{}}],["meant",{"_index":1283,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["mebibyt",{"_index":1093,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mechan",{"_index":2256,"title":{},"name":{},"text":{"22":{},"34":{}},"component":{}}],["meet",{"_index":1246,"title":{},"name":{},"text":{"20":{}},"component":{}}],["megabyt",{"_index":1079,"title":{},"name":{},"text":{"20":{}},"component":{}}],["member",{"_index":103,"title":{"20-114":{},"20-123":{},"21-6":{},"25-27":{},"27-2":{},"32-12":{},"32-28":{}},"name":{},"text":{"7":{},"20":{},"21":{},"25":{},"27":{},"32":{},"64":{},"69":{}},"component":{}}],["member’",{"_index":2074,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["memori",{"_index":338,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["mention",{"_index":745,"title":{},"name":{},"text":{"17":{},"27":{}},"component":{}}],["merg",{"_index":843,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["merit",{"_index":3177,"title":{},"name":{},"text":{"75":{}},"component":{}}],["messag",{"_index":349,"title":{},"name":{},"text":{"11":{},"13":{},"20":{},"22":{},"23":{},"65":{},"70":{}},"component":{}}],["metadata",{"_index":1463,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["metadata.nam",{"_index":2462,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["metadata.name.tostr",{"_index":2465,"title":{},"name":{},"text":{"25":{}},"component":{}}],["method",{"_index":101,"title":{"20-41":{},"20-72":{},"20-130":{},"32-31":{}},"name":{},"text":{"7":{},"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"40":{},"44":{},"65":{},"70":{}},"component":{}}],["method[5",{"_index":1719,"title":{},"name":{},"text":{"20":{}},"component":{}}],["method’",{"_index":2090,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mff",{"_index":2547,"title":{},"name":{},"text":{"27":{}},"component":{}}],["mice",{"_index":1334,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["micebarnowl",{"_index":1936,"title":{},"name":{},"text":{"20":{}},"component":{}}],["microsecond",{"_index":1028,"title":{},"name":{},"text":{"20":{}},"component":{}}],["middl",{"_index":436,"title":{},"name":{},"text":{"12":{}},"component":{}}],["migrat",{"_index":2387,"title":{},"name":{},"text":{"23":{}},"component":{}}],["migratori",{"_index":1227,"title":{},"name":{},"text":{"20":{}},"component":{}}],["millisecond",{"_index":1031,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mimic",{"_index":3133,"title":{},"name":{},"text":{"70":{}},"component":{}}],["mimick",{"_index":3045,"title":{},"name":{},"text":{"65":{}},"component":{}}],["min",{"_index":2545,"title":{},"name":{},"text":{"27":{}},"component":{}}],["minfinitefloat",{"_index":2541,"title":{},"name":{},"text":{"27":{}},"component":{}}],["minimum",{"_index":249,"title":{},"name":{},"text":{"9":{},"20":{},"22":{}},"component":{}}],["minor",{"_index":953,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["minpklvers",{"_index":2765,"title":{},"name":{},"text":{"32":{}},"component":{}}],["minu",{"_index":880,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["minut",{"_index":1036,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["mismatch",{"_index":1829,"title":{},"name":{},"text":{"20":{}},"component":{}}],["miss",{"_index":1281,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["misspel",{"_index":1405,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mistak",{"_index":228,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["mix",{"_index":2188,"title":{"21-6":{}},"name":{},"text":{"21":{}},"component":{}}],["mixedobject",{"_index":2226,"title":{},"name":{},"text":{"21":{}},"component":{}}],["mixedobject.pkl",{"_index":2225,"title":{},"name":{},"text":{"21":{}},"component":{}}],["mixin",{"_index":816,"title":{"20-107":{}},"name":{},"text":{"20":{}},"component":{}}],["mod1.pkl",{"_index":2482,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mod2.pkl",{"_index":2481,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mod3.pkl",{"_index":2483,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mode",{"_index":1672,"title":{"65-5":{},"70-5":{}},"name":{},"text":{"20":{}},"component":{}}],["model",{"_index":339,"title":{},"name":{},"text":{"11":{},"20":{},"64":{},"69":{}},"component":{}}],["modern",{"_index":252,"title":{},"name":{},"text":{"9":{},"13":{},"75":{}},"component":{}}],["modifi",{"_index":783,"title":{"20-19":{}},"name":{},"text":{"20":{},"28":{}},"component":{}}],["modul",{"_index":89,"title":{"20-42":{},"20-44":{},"20-45":{},"20-48":{},"20-55":{},"20-56":{},"20-57":{},"20-58":{},"20-63":{},"20-67":{},"20-94":{},"21-2":{},"22-3":{},"25-21":{},"25-24":{},"27-10":{},"28-2":{},"32-4":{},"32-6":{},"32-9":{},"32-10":{},"37-2":{},"43-2":{},"65-2":{},"70-2":{}},"name":{},"text":{"7":{},"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"40":{},"43":{},"64":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["module.get(\"pigeon",{"_index":2523,"title":{},"name":{},"text":{"26":{}},"component":{}}],["module.pigeon",{"_index":2086,"title":{},"name":{},"text":{"20":{}},"component":{}}],["module.pkl",{"_index":2758,"title":{},"name":{},"text":{"32":{}},"component":{}}],["module1.pkl",{"_index":1502,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["module2.pkl",{"_index":1503,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["module2_test.pkl",{"_index":2660,"title":{},"name":{},"text":{"28":{}},"component":{}}],["module`.somememb",{"_index":1517,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulecachedir",{"_index":2650,"title":{},"name":{},"text":{"28":{}},"component":{}}],["modulecachedir.filevalu",{"_index":2652,"title":{},"name":{},"text":{"28":{}},"component":{}}],["moduledir",{"_index":2452,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["moduleinfo",{"_index":2763,"title":{},"name":{},"text":{"32":{}},"component":{}}],["modulekey",{"_index":1550,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulekeyfactori",{"_index":2531,"title":{},"name":{},"text":{"26":{}},"component":{}}],["modulenam",{"_index":2453,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["moduleoutputsepar",{"_index":2607,"title":{},"name":{},"text":{"28":{}},"component":{}}],["modulepath",{"_index":593,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"43":{}},"component":{}}],["modulepath.from",{"_index":2655,"title":{},"name":{},"text":{"28":{}},"component":{}}],["modulepath:/**.pkl",{"_index":2033,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulepath:/animals/birds/parrot.pkl",{"_index":1474,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulepath:/animals/birds/pigeon.pkl",{"_index":1473,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulepath:/appconfig.pkl",{"_index":2841,"title":{},"name":{},"text":{"36":{}},"component":{}}],["modulepath:/foo.pkl",{"_index":2771,"title":{},"name":{},"text":{"32":{}},"component":{}}],["modulepath:/foo/bar.pkl",{"_index":2885,"title":{},"name":{},"text":{"43":{}},"component":{}}],["modulepath:/path/to/my_module.pkl",{"_index":1447,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modules/pigeon.pkl",{"_index":1508,"title":{},"name":{},"text":{"20":{}},"component":{}}],["moduleschema",{"_index":2056,"title":{},"name":{},"text":{"20":{}},"component":{}}],["modulesourc",{"_index":2527,"title":{},"name":{},"text":{"26":{}},"component":{}}],["modulesource.text(\"pigeon",{"_index":2519,"title":{},"name":{},"text":{"26":{}},"component":{}}],["module’",{"_index":1162,"title":{},"name":{},"text":{"20":{},"25":{},"26":{},"27":{},"28":{},"64":{},"65":{},"70":{}},"component":{}}],["monorepo",{"_index":2164,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["more",{"_index":79,"title":{},"name":{},"text":{"6":{},"11":{},"14":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"32":{},"36":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["mostli",{"_index":2010,"title":{},"name":{},"text":{"20":{}},"component":{}}],["mountain",{"_index":2243,"title":{},"name":{},"text":{"21":{}},"component":{}}],["move",{"_index":1138,"title":{},"name":{},"text":{"20":{},"23":{},"25":{}},"component":{}}],["mozart",{"_index":1972,"title":{},"name":{},"text":{"20":{}},"component":{}}],["much",{"_index":2209,"title":{},"name":{},"text":{"21":{},"25":{},"34":{}},"component":{}}],["mul3",{"_index":1923,"title":{},"name":{},"text":{"20":{}},"component":{}}],["multi",{"_index":1900,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["multilin",{"_index":778,"title":{"20-8":{},"32-31":{},"32-32":{},"32-36":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["multipl",{"_index":149,"title":{"20-66":{},"65-6":{},"70-6":{}},"name":{},"text":{"9":{},"11":{},"14":{},"16":{},"17":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"64":{},"65":{},"70":{},"75":{}},"component":{}}],["multiplefileoutputdir",{"_index":2608,"title":{},"name":{},"text":{"28":{}},"component":{}}],["multipli",{"_index":1901,"title":{},"name":{},"text":{"20":{}},"component":{}}],["musl",{"_index":2427,"title":{},"name":{},"text":{"25":{}},"component":{}}],["mutabl",{"_index":3191,"title":{},"name":{},"text":{"75":{}},"component":{}}],["mutual",{"_index":2450,"title":{},"name":{},"text":{"25":{}},"component":{}}],["my/file/bar11.pkl",{"_index":2774,"title":{},"name":{},"text":{"32":{}},"component":{}}],["my/file/bar2.pkl",{"_index":2773,"title":{},"name":{},"text":{"32":{}},"component":{}}],["my_appl",{"_index":3009,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["my_module.pkl",{"_index":1465,"title":{},"name":{},"text":{"20":{}},"component":{}}],["my_var=myvalu",{"_index":583,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["my_var_1",{"_index":2638,"title":{},"name":{},"text":{"28":{}},"component":{}}],["my_var_2",{"_index":2640,"title":{},"name":{},"text":{"28":{}},"component":{}}],["myapp",{"_index":3148,"title":{},"name":{},"text":{"72":{},"75":{}},"component":{}}],["myapplic",{"_index":3010,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["mybar",{"_index":3131,"title":{},"name":{},"text":{"70":{}},"component":{}}],["myclass",{"_index":2777,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myclass(_nam",{"_index":2776,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myconfig",{"_index":3036,"title":{},"name":{},"text":{"65":{}},"component":{}}],["myconfig.loadfrom(sourc",{"_index":3149,"title":{},"name":{},"text":{"72":{}},"component":{}}],["myconfig.loadfrompath(context.background",{"_index":3071,"title":{},"name":{},"text":{"66":{}},"component":{}}],["myconfig.pkl",{"_index":3030,"title":{},"name":{},"text":{"65":{},"75":{}},"component":{}}],["mycoolappl",{"_index":3008,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["mydeployment.pkl",{"_index":2753,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myfiles.pkl",{"_index":2457,"title":{},"name":{},"text":{"25":{}},"component":{}}],["myfoo",{"_index":2785,"title":{},"name":{},"text":{"32":{},"70":{}},"component":{}}],["myfoo1",{"_index":2788,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myfoo2",{"_index":2789,"title":{},"name":{},"text":{"32":{}},"component":{}}],["mymodul",{"_index":2762,"title":{},"name":{},"text":{"32":{}},"component":{}}],["mymodule.pkl",{"_index":1561,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["mynewpipelin",{"_index":2324,"title":{},"name":{},"text":{"22":{}},"component":{}}],["mynum",{"_index":2814,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myobject[42",{"_index":2210,"title":{},"name":{},"text":{"21":{}},"component":{}}],["myorg.myteam.appconfig",{"_index":3084,"title":{},"name":{},"text":{"67":{}},"component":{}}],["myotherfoo",{"_index":2786,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myothermodule.pkl",{"_index":2784,"title":{},"name":{},"text":{"32":{}},"component":{}}],["mypackag",{"_index":2154,"title":{},"name":{},"text":{"20":{}},"component":{}}],["myprop1",{"_index":2648,"title":{},"name":{},"text":{"28":{}},"component":{}}],["myprop2",{"_index":2649,"title":{},"name":{},"text":{"28":{}},"component":{}}],["myprop=myvalu",{"_index":598,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["mysettings.pkl",{"_index":607,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["mystr",{"_index":2808,"title":{},"name":{},"text":{"32":{}},"component":{}}],["myvalu",{"_index":1676,"title":{},"name":{},"text":{"20":{}},"component":{}}],["myvalue1",{"_index":2639,"title":{},"name":{},"text":{"28":{}},"component":{}}],["myvalue2",{"_index":2641,"title":{},"name":{},"text":{"28":{}},"component":{}}],["n",{"_index":957,"title":{},"name":{},"text":{"20":{},"25":{},"64":{}},"component":{}}],["na",{"_index":2877,"title":{},"name":{},"text":{"40":{}},"component":{}}],["name",{"_index":479,"title":{"20-44":{},"20-124":{},"32-6":{},"32-21":{},"37-5":{},"64-11":{},"69-6":{}},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"40":{},"64":{},"65":{},"67":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["name)\\(separ",{"_index":1263,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name.ifnonnull((it",{"_index":1635,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name.rev",{"_index":2878,"title":{},"name":{},"text":{"40":{}},"component":{}}],["name2",{"_index":1618,"title":{},"name":{},"text":{"20":{},"40":{}},"component":{}}],["name2.ifnonnull((it",{"_index":1641,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2?.length",{"_index":1632,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2?.touppercas",{"_index":1634,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2length",{"_index":1631,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2nonnul",{"_index":1619,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2orparrot",{"_index":1621,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2upp",{"_index":1633,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name2withtitl",{"_index":1640,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name=valu",{"_index":1649,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name?.length",{"_index":1628,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name?.touppercas",{"_index":1630,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nameandlifespaninindex",{"_index":1250,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nameandlifespaninindex.length",{"_index":1253,"title":{},"name":{},"text":{"20":{}},"component":{}}],["named(\"databas",{"_index":3298,"title":{},"name":{},"text":{"75":{}},"component":{}}],["named(\"dbnam",{"_index":3306,"title":{},"name":{},"text":{"75":{}},"component":{}}],["named(\"environ",{"_index":3297,"title":{},"name":{},"text":{"75":{}},"component":{}}],["named(\"host",{"_index":3305,"title":{},"name":{},"text":{"75":{}},"component":{}}],["named(\"password",{"_index":3304,"title":{},"name":{},"text":{"75":{}},"component":{}}],["named(\"port",{"_index":3296,"title":{},"name":{},"text":{"75":{}},"component":{}}],["namelength",{"_index":1627,"title":{},"name":{},"text":{"20":{}},"component":{}}],["namenonnul",{"_index":1617,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nameorparrot",{"_index":1620,"title":{},"name":{},"text":{"20":{}},"component":{}}],["namerequiresbranchnam",{"_index":2300,"title":{},"name":{},"text":{"22":{}},"component":{}}],["names.[12",{"_index":2115,"title":{},"name":{},"text":{"20":{}},"component":{}}],["namesandlifespan",{"_index":1980,"title":{},"name":{},"text":{"20":{}},"component":{}}],["namesignwidth",{"_index":1251,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nameupp",{"_index":1629,"title":{},"name":{},"text":{"20":{}},"component":{}}],["namewithtitl",{"_index":1638,"title":{},"name":{},"text":{"20":{}},"component":{}}],["name},omitempti",{"_index":2964,"title":{},"name":{},"text":{"64":{}},"component":{}}],["namw",{"_index":1408,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nan",{"_index":915,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nanosecond",{"_index":1024,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nativ",{"_index":264,"title":{},"name":{},"text":{"9":{},"13":{},"25":{},"27":{}},"component":{}}],["natur",{"_index":1942,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["navig",{"_index":260,"title":{"37-3":{},"43-1":{}},"name":{"43":{}},"text":{"9":{},"10":{},"16":{},"19":{},"27":{},"43":{},"46":{},"47":{},"75":{}},"component":{}}],["nearli",{"_index":2264,"title":{},"name":{},"text":{"22":{}},"component":{}}],["necessari",{"_index":407,"title":{},"name":{},"text":{"11":{},"20":{},"32":{},"36":{}},"component":{}}],["need",{"_index":107,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"58":{},"67":{},"73":{},"75":{}},"component":{}}],["neg",{"_index":879,"title":{},"name":{},"text":{"20":{}},"component":{}}],["negat",{"_index":946,"title":{},"name":{},"text":{"20":{}},"component":{}}],["negativeinfin",{"_index":917,"title":{},"name":{},"text":{"20":{}},"component":{}}],["neovim",{"_index":117,"title":{"57":{}},"name":{},"text":{"8":{},"57":{},"58":{},"60":{},"75":{}},"component":{"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{}}}],["neovim.git",{"_index":2927,"title":{},"name":{},"text":{"58":{}},"component":{}}],["ness",{"_index":1279,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nest",{"_index":1127,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"32":{},"70":{}},"component":{}}],["nestabl",{"_index":165,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["nestedamends.pkl",{"_index":2269,"title":{},"name":{},"text":{"22":{}},"component":{}}],["network",{"_index":410,"title":{},"name":{},"text":{"11":{}},"component":{}}],["never",{"_index":718,"title":{},"name":{},"text":{"16":{},"17":{},"20":{},"22":{},"23":{}},"component":{}}],["nevertheless",{"_index":1373,"title":{},"name":{},"text":{"20":{}},"component":{}}],["new",{"_index":68,"title":{"23-3":{},"32-14":{},"32-15":{}},"name":{},"text":{"2":{},"11":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"32":{},"36":{},"39":{},"64":{},"67":{},"73":{},"75":{}},"component":{}}],["newbird",{"_index":1339,"title":{},"name":{},"text":{"20":{}},"component":{}}],["newbirds[1].diet",{"_index":1340,"title":{},"name":{},"text":{"20":{}},"component":{}}],["newest",{"_index":2149,"title":{},"name":{},"text":{"20":{}},"component":{}}],["newlin",{"_index":2769,"title":{},"name":{},"text":{"32":{}},"component":{}}],["newpet",{"_index":1998,"title":{},"name":{},"text":{"20":{}},"component":{}}],["newspeak",{"_index":2097,"title":{},"name":{},"text":{"20":{}},"component":{}}],["next",{"_index":2064,"title":{"75-6":{}},"name":{},"text":{"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"36":{},"40":{}},"component":{}}],["nil",{"_index":2969,"title":{},"name":{},"text":{"64":{},"65":{},"66":{},"67":{}},"component":{}}],["nix",{"_index":594,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["nobodi",{"_index":414,"title":{},"name":{},"text":{"11":{}},"component":{}}],["nocach",{"_index":2654,"title":{},"name":{},"text":{"28":{}},"component":{}}],["node",{"_index":647,"title":{},"name":{},"text":{"16":{}},"component":{}}],["noegip",{"_index":1392,"title":{},"name":{},"text":{"20":{}},"component":{}}],["non",{"_index":350,"title":{"20-69":{},"20-126":{}},"name":{},"text":{"11":{},"14":{},"20":{},"27":{},"28":{},"64":{},"69":{}},"component":{}}],["none",{"_index":597,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["nonnul",{"_index":800,"title":{"20-73":{}},"name":{},"text":{"20":{},"75":{}},"component":{}}],["noproject",{"_index":2632,"title":{},"name":{},"text":{"28":{}},"component":{}}],["normal",{"_index":990,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"27":{},"64":{}},"component":{}}],["notanumb",{"_index":914,"title":{},"name":{},"text":{"20":{}},"component":{}}],["notat",{"_index":765,"title":{"20-52":{}},"name":{},"text":{"19":{},"20":{},"21":{},"22":{},"23":{}},"component":{}}],["note",{"_index":66,"title":{"29":{},"31":{}},"name":{},"text":{"2":{},"14":{},"16":{},"17":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"30":{},"31":{},"32":{},"35":{}},"component":{}}],["noth",{"_index":809,"title":{"20-100":{}},"name":{},"text":{"20":{},"21":{},"22":{},"64":{}},"component":{}}],["nothing'",{"_index":1863,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nothing|\"san",{"_index":2999,"title":{},"name":{},"text":{"64":{}},"component":{}}],["notic",{"_index":992,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["notifi",{"_index":2871,"title":{},"name":{},"text":{"39":{},"73":{}},"component":{}}],["notnul",{"_index":1876,"title":{},"name":{},"text":{"20":{}},"component":{}}],["now",{"_index":232,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"22":{},"23":{},"47":{}},"component":{}}],["null",{"_index":542,"title":{"20-68":{},"20-69":{},"20-70":{},"20-71":{},"20-109":{}},"name":{},"text":{"14":{},"19":{},"20":{},"22":{},"28":{},"64":{}},"component":{}}],["null(new",{"_index":1870,"title":{},"name":{},"text":{"20":{}},"component":{}}],["null(pet",{"_index":1959,"title":{},"name":{},"text":{"20":{}},"component":{}}],["null(x",{"_index":1874,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nullabl",{"_index":771,"title":{"20-76":{},"20-96":{},"20-113":{}},"name":{},"text":{"19":{},"20":{}},"component":{}}],["nullish",{"_index":1873,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num",{"_index":1645,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["num1",{"_index":857,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num2",{"_index":859,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num3",{"_index":861,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num4",{"_index":863,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num5",{"_index":885,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num6",{"_index":886,"title":{},"name":{},"text":{"20":{}},"component":{}}],["num7",{"_index":888,"title":{},"name":{},"text":{"20":{}},"component":{}}],["number",{"_index":693,"title":{"20-2":{}},"name":{},"text":{"16":{},"20":{},"21":{},"32":{},"64":{},"69":{},"75":{}},"component":{}}],["number(isposit",{"_index":1926,"title":{},"name":{},"text":{"20":{}},"component":{}}],["numbers.tolist().map((num",{"_index":2820,"title":{},"name":{},"text":{"32":{}},"component":{}}],["numer",{"_index":849,"title":{},"name":{},"text":{"20":{}},"component":{}}],["nvim",{"_index":2924,"title":{},"name":{},"text":{"58":{}},"component":{}}],["nvm",{"_index":2916,"title":{},"name":{},"text":{"58":{}},"component":{}}],["o",{"_index":552,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"67":{},"69":{},"73":{}},"component":{}}],["obj",{"_index":1869,"title":{},"name":{},"text":{"20":{}},"component":{}}],["object",{"_index":170,"title":{"16-6":{},"20-13":{},"20-14":{},"20-15":{},"20-17":{},"20-18":{},"20-126":{},"20-133":{},"21-2":{},"23-2":{},"32-11":{},"32-15":{},"32-34":{}},"name":{},"text":{"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"26":{},"32":{},"41":{},"44":{},"46":{},"54":{},"59":{},"61":{},"75":{}},"component":{}}],["object[10",{"_index":2109,"title":{},"name":{},"text":{"20":{}},"component":{}}],["object[4",{"_index":1230,"title":{},"name":{},"text":{"20":{}},"component":{}}],["object’",{"_index":710,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["observ",{"_index":1268,"title":{},"name":{},"text":{"20":{}},"component":{}}],["obtain",{"_index":713,"title":{},"name":{},"text":{"16":{},"20":{}},"component":{}}],["occasion",{"_index":427,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["occup",{"_index":2378,"title":{},"name":{},"text":{"23":{}},"component":{}}],["occur",{"_index":1266,"title":{},"name":{},"text":{"20":{},"22":{},"65":{},"70":{}},"component":{}}],["octal",{"_index":856,"title":{},"name":{},"text":{"20":{}},"component":{}}],["odd",{"_index":3240,"title":{},"name":{},"text":{"75":{}},"component":{}}],["odod",{"_index":1017,"title":{},"name":{},"text":{"20":{}},"component":{}}],["oena",{"_index":2273,"title":{},"name":{},"text":{"22":{}},"component":{}}],["offend",{"_index":2315,"title":{},"name":{},"text":{"22":{}},"component":{}}],["offer",{"_index":152,"title":{},"name":{},"text":{"9":{},"13":{},"14":{},"16":{},"17":{},"20":{},"21":{},"23":{},"27":{},"28":{}},"component":{}}],["offset",{"_index":3222,"title":{},"name":{},"text":{"75":{}},"component":{}}],["okay",{"_index":1302,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["old",{"_index":1412,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["older",{"_index":2066,"title":{},"name":{},"text":{"20":{}},"component":{}}],["oldpet",{"_index":1999,"title":{},"name":{},"text":{"20":{}},"component":{}}],["oldpigeonnam",{"_index":1309,"title":{},"name":{},"text":{"20":{}},"component":{}}],["omit",{"_index":1249,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"28":{},"32":{},"67":{}},"component":{}}],["omitprojectset",{"_index":2631,"title":{},"name":{},"text":{"28":{}},"component":{}}],["on",{"_index":151,"title":{},"name":{},"text":{"9":{},"11":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"36":{},"64":{},"69":{},"75":{}},"component":{}}],["onc",{"_index":669,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"25":{},"26":{},"64":{},"67":{},"69":{},"73":{}},"component":{}}],["op",{"_index":2479,"title":{},"name":{},"text":{"25":{}},"component":{}}],["opaqu",{"_index":1662,"title":{},"name":{},"text":{"20":{}},"component":{}}],["open",{"_index":235,"title":{},"name":{},"text":{"9":{},"20":{},"25":{},"28":{},"32":{},"40":{},"51":{},"56":{},"64":{},"69":{},"75":{},"76":{}},"component":{}}],["oper",{"_index":796,"title":{"20-69":{},"32-29":{},"32-32":{}},"name":{},"text":{"20":{},"28":{},"32":{}},"component":{}}],["operand",{"_index":1616,"title":{},"name":{},"text":{"20":{}},"component":{}}],["option",{"_index":475,"title":{"14-11":{},"17-11":{},"25-9":{},"25-12":{},"25-15":{},"25-17":{},"25-19":{},"25-20":{},"27-15":{},"28-4":{},"28-9":{},"28-12":{},"28-15":{},"28-18":{},"28-21":{},"40-2":{},"65-8":{},"70-8":{}},"name":{},"text":{"14":{},"17":{},"20":{},"21":{},"25":{},"27":{},"28":{},"32":{},"42":{},"64":{},"65":{},"70":{},"75":{}},"component":{}}],["opts.logg",{"_index":3059,"title":{},"name":{},"text":{"65":{}},"component":{}}],["oracl",{"_index":2420,"title":{},"name":{},"text":{"25":{}},"component":{}}],["order",{"_index":423,"title":{},"name":{},"text":{"11":{},"20":{},"21":{},"22":{},"32":{}},"component":{}}],["order.[11",{"_index":2110,"title":{},"name":{},"text":{"20":{}},"component":{}}],["org.gradle.api.file.filesystemloc",{"_index":2621,"title":{},"name":{},"text":{"28":{}},"component":{}}],["org.pkl",{"_index":498,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"28":{},"35":{},"36":{}},"component":{}}],["org.pkl.codegen.java.clijavacodegener",{"_index":514,"title":{},"name":{},"text":{"14":{}},"component":{}}],["org.pkl.codegen.java.javacodegener",{"_index":515,"title":{},"name":{},"text":{"14":{}},"component":{}}],["org.pkl.codegen.java.main",{"_index":519,"title":{},"name":{},"text":{"14":{}},"component":{}}],["org.pkl.codegen.kotlin.clikotlincodegener",{"_index":742,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.pkl.codegen.kotlin.kotlincodegener",{"_index":743,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.pkl.codegen.kotlin.main",{"_index":746,"title":{},"name":{},"text":{"17":{}},"component":{}}],["org.pkl.config.java.mapper.nam",{"_index":537,"title":{},"name":{},"text":{"14":{},"28":{},"75":{}},"component":{}}],["org.pkl.config.java.mapper.nonnul",{"_index":543,"title":{},"name":{},"text":{"14":{},"75":{}},"component":{}}],["org.pkl.doc.main",{"_index":2580,"title":{},"name":{},"text":{"27":{}},"component":{}}],["org.pkl.testmode.pkl:pkl",{"_index":494,"title":{},"name":{},"text":{"14":{}},"component":{}}],["organ",{"_index":412,"title":{},"name":{},"text":{"11":{}},"component":{}}],["orient",{"_index":214,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["origin",{"_index":355,"title":{},"name":{},"text":{"11":{},"20":{},"43":{}},"component":{}}],["os",{"_index":580,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["osprey",{"_index":1293,"title":{},"name":{},"text":{"20":{}},"component":{}}],["other",{"_index":2408,"title":{},"name":{},"text":{"23":{}},"component":{}}],["other.pkl",{"_index":1493,"title":{},"name":{},"text":{"20":{}},"component":{}}],["othernam",{"_index":1272,"title":{},"name":{},"text":{"20":{}},"component":{}}],["otherwis",{"_index":348,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"25":{},"26":{},"28":{},"32":{},"43":{}},"component":{}}],["out",{"_index":440,"title":{"22":{}},"name":{},"text":{"13":{},"14":{},"17":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"32":{},"50":{},"57":{},"75":{}},"component":{}}],["out/%{name}@%{vers",{"_index":2478,"title":{},"name":{},"text":{"25":{}},"component":{}}],["outer",{"_index":1573,"title":{},"name":{},"text":{"20":{}},"component":{}}],["outermost",{"_index":2266,"title":{},"name":{},"text":{"22":{}},"component":{}}],["outgrow",{"_index":178,"title":{},"name":{},"text":{"9":{}},"component":{}}],["output",{"_index":384,"title":{"20-63":{},"20-66":{},"20-67":{},"65-6":{},"70-6":{}},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"64":{},"65":{},"70":{},"75":{}},"component":{}}],["output\".touppercas",{"_index":1602,"title":{},"name":{},"text":{"20":{}},"component":{}}],["output,[1",{"_index":2352,"title":{},"name":{},"text":{"23":{}},"component":{}}],["output.convert",{"_index":1599,"title":{},"name":{},"text":{"20":{}},"component":{}}],["output.fil",{"_index":1603,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"65":{},"70":{}},"component":{}}],["output.render",{"_index":1574,"title":{},"name":{},"text":{"20":{}},"component":{}}],["output.text",{"_index":1600,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"65":{},"70":{}},"component":{}}],["output.valu",{"_index":1572,"title":{},"name":{},"text":{"20":{}},"component":{}}],["output/birds/parrot.yaml",{"_index":1608,"title":{},"name":{},"text":{"20":{}},"component":{}}],["output/birds/pigeon.json",{"_index":1607,"title":{},"name":{},"text":{"20":{}},"component":{}}],["outputdir",{"_index":2678,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outputfil",{"_index":2595,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outputfile.set(layout.builddirectory.file(\"module1.yaml",{"_index":2599,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outputformat",{"_index":1567,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["outputformat.set(\"yaml",{"_index":2600,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outputpath",{"_index":2706,"title":{},"name":{},"text":{"28":{}},"component":{}}],["outsid",{"_index":361,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["outward",{"_index":2095,"title":{},"name":{},"text":{"20":{}},"component":{}}],["over",{"_index":155,"title":{},"name":{},"text":{"9":{},"11":{},"20":{},"25":{},"32":{},"43":{}},"component":{}}],["overal",{"_index":1433,"title":{},"name":{},"text":{"20":{}},"component":{}}],["overarch",{"_index":3202,"title":{},"name":{},"text":{"75":{}},"component":{}}],["overcom",{"_index":284,"title":{},"name":{},"text":{"9":{}},"component":{}}],["overflow",{"_index":897,"title":{},"name":{},"text":{"20":{}},"component":{}}],["overload",{"_index":2108,"title":{},"name":{},"text":{"20":{}},"component":{}}],["overrid",{"_index":408,"title":{},"name":{},"text":{"11":{},"20":{},"32":{},"75":{}},"component":{}}],["overridden",{"_index":1153,"title":{"32-13":{}},"name":{},"text":{"20":{},"25":{},"32":{}},"component":{}}],["overview",{"_index":2895,"title":{},"name":{},"text":{"50":{},"57":{}},"component":{}}],["overwrit",{"_index":2278,"title":{},"name":{},"text":{"22":{},"25":{},"28":{}},"component":{}}],["overwrite.set(fals",{"_index":2666,"title":{},"name":{},"text":{"28":{}},"component":{}}],["owl",{"_index":1332,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["owl\"|\"parrot",{"_index":1713,"title":{},"name":{},"text":{"20":{}},"component":{}}],["p",{"_index":596,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"40":{}},"component":{}}],["p:min",{"_index":2544,"title":{},"name":{},"text":{"27":{}},"component":{}}],["packag",{"_index":575,"title":{"20-49":{},"20-137":{},"25-14":{},"25-18":{},"27-11":{},"28-16":{},"64-5":{},"75-3":{}},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{},"36":{},"43":{},"64":{},"65":{},"66":{},"67":{},"73":{},"75":{}},"component":{}}],["package'",{"_index":2477,"title":{},"name":{},"text":{"25":{}},"component":{}}],["package(url",{"_index":3154,"title":{},"name":{},"text":{"73":{}},"component":{}}],["package.nam",{"_index":2575,"title":{},"name":{},"text":{"27":{}},"component":{}}],["package.sourcecod",{"_index":2576,"title":{},"name":{},"text":{"27":{}},"component":{}}],["package.swift",{"_index":3153,"title":{},"name":{},"text":{"73":{}},"component":{}}],["package://example.com/\\(nam",{"_index":2156,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/bird",{"_index":2169,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/birds@1.0.0",{"_index":2137,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/birds@1.0.0#/sparrow.pkl",{"_index":1513,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/fruit",{"_index":2173,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/mypackage@1.0.0",{"_index":2476,"title":{},"name":{},"text":{"25":{}},"component":{}}],["package://example.com/mypackage@1.0.0#/foo.pkl",{"_index":2772,"title":{},"name":{},"text":{"32":{}},"component":{}}],["package://example.com/mypackage@1.0.0#/my_module.pkl",{"_index":1456,"title":{},"name":{},"text":{"20":{}},"component":{}}],["package://example.com/package@1.0.0#/bar.pkl",{"_index":2886,"title":{},"name":{},"text":{"43":{}},"component":{}}],["package://pkg.pkl",{"_index":3085,"title":{},"name":{},"text":{"67":{},"69":{},"75":{}},"component":{}}],["package://pkl.pkl",{"_index":2947,"title":{},"name":{},"text":{"64":{}},"component":{}}],["packagemap",{"_index":2958,"title":{},"name":{},"text":{"64":{}},"component":{}}],["packagezipurl",{"_index":2158,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["package’",{"_index":1462,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"28":{}},"component":{}}],["page",{"_index":124,"title":{},"name":{},"text":{"9":{},"25":{},"27":{},"35":{}},"component":{}}],["painfulli",{"_index":3189,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pair",{"_index":1117,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["pair(\"barn",{"_index":1697,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pair(\"parrot",{"_index":1698,"title":{},"name":{},"text":{"20":{}},"component":{}}],["palumbu",{"_index":1402,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["pandion",{"_index":1294,"title":{},"name":{},"text":{"20":{}},"component":{}}],["panic(err",{"_index":3031,"title":{},"name":{},"text":{"65":{},"66":{},"67":{}},"component":{}}],["pantri",{"_index":3251,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pantry/io.toml@1.0.0",{"_index":3249,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pantry/io.toml@1.0.0#/toml.pkl",{"_index":3245,"title":{},"name":{},"text":{"75":{}},"component":{}}],["paragraph",{"_index":2062,"title":{},"name":{},"text":{"20":{},"27":{},"32":{}},"component":{}}],["param",{"_index":535,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["param1",{"_index":1897,"title":{},"name":{},"text":{"20":{}},"component":{}}],["param2",{"_index":1898,"title":{},"name":{},"text":{"20":{}},"component":{}}],["paramet",{"_index":541,"title":{},"name":{},"text":{"14":{},"16":{},"19":{},"20":{},"28":{},"40":{},"44":{}},"component":{}}],["parameter",{"_index":681,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{}}],["parameter’",{"_index":708,"title":{},"name":{},"text":{"16":{}},"component":{}}],["paramn",{"_index":1899,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parent",{"_index":1163,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["parentbird",{"_index":1410,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parenthes",{"_index":1148,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["parent’",{"_index":2991,"title":{},"name":{},"text":{"64":{}},"component":{}}],["park",{"_index":2241,"title":{},"name":{},"text":{"21":{}},"component":{}}],["parri",{"_index":1956,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parrot",{"_index":1161,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{}},"component":{}}],["parrot.output",{"_index":1611,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parrot.pkl",{"_index":1475,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["parrot@example.com",{"_index":1779,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parrotdiet",{"_index":1387,"title":{},"name":{},"text":{"20":{}},"component":{}}],["parrotvalu",{"_index":1760,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pars",{"_index":2815,"title":{},"name":{},"text":{"32":{}},"component":{}}],["parser",{"_index":2513,"title":{},"name":{},"text":{"26":{}},"component":{}}],["part",{"_index":689,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"22":{},"23":{},"27":{}},"component":{}}],["parti",{"_index":256,"title":{},"name":{},"text":{"9":{},"16":{},"20":{},"32":{}},"component":{}}],["partial",{"_index":2558,"title":{},"name":{},"text":{"27":{}},"component":{}}],["particular",{"_index":762,"title":{},"name":{},"text":{"19":{},"20":{},"23":{},"27":{},"36":{}},"component":{}}],["particularli",{"_index":2245,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["partytim",{"_index":2803,"title":{},"name":{},"text":{"32":{}},"component":{}}],["pascalcas",{"_index":2750,"title":{},"name":{},"text":{"32":{}},"component":{}}],["pass",{"_index":618,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"36":{},"65":{},"70":{}},"component":{}}],["password",{"_index":3213,"title":{},"name":{},"text":{"75":{}},"component":{}}],["path",{"_index":555,"title":{"20-48":{},"64-4":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"43":{},"64":{},"67":{},"73":{}},"component":{}}],["path(\"config.pkl",{"_index":3150,"title":{},"name":{},"text":{"72":{}},"component":{}}],["path(\"foo.pkl",{"_index":3129,"title":{},"name":{},"text":{"70":{}},"component":{}}],["path(\"my/module.pkl",{"_index":3137,"title":{},"name":{},"text":{"70":{}},"component":{}}],["path(\"myconfig.pkl",{"_index":3121,"title":{},"name":{},"text":{"70":{}},"component":{}}],["path/to/module/cach",{"_index":573,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["path/to/my_module.pkl",{"_index":1451,"title":{},"name":{},"text":{"20":{}},"component":{}}],["path/to/mymodule.pkl",{"_index":1482,"title":{},"name":{},"text":{"20":{}},"component":{}}],["path=%{moduledir}/%{modulename}.json",{"_index":2490,"title":{},"name":{},"text":{"25":{}},"component":{}}],["path=/pkl",{"_index":1484,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pattern",{"_index":558,"title":{"20-115":{},"20-118":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"65":{},"75":{}},"component":{}}],["pc[lf",{"_index":2023,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pcall(requir",{"_index":2932,"title":{},"name":{},"text":{"58":{}},"component":{}}],["pcf",{"_index":381,"title":{},"name":{},"text":{"11":{},"20":{},"23":{},"25":{},"28":{}},"component":{}}],["pcfrender",{"_index":1578,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["pcfrenderer.convert",{"_index":1596,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pebbl",{"_index":2282,"title":{},"name":{},"text":{"22":{}},"component":{}}],["pebibyt",{"_index":1099,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pem",{"_index":628,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["penguin",{"_index":1174,"title":{},"name":{},"text":{"20":{}},"component":{}}],["penguin.adultweightingram",{"_index":1180,"title":{},"name":{},"text":{"20":{}},"component":{}}],["per",{"_index":731,"title":{},"name":{},"text":{"16":{},"20":{},"32":{},"36":{},"64":{},"65":{},"70":{}},"component":{}}],["perform",{"_index":606,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["permit",{"_index":1494,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["perri",{"_index":1960,"title":{},"name":{},"text":{"20":{}},"component":{}}],["person",{"_index":2989,"title":{},"name":{},"text":{"64":{},"69":{},"75":{}},"component":{}}],["person#ag",{"_index":3234,"title":{},"name":{},"text":{"75":{}},"component":{}}],["person.pkl",{"_index":3230,"title":{},"name":{},"text":{"75":{}},"component":{}}],["personimpl",{"_index":2990,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["perspect",{"_index":2176,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pet",{"_index":1952,"title":{},"name":{},"text":{"20":{}},"component":{}}],["petabyt",{"_index":1088,"title":{},"name":{},"text":{"20":{}},"component":{}}],["phone",{"_index":3277,"title":{},"name":{},"text":{"75":{}},"component":{}}],["phonenumb",{"_index":3278,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pi",{"_index":1511,"title":{},"name":{},"text":{"20":{},"40":{}},"component":{}}],["pick",{"_index":2142,"title":{},"name":{},"text":{"20":{},"24":{}},"component":{}}],["pickl",{"_index":22,"title":{},"name":{},"text":{"2":{},"12":{},"75":{},"76":{}},"component":{}}],["pigeon",{"_index":654,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"25":{},"26":{}},"component":{}}],["pigeon\"'",{"_index":1389,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon\".contains(\"pigeon@example.com",{"_index":1773,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon\".contains(emailregex",{"_index":1774,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon\".revers",{"_index":1381,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon\"|\"barn",{"_index":1712,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon,parrot",{"_index":2019,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.get(\"age\").as(int.class",{"_index":662,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pigeon.get(\"diet\").as(javatype.listof(string.class",{"_index":664,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pigeon.get(\"hobbi",{"_index":2526,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pigeon.getclass",{"_index":1404,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.getclassinfo().getqualifiednam",{"_index":2525,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pigeon.greet(parrot",{"_index":1424,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.nam",{"_index":1509,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.nameandlifespaninindex",{"_index":1255,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.output",{"_index":1610,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.pkl",{"_index":1492,"title":{},"name":{},"text":{"20":{},"22":{},"25":{}},"component":{}}],["pigeon.separ",{"_index":1265,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon.todynam",{"_index":1257,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon@example.com",{"_index":1795,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon@example.com\".matches(emailregex",{"_index":1772,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon[\"age\"].to",{"_index":757,"title":{},"name":{},"text":{"19":{}},"component":{}}],["pigeon[\"diet\"].to",{"_index":759,"title":{},"name":{},"text":{"19":{}},"component":{}}],["pigeonandparrot.pkl",{"_index":1501,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeonclass",{"_index":1403,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeondynam",{"_index":1256,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeoninindex",{"_index":1254,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeonnam",{"_index":1297,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeonsepar",{"_index":1264,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeonshelt",{"_index":2219,"title":{},"name":{},"text":{"21":{}},"component":{}}],["pigeonwithdiet",{"_index":1928,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pigeon’",{"_index":2529,"title":{},"name":{},"text":{"26":{}},"component":{}}],["piggi",{"_index":1520,"title":{},"name":{},"text":{"20":{}},"component":{}}],["piggy.diet",{"_index":1521,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pipe",{"_index":1921,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["pipelin",{"_index":36,"title":{},"name":{},"text":{"2":{},"13":{},"22":{}},"component":{}}],["pizza",{"_index":2799,"title":{},"name":{},"text":{"32":{}},"component":{}}],["pkl",{"_index":20,"title":{"16":{},"19":{},"26":{},"29":{},"32":{},"75":{},"76":{},"9-1":{},"9-2":{},"9-3":{},"25-8":{},"25-10":{},"25-11":{},"25-13":{},"25-14":{},"25-16":{},"25-18":{},"64-7":{},"67-2":{},"67-4":{},"69-2":{},"73-2":{},"73-4":{},"75-1":{},"76-1":{}},"name":{"16":{},"19":{},"75":{}},"text":{"2":{},"7":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"42":{},"43":{},"47":{},"50":{},"51":{},"57":{},"58":{},"60":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"72":{},"73":{},"75":{},"76":{}},"component":{}}],["pkl.base",{"_index":97,"title":{},"name":{},"text":{"7":{},"20":{},"27":{}},"component":{}}],["pkl.base#collect",{"_index":728,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pkl.base#dynam",{"_index":2528,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pkl.base#int",{"_index":1439,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkl.base#module.output.text",{"_index":2237,"title":{},"name":{},"text":{"21":{},"22":{},"75":{}},"component":{}}],["pkl.base#nul",{"_index":1948,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkl.base#str",{"_index":725,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pkl.class",{"_index":2979,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.datas",{"_index":2976,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.docpackageinfo",{"_index":2567,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pkl.docsiteinfo",{"_index":2566,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pkl.durat",{"_index":2977,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.evalu",{"_index":2590,"title":{},"name":{},"text":{"28":{},"65":{}},"component":{}}],["pkl.evaluator.evaluatemodul",{"_index":3034,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.evaluatormanager.newevalu",{"_index":3015,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.evaluatormanager.newevalutor",{"_index":3019,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.filesource(\"foo.pkl",{"_index":3044,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.intseq",{"_index":2978,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.javacodegener",{"_index":2667,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pkl.json",{"_index":96,"title":{},"name":{},"text":{"7":{}},"component":{}}],["pkl.kotlincodegener",{"_index":2687,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pkl.math",{"_index":1472,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkl.moduleread",{"_index":3065,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.newevalu",{"_index":3014,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.newevaluator(context.background",{"_index":3039,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.object",{"_index":2975,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.pair",{"_index":2982,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.pair[a",{"_index":2974,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl.pkldocgener",{"_index":2691,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pkl.preconfiguredopt",{"_index":3040,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.reflect",{"_index":2055,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkl.resourceread",{"_index":3064,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.set",{"_index":609,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["pkl.spring.vers",{"_index":2833,"title":{},"name":{},"text":{"35":{}},"component":{}}],["pkl.stderrlogg",{"_index":3060,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.test",{"_index":2657,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pkl.textsource(\"foo",{"_index":3054,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl.typealia",{"_index":2980,"title":{},"name":{},"text":{"64":{}},"component":{}}],["pkl/appconfig.pkl",{"_index":3082,"title":{},"name":{},"text":{"67":{},"69":{},"73":{}},"component":{}}],["pkl/cacert",{"_index":2511,"title":{},"name":{},"text":{"25":{}},"component":{}}],["pkl/cach",{"_index":572,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["pkl/int/appconfig.pkl",{"_index":3094,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["pkl/local/appconfig.pkl",{"_index":3091,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["pkl/pkl",{"_index":629,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"27":{},"28":{}},"component":{}}],["pkl/prod/appconfig.pkl",{"_index":3095,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["pkl/settings.pkl",{"_index":608,"title":{},"name":{},"text":{"14":{},"17":{},"22":{},"25":{},"27":{},"28":{},"47":{}},"component":{}}],["pkl:\"address",{"_index":3273,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"badgeid",{"_index":3276,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"bar",{"_index":3038,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl:\"dbname",{"_index":3286,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"foo",{"_index":3037,"title":{},"name":{},"text":{"65":{}},"component":{}}],["pkl:\"host",{"_index":3284,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"name",{"_index":3272,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"password",{"_index":3283,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"phonenumb",{"_index":3280,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"port",{"_index":3285,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:\"usernam",{"_index":3282,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pkl:,file:,modulepath:,https:,repl:,package:,projectpackag",{"_index":556,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["pkl:base",{"_index":1515,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pkl:json",{"_index":95,"title":{},"name":{},"text":{"7":{},"43":{}},"component":{}}],["pkl:math",{"_index":1471,"title":{},"name":{},"text":{"20":{},"40":{}},"component":{}}],["pkl:project",{"_index":2136,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["pkl:set",{"_index":2500,"title":{},"name":{},"text":{"25":{},"47":{}},"component":{}}],["pkl_exec=jpkl",{"_index":3161,"title":{},"name":{},"text":{"73":{}},"component":{}}],["pkldoc",{"_index":113,"title":{"27":{},"28-13":{}},"name":{},"text":{"8":{},"10":{},"20":{},"27":{},"28":{}},"component":{}}],["pkldocgener",{"_index":2692,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pkldoc’",{"_index":2533,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pklexcept",{"_index":1680,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["pkllexer.g4",{"_index":2117,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pklparser.g4",{"_index":2118,"title":{},"name":{},"text":{"20":{}},"component":{}}],["pklproject",{"_index":2135,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"28":{},"75":{}},"component":{}}],["pklproject.deps.json",{"_index":2140,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["pklregisteredtyp",{"_index":3257,"title":{},"name":{},"text":{"75":{}},"component":{}}],["pklswift",{"_index":3159,"title":{},"name":{},"text":{"73":{},"75":{}},"component":{}}],["pklswift.datas",{"_index":3102,"title":{},"name":{},"text":{"69":{}},"component":{}}],["pklswift.dur",{"_index":3103,"title":{},"name":{},"text":{"69":{}},"component":{}}],["pklswift.evalu",{"_index":3113,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.evaluator.evaluateoutputtext(sourc",{"_index":3134,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.evaluatormanager.withevaluator(options:_",{"_index":3115,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.evaluatoropt",{"_index":3142,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.evaluatoroptions.empti",{"_index":3144,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.evaluatoroptions.preconfigur",{"_index":3143,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.moduleread",{"_index":3146,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.resourceread",{"_index":3145,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pklswift.withevaluator(options:_",{"_index":3114,"title":{},"name":{},"text":{"70":{}},"component":{}}],["pkltutorial.pkl",{"_index":2363,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialpart",{"_index":2365,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialpart1",{"_index":2355,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialpart2",{"_index":2357,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialpart3",{"_index":2358,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialpart3.pkl",{"_index":2339,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pkltutorialparts.pkl",{"_index":2353,"title":{},"name":{},"text":{"23":{}},"component":{}}],["pklversion",{"_index":2848,"title":{},"name":{},"text":{"36":{}},"component":{}}],["pkl’",{"_index":82,"title":{},"name":{},"text":{"6":{},"9":{},"20":{},"22":{},"23":{},"25":{},"26":{},"36":{}},"component":{}}],["place",{"_index":554,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"32":{},"36":{},"64":{},"67":{},"73":{}},"component":{}}],["placehold",{"_index":2451,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["plain",{"_index":1585,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["plaintext",{"_index":2052,"title":{},"name":{},"text":{"20":{}},"component":{}}],["plan",{"_index":2102,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["planet",{"_index":2047,"title":{},"name":{},"text":{"20":{}},"component":{}}],["platform",{"_index":464,"title":{},"name":{},"text":{"13":{},"14":{},"17":{},"25":{},"27":{},"38":{}},"component":{}}],["pleas",{"_index":285,"title":{},"name":{},"text":{"9":{}},"component":{}}],["plist",{"_index":2199,"title":{},"name":{},"text":{"21":{},"25":{},"28":{}},"component":{}}],["plistrender",{"_index":1579,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["plu",{"_index":970,"title":{},"name":{},"text":{"20":{}},"component":{}}],["plug",{"_index":2827,"title":{},"name":{},"text":{"34":{},"58":{}},"component":{}}],["plug#begin",{"_index":2923,"title":{},"name":{},"text":{"58":{}},"component":{}}],["plug#end",{"_index":2928,"title":{},"name":{},"text":{"58":{}},"component":{}}],["plugin",{"_index":58,"title":{"28":{},"38":{},"57":{},"14-2":{},"14-8":{},"17-2":{},"17-8":{},"27-4":{},"27-12":{}},"name":{},"text":{"2":{},"8":{},"9":{},"10":{},"12":{},"14":{},"17":{},"20":{},"24":{},"25":{},"27":{},"28":{},"36":{},"38":{},"39":{},"43":{},"56":{},"57":{},"58":{},"75":{}},"component":{}}],["pluginstal",{"_index":2921,"title":{},"name":{},"text":{"58":{}},"component":{}}],["pmodul",{"_index":688,"title":{},"name":{},"text":{"16":{},"26":{}},"component":{}}],["pobject",{"_index":2522,"title":{},"name":{},"text":{"26":{}},"component":{}}],["pobjecttoobjectbyctortest.java",{"_index":717,"title":{},"name":{},"text":{"16":{}},"component":{}}],["pod",{"_index":2614,"title":{},"name":{},"text":{"28":{}},"component":{}}],["pod.pkl",{"_index":2613,"title":{},"name":{},"text":{"28":{}},"component":{}}],["point",{"_index":132,"title":{"20-53":{}},"name":{},"text":{"9":{},"14":{},"17":{},"20":{}},"component":{}}],["pointer",{"_index":3035,"title":{},"name":{},"text":{"65":{}},"component":{}}],["polici",{"_index":389,"title":{},"name":{},"text":{"11":{}},"component":{}}],["polish",{"_index":257,"title":{},"name":{},"text":{"9":{}},"component":{}}],["polyglot",{"_index":467,"title":{},"name":{},"text":{"13":{}},"component":{}}],["polymorph",{"_index":2985,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["pom",{"_index":2830,"title":{},"name":{},"text":{"35":{}},"component":{}}],["pom.xml",{"_index":497,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"35":{}},"component":{}}],["popul",{"_index":1364,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["popular",{"_index":463,"title":{},"name":{},"text":{"13":{}},"component":{}}],["port",{"_index":1653,"title":{},"name":{},"text":{"20":{},"36":{},"67":{},"73":{},"75":{}},"component":{}}],["posit",{"_index":912,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["positiveinfin",{"_index":916,"title":{},"name":{},"text":{"20":{}},"component":{}}],["possibl",{"_index":421,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"22":{},"23":{},"26":{},"28":{},"32":{},"36":{},"64":{},"65":{},"69":{},"70":{}},"component":{}}],["potenti",{"_index":219,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["pound",{"_index":1006,"title":{},"name":{},"text":{"20":{}},"component":{}}],["power",{"_index":203,"title":{},"name":{},"text":{"9":{},"75":{}},"component":{}}],["powerless",{"_index":224,"title":{},"name":{},"text":{"9":{}},"component":{}}],["practic",{"_index":1167,"title":{"32-37":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["prb",{"_index":2320,"title":{},"name":{},"text":{"22":{}},"component":{}}],["preced",{"_index":2512,"title":{},"name":{},"text":{"25":{},"69":{}},"component":{}}],["precis",{"_index":905,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["preconfigur",{"_index":665,"title":{},"name":{},"text":{"16":{},"19":{}},"component":{}}],["predefin",{"_index":807,"title":{"20-91":{}},"name":{},"text":{"20":{}},"component":{}}],["predic",{"_index":818,"title":{"20-114":{}},"name":{},"text":{"20":{}},"component":{}}],["prefer",{"_index":2504,"title":{"32-38":{}},"name":{},"text":{"25":{},"32":{},"39":{},"42":{}},"component":{}}],["preferjavaxinjectannot",{"_index":2676,"title":{},"name":{},"text":{"28":{}},"component":{}}],["prefix",{"_index":1478,"title":{},"name":{},"text":{"20":{},"25":{},"27":{},"64":{}},"component":{}}],["prem",{"_index":2800,"title":{},"name":{},"text":{"32":{}},"component":{}}],["prepar",{"_index":2160,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"32":{}},"component":{}}],["prescrib",{"_index":1232,"title":{},"name":{},"text":{"20":{}},"component":{}}],["presenc",{"_index":2134,"title":{},"name":{},"text":{"20":{}},"component":{}}],["present",{"_index":1432,"title":{},"name":{},"text":{"20":{},"25":{},"43":{}},"component":{}}],["preserv",{"_index":997,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["press",{"_index":2543,"title":{},"name":{},"text":{"27":{},"40":{},"53":{},"54":{}},"component":{}}],["prevent",{"_index":2346,"title":{},"name":{},"text":{"23":{}},"component":{}}],["previou",{"_index":991,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"25":{}},"component":{}}],["previous",{"_index":1218,"title":{},"name":{},"text":{"20":{}},"component":{}}],["primit",{"_index":2204,"title":{},"name":{},"text":{"21":{},"32":{}},"component":{}}],["print",{"_index":298,"title":{},"name":{},"text":{"10":{},"11":{},"20":{},"21":{},"22":{},"25":{},"65":{},"70":{}},"component":{}}],["print(\"foo",{"_index":3141,"title":{},"name":{},"text":{"70":{}},"component":{}}],["print(\"got",{"_index":3122,"title":{},"name":{},"text":{"70":{}},"component":{}}],["print(\"i'm",{"_index":3151,"title":{},"name":{},"text":{"72":{},"73":{}},"component":{}}],["print(textoutput",{"_index":3138,"title":{},"name":{},"text":{"70":{}},"component":{}}],["prior",{"_index":1352,"title":{},"name":{},"text":{"20":{}},"component":{}}],["priorit",{"_index":275,"title":{},"name":{},"text":{"9":{}},"component":{}}],["privat",{"_index":531,"title":{},"name":{},"text":{"14":{},"28":{},"75":{}},"component":{}}],["probabl",{"_index":1133,"title":{},"name":{},"text":{"20":{}},"component":{}}],["proced",{"_index":3001,"title":{},"name":{},"text":{"64":{}},"component":{}}],["process",{"_index":582,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"26":{},"27":{},"65":{},"70":{}},"component":{}}],["prod",{"_index":3256,"title":{},"name":{},"text":{"75":{}},"component":{}}],["prod#pod.volumeroot",{"_index":2891,"title":{},"name":{},"text":{"47":{}},"component":{}}],["prod(\"prod",{"_index":3313,"title":{},"name":{},"text":{"75":{}},"component":{}}],["produc",{"_index":258,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"75":{},"76":{}},"component":{}}],["product",{"_index":2846,"title":{},"name":{},"text":{"36":{}},"component":{}}],["product(nam",{"_index":3158,"title":{},"name":{},"text":{"73":{}},"component":{}}],["program",{"_index":38,"title":{"75":{},"32-37":{},"76-1":{}},"name":{},"text":{"2":{},"9":{},"12":{},"14":{},"15":{},"17":{},"20":{},"23":{},"25":{},"27":{},"28":{},"66":{},"72":{},"75":{},"76":{}},"component":{}}],["programmat",{"_index":1342,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["progress",{"_index":811,"title":{"20-102":{}},"name":{},"text":{"20":{}},"component":{}}],["project",{"_index":180,"title":{"20-134":{},"25-14":{},"25-16":{},"28-16":{},"28-19":{}},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"64":{},"66":{},"67":{},"75":{}},"component":{}}],["project.getlayout().getbuilddirectory().dir(\"generated/pkl/packag",{"_index":2707,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectdir",{"_index":2626,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectdir.filevalu",{"_index":2628,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectdirectori",{"_index":2703,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectdirectories.from(fil",{"_index":2702,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectdirectories.from(file(\"pkl",{"_index":2700,"title":{},"name":{},"text":{"28":{}},"component":{}}],["projectpackag",{"_index":2139,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["projectpigeon",{"_index":1888,"title":{},"name":{},"text":{"20":{}},"component":{}}],["projectpigeon@example.com",{"_index":1887,"title":{},"name":{},"text":{"20":{}},"component":{}}],["project’",{"_index":2141,"title":{},"name":{},"text":{"20":{},"73":{}},"component":{}}],["pronounc",{"_index":21,"title":{},"name":{},"text":{"2":{},"12":{},"75":{},"76":{}},"component":{}}],["prop",{"_index":1648,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["propag",{"_index":798,"title":{"20-71":{}},"name":{},"text":{"20":{}},"component":{}}],["proper",{"_index":2058,"title":{},"name":{},"text":{"20":{}},"component":{}}],["properti",{"_index":100,"title":{"20-19":{},"20-20":{},"20-21":{},"20-22":{},"20-23":{},"21-3":{},"23-2":{},"32-13":{},"32-14":{}},"name":{},"text":{"7":{},"11":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"32":{},"34":{},"36":{},"40":{},"44":{},"45":{},"64":{},"65":{},"67":{},"69":{},"70":{},"75":{}},"component":{}}],["properties.[7",{"_index":1984,"title":{},"name":{},"text":{"20":{}},"component":{}}],["properties/entri",{"_index":2234,"title":{},"name":{},"text":{"21":{}},"component":{}}],["properties1",{"_index":1991,"title":{},"name":{},"text":{"20":{}},"component":{}}],["properties2",{"_index":1992,"title":{},"name":{},"text":{"20":{}},"component":{}}],["propertiesrender",{"_index":1580,"title":{},"name":{},"text":{"20":{}},"component":{}}],["propertylist",{"_index":2198,"title":{},"name":{},"text":{"21":{}},"component":{}}],["property’",{"_index":1173,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["propeti",{"_index":2708,"title":{},"name":{},"text":{"28":{}},"component":{}}],["protect",{"_index":2119,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["protobuf.render",{"_index":1581,"title":{},"name":{},"text":{"20":{}},"component":{}}],["protocol",{"_index":3105,"title":{},"name":{},"text":{"69":{},"70":{},"75":{}},"component":{}}],["prototyp",{"_index":825,"title":{"20-125":{}},"name":{},"text":{"20":{}},"component":{}}],["protoyp",{"_index":1155,"title":{},"name":{},"text":{"20":{}},"component":{}}],["provid",{"_index":25,"title":{},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"38":{},"50":{},"57":{},"60":{},"64":{},"65":{},"66":{},"70":{},"72":{},"75":{}},"component":{}}],["provis",{"_index":507,"title":{},"name":{},"text":{"14":{},"17":{},"27":{}},"component":{}}],["psittaciform",{"_index":2263,"title":{},"name":{},"text":{"22":{}},"component":{}}],["public",{"_index":534,"title":{},"name":{},"text":{"14":{},"28":{},"36":{},"75":{}},"component":{}}],["publish",{"_index":306,"title":{},"name":{},"text":{"10":{},"16":{},"19":{},"20":{},"25":{},"26":{},"27":{},"28":{},"32":{},"43":{},"73":{},"75":{}},"component":{}}],["punctuat",{"_index":2061,"title":{},"name":{},"text":{"20":{}},"component":{}}],["purpos",{"_index":54,"title":{"9-2":{}},"name":{},"text":{"2":{},"9":{},"12":{},"20":{},"21":{},"32":{},"64":{},"75":{}},"component":{}}],["put",{"_index":2385,"title":{},"name":{},"text":{"23":{},"32":{}},"component":{}}],["pycharm",{"_index":2864,"title":{},"name":{},"text":{"38":{},"75":{}},"component":{}}],["python",{"_index":182,"title":{},"name":{},"text":{"9":{}},"component":{}}],["qa",{"_index":3255,"title":{},"name":{},"text":{"75":{}},"component":{}}],["qa(\"qa",{"_index":3312,"title":{},"name":{},"text":{"75":{}},"component":{}}],["qreturn",{"_index":2495,"title":{},"name":{},"text":{"25":{}},"component":{}}],["qtab",{"_index":2492,"title":{},"name":{},"text":{"25":{}},"component":{}}],["qualifi",{"_index":539,"title":{},"name":{},"text":{"14":{},"20":{}},"component":{}}],["qualiti",{"_index":1318,"title":{},"name":{},"text":{"20":{}},"component":{}}],["queri",{"_index":1664,"title":{},"name":{},"text":{"20":{}},"component":{}}],["question",{"_index":7,"title":{},"name":{},"text":{"1":{},"20":{},"21":{}},"component":{}}],["quick",{"_index":14,"title":{"75-1":{}},"name":{},"text":{"2":{},"40":{}},"component":{}}],["quickli",{"_index":1001,"title":{},"name":{},"text":{"20":{},"24":{},"46":{}},"component":{}}],["quickstart",{"_index":3068,"title":{"67":{},"73":{}},"name":{"67":{},"73":{}},"text":{"66":{},"69":{},"72":{}},"component":{}}],["quit",{"_index":2330,"title":{},"name":{},"text":{"22":{},"23":{},"25":{}},"component":{}}],["quitreturn",{"_index":2493,"title":{},"name":{},"text":{"25":{}},"component":{}}],["quot",{"_index":822,"title":{"20-121":{}},"name":{},"text":{"20":{},"21":{}},"component":{}}],["quota",{"_index":1587,"title":{},"name":{},"text":{"20":{}},"component":{}}],["quota.disk",{"_index":1595,"title":{},"name":{},"text":{"20":{}},"component":{}}],["quota.memori",{"_index":1594,"title":{},"name":{},"text":{"20":{}},"component":{}}],["qux",{"_index":1852,"title":{},"name":{},"text":{"20":{}},"component":{}}],["r",{"_index":959,"title":{},"name":{},"text":{"20":{}},"component":{}}],["r1",{"_index":2038,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rais",{"_index":1675,"title":{},"name":{},"text":{"20":{},"34":{}},"component":{}}],["ran",{"_index":2368,"title":{},"name":{},"text":{"23":{}},"component":{}}],["rang",{"_index":898,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rank",{"_index":2560,"title":{},"name":{},"text":{"27":{}},"component":{}}],["raphu",{"_index":2274,"title":{},"name":{},"text":{"22":{}},"component":{}}],["rcv",{"_index":3288,"title":{},"name":{},"text":{"75":{}},"component":{}}],["re",{"_index":1683,"title":{},"name":{},"text":{"20":{},"27":{},"32":{},"65":{},"70":{}},"component":{}}],["reach",{"_index":286,"title":{},"name":{},"text":{"9":{},"13":{},"20":{},"25":{},"28":{}},"component":{}}],["read",{"_index":144,"title":{"20-76":{},"20-77":{}},"name":{},"text":{"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"20":{},"23":{},"25":{},"27":{},"28":{},"32":{},"36":{},"65":{},"70":{},"75":{}},"component":{}}],["read(\"birds/falcon.pkl",{"_index":1660,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read(\"birds/parrot.pkl",{"_index":1659,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read(\"birds/pigeon.pkl",{"_index":1658,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read(\"env",{"_index":584,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["read(\"env:database_password",{"_index":3220,"title":{},"name":{},"text":{"75":{}},"component":{}}],["read(\"env:path",{"_index":1647,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read(\"prop",{"_index":599,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["read(\"secret:foo",{"_index":3067,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["read*(\"birds/*.pkl",{"_index":1657,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read*(\"env",{"_index":1669,"title":{},"name":{},"text":{"20":{}},"component":{}}],["read?(\"env:port\")?.toint",{"_index":1654,"title":{},"name":{},"text":{"20":{}},"component":{}}],["readabl",{"_index":570,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["reader",{"_index":802,"title":{"20-78":{},"65-9":{},"70-9":{}},"name":{},"text":{"65":{},"70":{}},"component":{}}],["readi",{"_index":61,"title":{},"name":{},"text":{"2":{},"14":{},"16":{},"17":{},"19":{},"20":{},"24":{},"27":{},"28":{}},"component":{}}],["realiti",{"_index":418,"title":{},"name":{},"text":{"11":{}},"component":{}}],["realiz",{"_index":465,"title":{},"name":{},"text":{"13":{}},"component":{}}],["realli",{"_index":2217,"title":{},"name":{},"text":{"21":{}},"component":{}}],["reason",{"_index":138,"title":{},"name":{},"text":{"9":{},"20":{},"21":{},"75":{}},"component":{}}],["recal",{"_index":1490,"title":{},"name":{},"text":{"20":{}},"component":{}}],["receiv",{"_index":1624,"title":{},"name":{},"text":{"20":{},"64":{}},"component":{}}],["receiver’",{"_index":1418,"title":{},"name":{},"text":{"20":{}},"component":{}}],["recip",{"_index":1205,"title":{},"name":{},"text":{"20":{}},"component":{}}],["recogn",{"_index":1481,"title":{},"name":{},"text":{"20":{}},"component":{}}],["recommend",{"_index":506,"title":{},"name":{},"text":{"14":{},"17":{},"19":{},"20":{},"24":{},"25":{},"27":{},"32":{}},"component":{}}],["record",{"_index":2120,"title":{},"name":{},"text":{"20":{}},"component":{}}],["recov",{"_index":1651,"title":{},"name":{},"text":{"20":{}},"component":{}}],["recur",{"_index":433,"title":{},"name":{},"text":{"12":{}},"component":{}}],["recurs",{"_index":1925,"title":{},"name":{},"text":{"20":{},"45":{},"69":{}},"component":{}}],["red",{"_index":2132,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["redefin",{"_index":2417,"title":{"25-27":{}},"name":{},"text":{"25":{}},"component":{}}],["redirect",{"_index":1566,"title":{},"name":{},"text":{"20":{}},"component":{}}],["reduc",{"_index":247,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"20":{}},"component":{}}],["redund",{"_index":1292,"title":{},"name":{},"text":{"20":{}},"component":{}}],["refactor",{"_index":2888,"title":{"44":{}},"name":{"44":{}},"text":{"44":{},"75":{}},"component":{}}],["refer",{"_index":19,"title":{"20":{}},"name":{},"text":{"2":{},"5":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"40":{},"45":{},"64":{},"66":{},"69":{},"72":{},"75":{}},"component":{}}],["referenc",{"_index":1260,"title":{},"name":{},"text":{"20":{},"28":{},"43":{}},"component":{}}],["refin",{"_index":1944,"title":{},"name":{},"text":{"20":{}},"component":{}}],["reflect",{"_index":417,"title":{},"name":{},"text":{"11":{}},"component":{}}],["reformat",{"_index":2883,"title":{},"name":{},"text":{"42":{},"46":{}},"component":{}}],["regard",{"_index":2098,"title":{},"name":{},"text":{"20":{}},"component":{}}],["regex",{"_index":1767,"title":{"37-8":{}},"name":{},"text":{"20":{}},"component":{}}],["regex(#\"([\\w\\.]+)@([\\w",{"_index":1769,"title":{},"name":{},"text":{"20":{}},"component":{}}],["regex.findmatchesin",{"_index":1775,"title":{},"name":{},"text":{"20":{}},"component":{}}],["regexmatch",{"_index":1776,"title":{},"name":{},"text":{"20":{}},"component":{}}],["regist",{"_index":722,"title":{},"name":{},"text":{"16":{},"20":{},"65":{},"70":{}},"component":{}}],["register(\"evalpkl",{"_index":2597,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"genjava",{"_index":2672,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"genkotlin",{"_index":2690,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"makepackag",{"_index":2701,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"pkldoc",{"_index":2695,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"resolvepkldep",{"_index":2710,"title":{},"name":{},"text":{"28":{}},"component":{}}],["register(\"testpkl",{"_index":2663,"title":{},"name":{},"text":{"28":{}},"component":{}}],["registeredidentifi",{"_index":3258,"title":{},"name":{},"text":{"75":{}},"component":{}}],["regular",{"_index":805,"title":{"20-89":{}},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["regularfileproperti",{"_index":2604,"title":{},"name":{},"text":{"28":{}},"component":{}}],["rel",{"_index":523,"title":{"20-51":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"32":{},"43":{},"64":{},"67":{}},"component":{}}],["relat",{"_index":2229,"title":{},"name":{},"text":{"21":{},"25":{},"26":{},"28":{},"32":{}},"component":{}}],["relatedtosnowowl",{"_index":2248,"title":{},"name":{},"text":{"21":{}},"component":{}}],["releas",{"_index":65,"title":{"29":{},"31":{}},"name":{"75":{}},"text":{"2":{},"25":{},"29":{},"30":{},"31":{},"33":{},"35":{},"63":{},"67":{},"68":{},"75":{},"76":{}},"component":{}}],["relev",{"_index":1326,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["reli",{"_index":1500,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["reliabl",{"_index":454,"title":{},"name":{},"text":{"13":{}},"component":{}}],["remain",{"_index":673,"title":{},"name":{},"text":{"16":{},"19":{},"26":{}},"component":{}}],["remaind",{"_index":894,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["rememb",{"_index":985,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["remind",{"_index":1154,"title":{},"name":{},"text":{"20":{}},"component":{}}],["remot",{"_index":168,"title":{},"name":{},"text":{"9":{},"11":{},"20":{},"75":{}},"component":{}}],["remov",{"_index":1204,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["remove(\"nam",{"_index":1212,"title":{},"name":{},"text":{"20":{}},"component":{}}],["renam",{"_index":637,"title":{},"name":{},"text":{"16":{},"44":{}},"component":{}}],["render",{"_index":313,"title":{"11-5":{}},"name":{},"text":{"11":{},"13":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"32":{},"75":{}},"component":{}}],["renderer.render(valu",{"_index":1601,"title":{},"name":{},"text":{"20":{}},"component":{}}],["renderer.renderdocument(valu",{"_index":2236,"title":{},"name":{},"text":{"21":{},"22":{},"75":{}},"component":{}}],["repeat",{"_index":585,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["repeatedli",{"_index":403,"title":{},"name":{},"text":{"11":{}},"component":{}}],["repetit",{"_index":46,"title":{},"name":{},"text":{"2":{},"9":{},"23":{}},"component":{}}],["repl",{"_index":176,"title":{"25-13":{},"25-23":{},"25-25":{}},"name":{},"text":{"9":{},"10":{},"11":{},"20":{},"24":{},"25":{},"26":{},"28":{}},"component":{}}],["repl#bird",{"_index":1236,"title":{},"name":{},"text":{"20":{}},"component":{}}],["replac",{"_index":625,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"25":{},"27":{}},"component":{}}],["report",{"_index":2468,"title":{},"name":{},"text":{"25":{},"28":{},"45":{}},"component":{}}],["repositori",{"_index":83,"title":{},"name":{},"text":{"6":{},"14":{},"16":{},"17":{},"19":{},"22":{},"27":{},"28":{},"39":{},"75":{}},"component":{}}],["repres",{"_index":644,"title":{},"name":{},"text":{"16":{},"20":{},"23":{},"25":{},"26":{},"28":{},"69":{}},"component":{}}],["represent",{"_index":344,"title":{},"name":{},"text":{"11":{},"26":{},"75":{}},"component":{}}],["reptiles/*.pkl",{"_index":1536,"title":{},"name":{},"text":{"20":{}},"component":{}}],["reptilia",{"_index":1147,"title":{},"name":{},"text":{"20":{}},"component":{}}],["request",{"_index":678,"title":{},"name":{},"text":{"16":{},"20":{},"25":{},"28":{}},"component":{}}],["requir",{"_index":392,"title":{},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"23":{},"25":{},"26":{},"27":{},"28":{},"35":{},"36":{},"38":{},"58":{},"64":{}},"component":{}}],["res1",{"_index":937,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["res2",{"_index":938,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["res3",{"_index":939,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["res4",{"_index":940,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["res5",{"_index":942,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["res6",{"_index":1048,"title":{},"name":{},"text":{"20":{}},"component":{}}],["res7",{"_index":1049,"title":{},"name":{},"text":{"20":{}},"component":{}}],["res8",{"_index":1050,"title":{},"name":{},"text":{"20":{}},"component":{}}],["res9",{"_index":1051,"title":{},"name":{},"text":{"20":{}},"component":{}}],["resembl",{"_index":198,"title":{"11-6":{}},"name":{},"text":{"9":{},"11":{}},"component":{}}],["reserv",{"_index":828,"title":{"20-128":{}},"name":{},"text":{"20":{}},"component":{}}],["reset",{"_index":2491,"title":{},"name":{},"text":{"25":{}},"component":{}}],["resid",{"_index":2950,"title":{},"name":{},"text":{"64":{}},"component":{}}],["resolut",{"_index":824,"title":{"20-124":{}},"name":{},"text":{"20":{}},"component":{}}],["resolv",{"_index":525,"title":{"20-136":{},"25-16":{},"28-19":{},"64-11":{},"69-6":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"43":{},"64":{},"65":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["resolvepkldep",{"_index":2709,"title":{},"name":{},"text":{"28":{}},"component":{}}],["resourc",{"_index":77,"title":{"6":{},"20-75":{},"20-78":{},"20-79":{}},"name":{"6":{}},"text":{"11":{},"14":{},"16":{},"17":{},"20":{},"25":{},"26":{},"27":{},"28":{},"43":{},"65":{},"70":{},"75":{}},"component":{}}],["resourceread",{"_index":1670,"title":{},"name":{},"text":{"20":{}},"component":{}}],["respect",{"_index":516,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{}},"component":{}}],["respond",{"_index":3209,"title":{},"name":{},"text":{"75":{}},"component":{}}],["respons",{"_index":3066,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["rest",{"_index":2434,"title":{},"name":{},"text":{"25":{}},"component":{}}],["restart",{"_index":2922,"title":{},"name":{},"text":{"58":{}},"component":{}}],["restrict",{"_index":602,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"21":{},"25":{},"27":{},"28":{}},"component":{}}],["result",{"_index":683,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"64":{},"69":{},"70":{}},"component":{}}],["retriev",{"_index":1461,"title":{},"name":{},"text":{"20":{},"65":{},"70":{}},"component":{}}],["retroact",{"_index":1349,"title":{},"name":{},"text":{"20":{}},"component":{}}],["return",{"_index":353,"title":{},"name":{},"text":{"11":{},"16":{},"19":{},"20":{},"25":{},"26":{},"75":{}},"component":{}}],["reus",{"_index":314,"title":{"11-7":{}},"name":{},"text":{"11":{},"13":{},"20":{},"23":{}},"component":{}}],["reveal",{"_index":1941,"title":{},"name":{},"text":{"20":{}},"component":{}}],["revers",{"_index":1341,"title":{},"name":{},"text":{"20":{},"40":{}},"component":{}}],["reversedbird",{"_index":1344,"title":{},"name":{},"text":{"20":{}},"component":{}}],["reversedstr",{"_index":1012,"title":{},"name":{},"text":{"20":{}},"component":{}}],["review",{"_index":2896,"title":{},"name":{},"text":{"50":{}},"component":{}}],["rewrit",{"_index":2362,"title":{},"name":{},"text":{"23":{}},"component":{}}],["rich",{"_index":26,"title":{},"name":{},"text":{"2":{},"12":{},"15":{},"18":{},"20":{},"65":{},"66":{},"70":{},"72":{},"75":{}},"component":{}}],["right",{"_index":1245,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rocket",{"_index":213,"title":{},"name":{},"text":{"9":{}},"component":{}}],["role",{"_index":1642,"title":{},"name":{},"text":{"20":{}},"component":{}}],["room",{"_index":429,"title":{},"name":{},"text":{"11":{}},"component":{}}],["root",{"_index":600,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{},"43":{}},"component":{"74":{}}}],["rootproject.layout.projectdirectori",{"_index":2643,"title":{},"name":{},"text":{"28":{}},"component":{}}],["roughli",{"_index":340,"title":{},"name":{},"text":{"11":{}},"component":{}}],["round",{"_index":1877,"title":{},"name":{},"text":{"20":{}},"component":{}}],["rubi",{"_index":3186,"title":{},"name":{},"text":{"75":{}},"component":{}}],["rule",{"_index":1296,"title":{},"name":{},"text":{"20":{},"32":{},"64":{},"69":{}},"component":{}}],["run",{"_index":518,"title":{"64-1":{},"69-1":{}},"name":{},"text":{"14":{},"17":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"36":{},"58":{},"65":{},"66":{},"67":{},"72":{},"73":{}},"component":{}}],["runtim",{"_index":253,"title":{},"name":{},"text":{"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"18":{},"20":{},"25":{},"64":{},"66":{},"72":{},"75":{}},"component":{}}],["réseau",{"_index":2550,"title":{},"name":{},"text":{"27":{}},"component":{}}],["s",{"_index":1558,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["s\\n",{"_index":3073,"title":{},"name":{},"text":{"66":{},"67":{}},"component":{}}],["sadli",{"_index":2361,"title":{},"name":{},"text":{"23":{}},"component":{}}],["safe",{"_index":449,"title":{},"name":{},"text":{"13":{},"20":{},"36":{}},"component":{}}],["safeti",{"_index":3203,"title":{},"name":{},"text":{"75":{}},"component":{}}],["salad",{"_index":2798,"title":{},"name":{},"text":{"32":{}},"component":{}}],["same",{"_index":450,"title":{},"name":{},"text":{"13":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"34":{},"64":{},"69":{},"75":{}},"component":{}}],["sampl",{"_index":2919,"title":{},"name":{},"text":{"58":{},"75":{}},"component":{}}],["samples.boot.appconfig",{"_index":2838,"title":{},"name":{},"text":{"36":{}},"component":{}}],["san",{"_index":2993,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["sandbox",{"_index":205,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["sanfrancisco",{"_index":2995,"title":{},"name":{},"text":{"64":{},"69":{}},"component":{}}],["satisfi",{"_index":186,"title":{},"name":{},"text":{"9":{}},"component":{}}],["sauc",{"_index":1171,"title":{},"name":{},"text":{"20":{}},"component":{}}],["saw",{"_index":2335,"title":{},"name":{},"text":{"23":{}},"component":{}}],["say",{"_index":2359,"title":{},"name":{},"text":{"23":{}},"component":{}}],["say(nam",{"_index":1868,"title":{},"name":{},"text":{"20":{}},"component":{}}],["scaffold",{"_index":3090,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["scalabl",{"_index":457,"title":{},"name":{},"text":{"13":{}},"component":{}}],["scaladoc",{"_index":2535,"title":{},"name":{},"text":{"27":{}},"component":{}}],["scale",{"_index":39,"title":{},"name":{},"text":{"2":{},"12":{},"75":{}},"component":{}}],["schema",{"_index":157,"title":{"11-8":{},"67-2":{},"73-2":{}},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"36":{},"67":{},"73":{},"75":{}},"component":{}}],["scheme",{"_index":1505,"title":{},"name":{},"text":{"20":{},"28":{},"43":{},"65":{},"70":{}},"component":{}}],["scope",{"_index":1262,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["scratch",{"_index":1140,"title":{},"name":{},"text":{"20":{}},"component":{}}],["script",{"_index":207,"title":{},"name":{},"text":{"9":{}},"component":{}}],["seach",{"_index":2105,"title":{},"name":{},"text":{"20":{}},"component":{}}],["search",{"_index":592,"title":{"27-2":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"39":{}},"component":{}}],["searchabl",{"_index":261,"title":{},"name":{},"text":{"9":{},"10":{},"27":{}},"component":{}}],["seat",{"_index":2377,"title":{},"name":{},"text":{"23":{}},"component":{}}],["second",{"_index":613,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"25":{},"27":{}},"component":{}}],["secondbirddiet",{"_index":1329,"title":{},"name":{},"text":{"20":{}},"component":{}}],["secret",{"_index":1170,"title":{},"name":{},"text":{"20":{},"65":{},"70":{}},"component":{}}],["section",{"_index":1158,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"27":{},"32":{},"69":{}},"component":{}}],["secur",{"_index":388,"title":{"20-62":{}},"name":{},"text":{"11":{},"20":{},"26":{},"65":{},"70":{}},"component":{}}],["securitymanag",{"_index":1674,"title":{},"name":{},"text":{"20":{},"26":{}},"component":{}}],["see",{"_index":383,"title":{},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"35":{},"36":{},"64":{},"67":{},"69":{},"75":{}},"component":{}}],["seed",{"_index":658,"title":{},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"25":{}},"component":{}}],["seedpigeon",{"_index":1934,"title":{},"name":{},"text":{"20":{}},"component":{}}],["seeds\"|\"berries\"|\"insect",{"_index":1856,"title":{},"name":{},"text":{"20":{}},"component":{}}],["seem",{"_index":2197,"title":{},"name":{},"text":{"21":{}},"component":{}}],["seen",{"_index":2223,"title":{},"name":{},"text":{"21":{},"23":{}},"component":{}}],["segment",{"_index":1533,"title":{},"name":{},"text":{"20":{},"25":{},"28":{}},"component":{}}],["select",{"_index":1143,"title":{},"name":{},"text":{"20":{},"27":{},"39":{},"42":{},"44":{}},"component":{}}],["self",{"_index":503,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{}},"component":{}}],["self.databas",{"_index":3263,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.dbnam",{"_index":3269,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.environ",{"_index":3262,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.host",{"_index":3268,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.hostnam",{"_index":3260,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.password",{"_index":3267,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.port",{"_index":3261,"title":{},"name":{},"text":{"75":{}},"component":{}}],["self.usernam",{"_index":3266,"title":{},"name":{},"text":{"75":{}},"component":{}}],["sell",{"_index":3195,"title":{},"name":{},"text":{"75":{}},"component":{}}],["semant",{"_index":954,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["semicolon",{"_index":2819,"title":{},"name":{},"text":{"32":{}},"component":{}}],["semver",{"_index":2144,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sens",{"_index":1313,"title":{},"name":{},"text":{"20":{},"22":{},"75":{}},"component":{}}],["sensibl",{"_index":442,"title":{},"name":{},"text":{"13":{},"65":{},"70":{}},"component":{}}],["sentenc",{"_index":2059,"title":{},"name":{},"text":{"20":{},"22":{},"32":{}},"component":{}}],["separ",{"_index":331,"title":{},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"65":{},"70":{}},"component":{}}],["separat",{"_index":920,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sequenc",{"_index":949,"title":{},"name":{},"text":{"20":{}},"component":{}}],["serializ",{"_index":545,"title":{},"name":{},"text":{"14":{}},"component":{}}],["serv",{"_index":1430,"title":{},"name":{},"text":{"20":{},"32":{},"65":{}},"component":{}}],["server",{"_index":2163,"title":{"25-10":{}},"name":{},"text":{"20":{},"25":{},"26":{},"36":{},"67":{},"73":{},"75":{}},"component":{}}],["server(appconfig",{"_index":2859,"title":{},"name":{},"text":{"36":{}},"component":{}}],["server(appconfig.serv",{"_index":2857,"title":{},"name":{},"text":{"36":{}},"component":{}}],["serverport",{"_index":902,"title":{},"name":{},"text":{"20":{}},"component":{}}],["servic",{"_index":398,"title":{},"name":{},"text":{"11":{},"13":{},"36":{}},"component":{}}],["session",{"_index":2395,"title":{},"name":{},"text":{"23":{},"25":{}},"component":{}}],["set",{"_index":88,"title":{"20-87":{},"25-28":{},"64-3":{}},"name":{},"text":{"7":{},"11":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"25":{},"27":{},"28":{},"64":{},"65":{},"67":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["set(1",{"_index":1740,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set(2",{"_index":1741,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set(3",{"_index":1747,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set(5",{"_index":1742,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set.contains(3",{"_index":1743,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set.drop(1).take(2",{"_index":1744,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set.intersect(set(3",{"_index":1746,"title":{},"name":{},"text":{"20":{}},"component":{}}],["set.map((n",{"_index":1745,"title":{},"name":{},"text":{"20":{}},"component":{}}],["settabl",{"_index":703,"title":{},"name":{},"text":{"16":{}},"component":{}}],["settings.pkl",{"_index":2949,"title":{},"name":{},"text":{"64":{}},"component":{}}],["settingsmodul",{"_index":2633,"title":{},"name":{},"text":{"28":{}},"component":{}}],["setup",{"_index":2685,"title":{},"name":{},"text":{"28":{},"58":{}},"component":{}}],["set’",{"_index":1739,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}],["sever",{"_index":295,"title":{},"name":{},"text":{"10":{}},"component":{}}],["sha",{"_index":1466,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["sha256",{"_index":1468,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["shape",{"_index":3123,"title":{},"name":{},"text":{"70":{}},"component":{}}],["share",{"_index":409,"title":{"75-3":{}},"name":{},"text":{"11":{},"13":{},"20":{},"64":{},"75":{}},"component":{}}],["shareabl",{"_index":1457,"title":{},"name":{},"text":{"20":{}},"component":{}}],["shell",{"_index":2015,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ship",{"_index":380,"title":{},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"27":{}},"component":{}}],["shopt",{"_index":1557,"title":{},"name":{},"text":{"20":{}},"component":{}}],["short",{"_index":1136,"title":{},"name":{},"text":{"20":{},"53":{},"60":{},"75":{}},"component":{}}],["shortcom",{"_index":126,"title":{},"name":{},"text":{"9":{},"75":{}},"component":{}}],["shortcut",{"_index":2903,"title":{},"name":{},"text":{"53":{},"54":{},"61":{}},"component":{}}],["shorthand",{"_index":766,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{}}],["shouldn’t",{"_index":2767,"title":{},"name":{},"text":{"32":{}},"component":{}}],["show",{"_index":2205,"title":{},"name":{},"text":{"21":{},"27":{}},"component":{}}],["shown",{"_index":508,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"27":{},"75":{}},"component":{}}],["sibl",{"_index":3093,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["side",{"_index":215,"title":{},"name":{},"text":{"9":{},"58":{}},"component":{}}],["sign",{"_index":853,"title":{},"name":{},"text":{"20":{}},"component":{}}],["signatur",{"_index":2344,"title":{},"name":{},"text":{"23":{}},"component":{}}],["signific",{"_index":244,"title":{},"name":{},"text":{"9":{}},"component":{}}],["similar",{"_index":325,"title":{},"name":{},"text":{"11":{},"16":{},"20":{},"25":{},"27":{},"75":{}},"component":{}}],["similarli",{"_index":1276,"title":{},"name":{},"text":{"20":{}},"component":{}}],["simpl",{"_index":42,"title":{},"name":{},"text":{"2":{},"9":{},"12":{},"20":{},"25":{},"28":{},"65":{},"75":{}},"component":{}}],["simpleclass.pkl",{"_index":2349,"title":{},"name":{},"text":{"23":{}},"component":{}}],["simpleobjectswithelements.pkl",{"_index":2211,"title":{},"name":{},"text":{"21":{}},"component":{}}],["simpleobjectswithentries.pkl",{"_index":2218,"title":{},"name":{},"text":{"21":{}},"component":{}}],["simpleobjectwithproperties.pkl",{"_index":2203,"title":{},"name":{},"text":{"21":{}},"component":{}}],["simpler",{"_index":3248,"title":{},"name":{},"text":{"75":{}},"component":{}}],["simplest",{"_index":2337,"title":{},"name":{},"text":{"23":{}},"component":{}}],["simpli",{"_index":1667,"title":{},"name":{},"text":{"20":{},"27":{},"65":{},"70":{}},"component":{}}],["simplifi",{"_index":1485,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sinatra",{"_index":1966,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sing",{"_index":1234,"title":{},"name":{},"text":{"20":{}},"component":{}}],["singl",{"_index":469,"title":{"32-35":{}},"name":{},"text":{"13":{},"16":{},"20":{},"32":{},"64":{}},"component":{}}],["sit",{"_index":1399,"title":{},"name":{},"text":{"20":{}},"component":{}}],["site",{"_index":453,"title":{},"name":{},"text":{"13":{},"20":{},"27":{}},"component":{}}],["site’",{"_index":2093,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sitter",{"_index":2914,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["situat",{"_index":2957,"title":{},"name":{},"text":{"64":{}},"component":{}}],["six",{"_index":1523,"title":{},"name":{},"text":{"20":{}},"component":{}}],["size",{"_index":324,"title":{"20-12":{}},"name":{},"text":{"11":{},"20":{},"25":{},"27":{}},"component":{}}],["size.unit",{"_index":1591,"title":{},"name":{},"text":{"20":{}},"component":{}}],["size.valu",{"_index":1590,"title":{},"name":{},"text":{"20":{}},"component":{}}],["size’",{"_index":1101,"title":{},"name":{},"text":{"20":{}},"component":{}}],["skip",{"_index":1554,"title":{},"name":{},"text":{"20":{},"25":{},"28":{},"64":{}},"component":{}}],["skippublishcheck",{"_index":2704,"title":{},"name":{},"text":{"28":{}},"component":{}}],["skippublishcheck.set(tru",{"_index":2705,"title":{},"name":{},"text":{"28":{}},"component":{}}],["slash",{"_index":836,"title":{},"name":{},"text":{"20":{}},"component":{}}],["slightli",{"_index":1491,"title":{},"name":{},"text":{"20":{}},"component":{}}],["slower",{"_index":2431,"title":{},"name":{},"text":{"25":{}},"component":{}}],["small",{"_index":40,"title":{},"name":{},"text":{"2":{},"12":{}},"component":{}}],["smaller",{"_index":150,"title":{},"name":{},"text":{"9":{},"11":{},"25":{}},"component":{}}],["smallest",{"_index":1025,"title":{},"name":{},"text":{"20":{}},"component":{}}],["snapshot",{"_index":496,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"19":{},"26":{},"27":{},"28":{},"35":{}},"component":{}}],["snapshot.bin",{"_index":2438,"title":{},"name":{},"text":{"25":{}},"component":{}}],["snapshot.jar",{"_index":2444,"title":{},"name":{},"text":{"25":{}},"component":{}}],["snapshot/pkl",{"_index":2437,"title":{},"name":{},"text":{"25":{}},"component":{}}],["snipmat",{"_index":2938,"title":{},"name":{},"text":{"60":{}},"component":{}}],["snippet",{"_index":1285,"title":{"53":{},"60":{},"53-1":{},"60-1":{}},"name":{"53":{},"60":{}},"text":{"20":{},"21":{},"32":{},"53":{},"54":{},"60":{},"61":{}},"component":{}}],["soft",{"_index":2182,"title":{},"name":{},"text":{"20":{}},"component":{}}],["softwar",{"_index":432,"title":{},"name":{},"text":{"12":{},"23":{}},"component":{}}],["solut",{"_index":302,"title":{},"name":{},"text":{"10":{},"11":{},"13":{},"16":{},"17":{},"20":{},"21":{}},"component":{}}],["solv",{"_index":3201,"title":{},"name":{},"text":{"75":{}},"component":{}}],["some/file.ext",{"_index":2485,"title":{},"name":{},"text":{"25":{}},"component":{}}],["some/path",{"_index":601,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["some/path/certificates.pem",{"_index":622,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["somemodul",{"_index":1270,"title":{},"name":{},"text":{"20":{}},"component":{}}],["somemodule.pkl",{"_index":1269,"title":{},"name":{},"text":{"20":{}},"component":{}}],["someth",{"_index":2440,"title":{},"name":{},"text":{"25":{},"32":{},"64":{},"69":{}},"component":{}}],["sometim",{"_index":1597,"title":{},"name":{},"text":{"20":{},"32":{},"75":{}},"component":{}}],["sophist",{"_index":242,"title":{},"name":{},"text":{"9":{}},"component":{}}],["sort",{"_index":2768,"title":{},"name":{},"text":{"32":{}},"component":{}}],["sound",{"_index":1858,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sourc",{"_index":64,"title":{"67-3":{},"73-3":{}},"name":{},"text":{"2":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"43":{},"56":{},"66":{},"67":{},"70":{},"72":{},"73":{},"75":{},"76":{}},"component":{}}],["sourcecod",{"_index":2574,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sourcecode/bird/parrot.pkl",{"_index":2573,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sourcemodul",{"_index":2602,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.add(file(\"module1.pkl",{"_index":2592,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.add(files(\"module1_test.pkl",{"_index":2659,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.addall(files(\"doc",{"_index":2693,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.addall(files(\"module1_test.pkl",{"_index":2664,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.addall(files(\"template1.pkl",{"_index":2670,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcemodules.set(files(\"src/main/resources/appconfig.pkl",{"_index":2851,"title":{},"name":{},"text":{"36":{}},"component":{}}],["sources/myapplication/gener",{"_index":3169,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sources/myapplication/main.swift",{"_index":3171,"title":{},"name":{},"text":{"73":{}},"component":{}}],["sources/myproject/gener",{"_index":3100,"title":{},"name":{},"text":{"69":{}},"component":{}}],["sourceset",{"_index":2673,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcesets.main",{"_index":2683,"title":{},"name":{},"text":{"28":{}},"component":{}}],["sourcesets.test",{"_index":2674,"title":{},"name":{},"text":{"28":{}},"component":{}}],["space",{"_index":548,"title":{"32-12":{},"32-33":{}},"name":{},"text":{"14":{},"17":{},"20":{},"28":{},"32":{}},"component":{}}],["span",{"_index":982,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sparrow",{"_index":2393,"title":{},"name":{},"text":{"23":{}},"component":{}}],["sparrow.nam",{"_index":1514,"title":{},"name":{},"text":{"20":{}},"component":{}}],["spawn",{"_index":3013,"title":{},"name":{},"text":{"65":{},"70":{},"73":{}},"component":{}}],["speak",{"_index":2181,"title":{},"name":{},"text":{"20":{}},"component":{}}],["speci",{"_index":984,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"25":{}},"component":{}}],["special",{"_index":435,"title":{},"name":{},"text":{"12":{},"20":{},"21":{},"75":{}},"component":{}}],["speciesnam",{"_index":1305,"title":{},"name":{},"text":{"20":{}},"component":{}}],["specif",{"_index":221,"title":{},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"19":{},"20":{},"22":{},"25":{},"27":{}},"component":{}}],["specifi",{"_index":603,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{}},"component":{}}],["spectrum",{"_index":3185,"title":{},"name":{},"text":{"75":{}},"component":{}}],["speed",{"_index":268,"title":{},"name":{},"text":{"9":{}},"component":{}}],["spell",{"_index":1407,"title":{},"name":{},"text":{"20":{}},"component":{}}],["spend",{"_index":415,"title":{},"name":{},"text":{"11":{}},"component":{}}],["spi",{"_index":1551,"title":{},"name":{},"text":{"20":{}},"component":{}}],["spirit",{"_index":1867,"title":{},"name":{},"text":{"20":{}},"component":{}}],["split",{"_index":147,"title":{},"name":{},"text":{"9":{},"11":{},"32":{}},"component":{}}],["spot",{"_index":234,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["spread",{"_index":817,"title":{"20-112":{},"20-113":{}},"name":{},"text":{"20":{},"22":{}},"component":{}}],["spreadsheet",{"_index":1189,"title":{},"name":{},"text":{"20":{}},"component":{}}],["spring",{"_index":71,"title":{"34":{}},"name":{},"text":{"3":{},"9":{},"14":{},"17":{},"28":{},"34":{},"35":{},"36":{}},"component":{"33":{},"34":{},"35":{},"36":{}}}],["spring'",{"_index":2829,"title":{},"name":{},"text":{"35":{}},"component":{}}],["spring:$pklspringvers",{"_index":2831,"title":{},"name":{},"text":{"35":{}},"component":{}}],["springbootappl",{"_index":2854,"title":{},"name":{},"text":{"36":{}},"component":{}}],["squar",{"_index":2075,"title":{},"name":{},"text":{"20":{},"21":{},"32":{}},"component":{}}],["sr",{"_index":1882,"title":{},"name":{},"text":{"20":{}},"component":{}}],["src/main/resourc",{"_index":2836,"title":{},"name":{},"text":{"36":{}},"component":{}}],["src/main/resources/path/to/my_module.pkl",{"_index":1454,"title":{},"name":{},"text":{"20":{}},"component":{}}],["src/test/resources/path/to/my_module.pkl",{"_index":1455,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sre",{"_index":455,"title":{},"name":{},"text":{"13":{}},"component":{}}],["st",{"_index":2221,"title":{},"name":{},"text":{"21":{}},"component":{}}],["stabil",{"_index":2099,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stabl",{"_index":1441,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stack",{"_index":1694,"title":{},"name":{},"text":{"20":{},"25":{},"46":{},"47":{}},"component":{}}],["stage",{"_index":564,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["stand",{"_index":1374,"title":{},"name":{},"text":{"20":{}},"component":{}}],["standard",{"_index":50,"title":{"7":{},"20-50":{}},"name":{"7":{}},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"14":{},"17":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"34":{},"43":{},"57":{}},"component":{}}],["start",{"_index":470,"title":{},"name":{},"text":{"13":{},"16":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"32":{},"64":{},"66":{},"70":{},"72":{},"75":{}},"component":{}}],["start/end",{"_index":1005,"title":{},"name":{},"text":{"20":{}},"component":{}}],["startup",{"_index":2429,"title":{},"name":{},"text":{"25":{}},"component":{}}],["state",{"_index":1196,"title":{},"name":{},"text":{"20":{}},"component":{}}],["statement",{"_index":672,"title":{},"name":{},"text":{"16":{},"26":{}},"component":{}}],["static",{"_index":119,"title":{"9-1":{}},"name":{},"text":{"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"20":{},"25":{},"32":{},"70":{},"72":{},"75":{}},"component":{}}],["statu",{"_index":346,"title":{},"name":{},"text":{"11":{}},"component":{}}],["stderr",{"_index":3063,"title":{},"name":{},"text":{"65":{}},"component":{}}],["step",{"_index":723,"title":{"75-6":{}},"name":{},"text":{"16":{},"20":{},"25":{},"67":{},"73":{}},"component":{}}],["stick",{"_index":1526,"title":{},"name":{},"text":{"20":{}},"component":{}}],["still",{"_index":428,"title":{},"name":{},"text":{"11":{},"20":{},"64":{}},"component":{}}],["stock",{"_index":2272,"title":{},"name":{},"text":{"22":{}},"component":{}}],["stockpigeon",{"_index":2271,"title":{},"name":{},"text":{"22":{}},"component":{}}],["store",{"_index":574,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["stori",{"_index":473,"title":{},"name":{},"text":{"13":{}},"component":{}}],["str",{"_index":977,"title":{},"name":{},"text":{"20":{},"40":{}},"component":{}}],["str.matches(regex",{"_index":1885,"title":{},"name":{},"text":{"20":{}},"component":{}}],["straightforward",{"_index":769,"title":{},"name":{},"text":{"19":{}},"component":{}}],["stranger",{"_index":1864,"title":{},"name":{},"text":{"20":{}},"component":{}}],["strategi",{"_index":1310,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stream",{"_index":2455,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["streamlin",{"_index":411,"title":{},"name":{},"text":{"11":{}},"component":{}}],["street",{"_index":1139,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["strengthen",{"_index":374,"title":{},"name":{},"text":{"11":{}},"component":{}}],["stricter",{"_index":2180,"title":{},"name":{},"text":{"20":{}},"component":{}}],["strictli",{"_index":225,"title":{},"name":{},"text":{"9":{},"11":{},"20":{}},"component":{}}],["string",{"_index":694,"title":{"20-6":{},"20-7":{},"20-8":{},"20-9":{},"20-10":{},"20-99":{},"32-22":{},"32-23":{}},"name":{},"text":{"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"32":{},"36":{},"40":{},"64":{},"65":{},"67":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["string(!isempti",{"_index":3231,"title":{},"name":{},"text":{"75":{}},"component":{}}],["string(contain",{"_index":1711,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string(contains(\"sourc",{"_index":1892,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string(emailaddress",{"_index":1886,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string(length",{"_index":1880,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string(length.isodd",{"_index":3241,"title":{},"name":{},"text":{"75":{}},"component":{}}],["string(matches(regex",{"_index":1794,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string(namerequiresbranchnam",{"_index":2299,"title":{},"name":{},"text":{"22":{}},"component":{}}],["string(rcv",{"_index":3289,"title":{},"name":{},"text":{"75":{}},"component":{}}],["string(thi",{"_index":1881,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string.length",{"_index":2555,"title":{},"name":{},"text":{"27":{}},"component":{}}],["string.match",{"_index":1771,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stringifi",{"_index":2461,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["stringliter",{"_index":1872,"title":{},"name":{},"text":{"20":{}},"component":{}}],["stringmap",{"_index":1797,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string|*int",{"_index":1853,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string|bird",{"_index":1840,"title":{},"name":{},"text":{"20":{}},"component":{}}],["string’",{"_index":1770,"title":{},"name":{},"text":{"20":{}},"component":{}}],["strip",{"_index":1504,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["strlength",{"_index":1010,"title":{},"name":{},"text":{"20":{}},"component":{}}],["strong",{"_index":130,"title":{},"name":{},"text":{"9":{},"11":{},"13":{}},"component":{}}],["stronger",{"_index":246,"title":{},"name":{},"text":{"9":{}},"component":{}}],["struct",{"_index":2940,"title":{"64-6":{}},"name":{},"text":{"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["structtag",{"_index":2962,"title":{},"name":{},"text":{"64":{}},"component":{}}],["structur",{"_index":332,"title":{"21-2":{},"32-4":{},"37-1":{}},"name":{},"text":{"11":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"23":{},"40":{},"43":{},"65":{}},"component":{}}],["structure.[2",{"_index":1222,"title":{},"name":{},"text":{"20":{}},"component":{}}],["studio",{"_index":2894,"title":{},"name":{},"text":{"50":{},"51":{}},"component":{}}],["style",{"_index":1377,"title":{"32":{}},"name":{},"text":{"20":{},"42":{}},"component":{}}],["sub",{"_index":820,"title":{"20-118":{}},"name":{},"text":{"20":{},"23":{}},"component":{}}],["subclass",{"_index":1416,"title":{},"name":{},"text":{"20":{}},"component":{}}],["subdirectori",{"_index":2028,"title":{},"name":{},"text":{"20":{}},"component":{}}],["subject",{"_index":567,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["sublim",{"_index":2507,"title":{},"name":{},"text":{"25":{}},"component":{}}],["submit",{"_index":3328,"title":{},"name":{},"text":{"75":{}},"component":{}}],["submodul",{"_index":1415,"title":{},"name":{},"text":{"20":{}},"component":{}}],["subpackag",{"_index":2992,"title":{},"name":{},"text":{"64":{}},"component":{}}],["subscript",{"_index":764,"title":{},"name":{},"text":{"19":{},"20":{}},"component":{}}],["subsequ",{"_index":615,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["subset",{"_index":382,"title":{},"name":{},"text":{"11":{},"23":{}},"component":{}}],["substitut",{"_index":2463,"title":{},"name":{},"text":{"25":{}},"component":{}}],["subtract",{"_index":890,"title":{},"name":{},"text":{"20":{}},"component":{}}],["subtyp",{"_index":2787,"title":{},"name":{},"text":{"32":{}},"component":{}}],["succe",{"_index":640,"title":{},"name":{},"text":{"16":{},"20":{},"26":{}},"component":{}}],["succeed",{"_index":2900,"title":{},"name":{},"text":{"51":{}},"component":{}}],["success",{"_index":472,"title":{},"name":{},"text":{"13":{},"32":{}},"component":{}}],["successfulli",{"_index":341,"title":{},"name":{},"text":{"11":{}},"component":{}}],["such",{"_index":133,"title":{},"name":{},"text":{"9":{},"20":{},"25":{},"27":{},"28":{},"40":{}},"component":{}}],["suffici",{"_index":3021,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["suffix",{"_index":2024,"title":{},"name":{},"text":{"20":{}},"component":{}}],["sugar",{"_index":2003,"title":{},"name":{},"text":{"20":{}},"component":{}}],["suitabl",{"_index":1347,"title":{},"name":{},"text":{"20":{}},"component":{}}],["summari",{"_index":2063,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["super.pigeon",{"_index":1168,"title":{},"name":{},"text":{"20":{}},"component":{}}],["superclass",{"_index":2112,"title":{},"name":{},"text":{"20":{}},"component":{}}],["superstar",{"_index":845,"title":{},"name":{},"text":{"20":{}},"component":{}}],["supertyp",{"_index":850,"title":{},"name":{},"text":{"20":{}},"component":{}}],["support",{"_index":27,"title":{"53-1":{},"60-1":{},"75-5":{}},"name":{},"text":{"2":{},"8":{},"9":{},"11":{},"13":{},"16":{},"20":{},"25":{},"27":{},"28":{},"38":{},"40":{},"43":{},"46":{},"50":{},"57":{},"60":{},"69":{},"75":{}},"component":{}}],["suppos",{"_index":2373,"title":{},"name":{},"text":{"23":{}},"component":{}}],["suppport",{"_index":2912,"title":{},"name":{},"text":{"57":{}},"component":{}}],["surf",{"_index":2521,"title":{},"name":{},"text":{"26":{}},"component":{}}],["surpris",{"_index":425,"title":{},"name":{},"text":{"11":{}},"component":{}}],["surround",{"_index":2043,"title":{},"name":{},"text":{"20":{}},"component":{}}],["swallow",{"_index":2124,"title":{},"name":{},"text":{"20":{}},"component":{}}],["swift",{"_index":75,"title":{"72":{},"69-2":{},"73-3":{},"73-4":{}},"name":{},"text":{"4":{},"13":{},"20":{},"25":{},"69":{},"70":{},"72":{},"73":{},"75":{}},"component":{"68":{},"69":{},"70":{},"71":{},"72":{},"73":{}}}],["swift.nam",{"_index":3111,"title":{},"name":{},"text":{"69":{}},"component":{}}],["swift/pkl.swift@0.1.0#/swift.pkl",{"_index":3112,"title":{},"name":{},"text":{"69":{}},"component":{}}],["switch",{"_index":1949,"title":{},"name":{},"text":{"20":{}},"component":{}}],["symbol",{"_index":1553,"title":{},"name":{},"text":{"20":{},"27":{},"32":{},"43":{}},"component":{}}],["symlink",{"_index":604,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"28":{}},"component":{}}],["synopsi",{"_index":520,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["syntact",{"_index":2002,"title":{},"name":{},"text":{"20":{}},"component":{}}],["syntax",{"_index":164,"title":{"48":{},"55":{},"62":{},"20-112":{}},"name":{"48":{},"55":{},"62":{}},"text":{"9":{},"20":{},"21":{},"23":{},"45":{},"46":{},"48":{},"51":{},"54":{},"57":{},"58":{},"61":{},"75":{}},"component":{}}],["synthet",{"_index":2499,"title":{},"name":{},"text":{"25":{},"70":{}},"component":{}}],["system",{"_index":1443,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"36":{},"43":{}},"component":{}}],["system.getenv",{"_index":2642,"title":{},"name":{},"text":{"28":{}},"component":{}}],["t",{"_index":549,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"64":{},"69":{}},"component":{}}],["tab",{"_index":550,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"28":{},"53":{},"54":{}},"component":{}}],["tabl",{"_index":1993,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["tag",{"_index":2941,"title":{"64-6":{}},"name":{},"text":{"64":{},"65":{}},"component":{}}],["take",{"_index":394,"title":{},"name":{},"text":{"11":{},"14":{},"20":{},"25":{},"27":{},"28":{},"32":{},"52":{},"54":{},"65":{},"70":{},"75":{}},"component":{}}],["taken",{"_index":1850,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["target",{"_index":446,"title":{},"name":{},"text":{"13":{},"14":{},"16":{},"19":{},"20":{},"21":{},"25":{},"32":{},"73":{},"75":{}},"component":{}}],["task",{"_index":47,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"20":{},"23":{},"28":{}},"component":{}}],["taxonomi",{"_index":1128,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["taxonomy.ord",{"_index":2265,"title":{},"name":{},"text":{"22":{}},"component":{}}],["taxonomy.speci",{"_index":2276,"title":{},"name":{},"text":{"22":{}},"component":{}}],["tbd",{"_index":3163,"title":{},"name":{},"text":{"73":{}},"component":{}}],["teach",{"_index":1586,"title":{},"name":{},"text":{"20":{}},"component":{}}],["team",{"_index":397,"title":{},"name":{},"text":{"11":{},"75":{},"76":{}},"component":{}}],["team’",{"_index":2749,"title":{},"name":{},"text":{"32":{}},"component":{}}],["tebibyt",{"_index":1097,"title":{},"name":{},"text":{"20":{}},"component":{}}],["technic",{"_index":1355,"title":{},"name":{},"text":{"20":{},"21":{}},"component":{}}],["techniqu",{"_index":2336,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tediou",{"_index":1002,"title":{},"name":{},"text":{"20":{}},"component":{}}],["teen",{"_index":1414,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tell",{"_index":471,"title":{},"name":{},"text":{"13":{},"20":{},"21":{},"22":{}},"component":{}}],["templat",{"_index":29,"title":{"22":{},"23":{},"11-9":{},"22-4":{},"23-3":{}},"name":{},"text":{"2":{},"9":{},"11":{},"13":{},"20":{},"22":{},"23":{},"24":{},"32":{},"75":{}},"component":{}}],["template.pkl",{"_index":1950,"title":{},"name":{},"text":{"20":{}},"component":{}}],["template1.pkl",{"_index":2694,"title":{},"name":{},"text":{"28":{}},"component":{}}],["template2.pkl",{"_index":2671,"title":{},"name":{},"text":{"28":{}},"component":{}}],["temporarili",{"_index":2165,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tend",{"_index":319,"title":{},"name":{},"text":{"11":{},"75":{}},"component":{}}],["tent",{"_index":2101,"title":{},"name":{},"text":{"20":{}},"component":{}}],["terabyt",{"_index":1085,"title":{},"name":{},"text":{"20":{}},"component":{}}],["term",{"_index":327,"title":{},"name":{},"text":{"11":{},"20":{},"22":{},"27":{},"65":{},"70":{}},"component":{}}],["termin",{"_index":345,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["terminolog",{"_index":2295,"title":{},"name":{},"text":{"22":{}},"component":{}}],["ternari",{"_index":1643,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test",{"_index":738,"title":{"20-84":{},"25-11":{},"28-5":{}},"name":{},"text":{"16":{},"19":{},"20":{},"25":{},"26":{},"28":{}},"component":{}}],["test1",{"_index":1700,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test10",{"_index":1709,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test2",{"_index":1701,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test3",{"_index":1702,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test4",{"_index":1703,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test5",{"_index":1704,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test6",{"_index":1705,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test7",{"_index":1706,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test8",{"_index":1707,"title":{},"name":{},"text":{"20":{}},"component":{}}],["test9",{"_index":1708,"title":{},"name":{},"text":{"20":{}},"component":{}}],["testpkl",{"_index":2658,"title":{},"name":{},"text":{"28":{}},"component":{}}],["text",{"_index":674,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"22":{},"25":{},"26":{},"28":{},"75":{}},"component":{}}],["text(\"foo",{"_index":3139,"title":{},"name":{},"text":{"70":{}},"component":{}}],["textmat",{"_index":2506,"title":{},"name":{},"text":{"25":{}},"component":{}}],["textoutput",{"_index":3048,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["textproto",{"_index":2448,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["textsourc",{"_index":3056,"title":{},"name":{},"text":{"65":{}},"component":{}}],["textual",{"_index":3012,"title":{"65-6":{},"70-6":{}},"name":{},"text":{"65":{},"70":{},"75":{}},"component":{}}],["textual/fil",{"_index":3051,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["thank",{"_index":1365,"title":{},"name":{},"text":{"20":{}},"component":{}}],["that’",{"_index":452,"title":{},"name":{},"text":{"13":{},"22":{}},"component":{}}],["themselv",{"_index":1938,"title":{},"name":{},"text":{"20":{},"22":{},"23":{}},"component":{}}],["therebi",{"_index":1910,"title":{},"name":{},"text":{"20":{}},"component":{}}],["therefor",{"_index":1290,"title":{},"name":{},"text":{"20":{},"64":{},"67":{}},"component":{}}],["therein",{"_index":2456,"title":{},"name":{},"text":{"25":{},"28":{}},"component":{}}],["thereof",{"_index":690,"title":{},"name":{},"text":{"16":{}},"component":{}}],["there’",{"_index":78,"title":{},"name":{},"text":{"6":{},"75":{}},"component":{}}],["thing",{"_index":366,"title":{},"name":{},"text":{"11":{},"21":{},"23":{}},"component":{}}],["think",{"_index":1165,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"75":{}},"component":{}}],["third",{"_index":255,"title":{},"name":{},"text":{"9":{},"16":{},"20":{}},"component":{}}],["this.databas",{"_index":3302,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.dbnam",{"_index":3310,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.environ",{"_index":3301,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.host",{"_index":3309,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.hostnam",{"_index":3299,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.nam",{"_index":2009,"title":{},"name":{},"text":{"20":{}},"component":{}}],["this.password",{"_index":3308,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.port",{"_index":3300,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.speciesnam",{"_index":1306,"title":{},"name":{},"text":{"20":{}},"component":{}}],["this.usernam",{"_index":3307,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this.valu",{"_index":3315,"title":{},"name":{},"text":{"75":{}},"component":{}}],["this[\"pigeon",{"_index":1386,"title":{},"name":{},"text":{"20":{}},"component":{}}],["this[0",{"_index":1338,"title":{},"name":{},"text":{"20":{}},"component":{}}],["those",{"_index":281,"title":{},"name":{},"text":{"9":{},"14":{},"17":{},"21":{},"25":{},"27":{},"28":{}},"component":{}}],["though",{"_index":2323,"title":{},"name":{},"text":{"22":{}},"component":{}}],["thought",{"_index":1994,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["thr",{"_index":2910,"title":{},"name":{},"text":{"53":{},"60":{}},"component":{}}],["three",{"_index":833,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{},"75":{}},"component":{}}],["through",{"_index":401,"title":{},"name":{},"text":{"11":{},"13":{},"16":{},"20":{},"23":{},"25":{},"36":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["throughout",{"_index":2552,"title":{},"name":{},"text":{"27":{}},"component":{}}],["throw",{"_index":1549,"title":{},"name":{},"text":{"20":{},"22":{},"53":{},"60":{},"70":{},"72":{},"73":{}},"component":{}}],["throw(\"pipelin",{"_index":2302,"title":{},"name":{},"text":{"22":{}},"component":{}}],["throw(\"todo",{"_index":1862,"title":{},"name":{},"text":{"20":{}},"component":{}}],["throw(\"you",{"_index":1677,"title":{},"name":{},"text":{"20":{}},"component":{}}],["thrown",{"_index":643,"title":{},"name":{},"text":{"16":{},"20":{},"26":{}},"component":{}}],["thu",{"_index":1497,"title":{},"name":{},"text":{"20":{}},"component":{}}],["thumb",{"_index":1525,"title":{},"name":{},"text":{"20":{}},"component":{}}],["ti",{"_index":1289,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["till",{"_index":231,"title":{},"name":{},"text":{"9":{}},"component":{}}],["time",{"_index":271,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"14":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"64":{}},"component":{}}],["timeout",{"_index":610,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"22":{},"25":{},"27":{},"28":{}},"component":{}}],["titl",{"_index":2376,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tl",{"_index":623,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["tobi",{"_index":2000,"title":{},"name":{},"text":{"20":{}},"component":{}}],["today",{"_index":3326,"title":{},"name":{},"text":{"75":{}},"component":{}}],["todo",{"_index":1861,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["todo_replace_m",{"_index":3165,"title":{},"name":{},"text":{"73":{}},"component":{}}],["todynam",{"_index":1213,"title":{},"name":{},"text":{"20":{}},"component":{}}],["togeth",{"_index":92,"title":{},"name":{},"text":{"7":{},"10":{},"16":{},"17":{},"21":{},"23":{},"25":{},"27":{},"28":{},"36":{},"75":{}},"component":{}}],["token",{"_index":2013,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tolist",{"_index":1345,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tomap",{"_index":1211,"title":{},"name":{},"text":{"20":{}},"component":{}}],["toml",{"_index":2963,"title":{},"name":{},"text":{"64":{},"75":{}},"component":{}}],["toml.render",{"_index":3246,"title":{},"name":{},"text":{"75":{}},"component":{}}],["toml/toml.pkl",{"_index":3250,"title":{},"name":{},"text":{"75":{}},"component":{}}],["toml:\"firstname,omitempti",{"_index":2966,"title":{},"name":{},"text":{"64":{}},"component":{}}],["tomlfield",{"_index":2967,"title":{},"name":{},"text":{"64":{}},"component":{}}],["took",{"_index":2111,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tool",{"_index":55,"title":{"8":{}},"name":{"8":{}},"text":{"2":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{},"26":{},"27":{},"32":{},"36":{},"75":{}},"component":{}}],["top",{"_index":1398,"title":{},"name":{},"text":{"20":{},"22":{},"25":{},"35":{}},"component":{}}],["topic",{"_index":803,"title":{"20-82":{}},"name":{},"text":{"20":{},"24":{},"75":{}},"component":{}}],["toplevelproperty.subvalu",{"_index":2612,"title":{},"name":{},"text":{"28":{}},"component":{}}],["torrap",{"_index":1393,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tortois",{"_index":1145,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tortoise.taxonomi",{"_index":1149,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tortoise.taxonomy.class",{"_index":1151,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tostr",{"_index":486,"title":{},"name":{},"text":{"14":{},"75":{}},"component":{}}],["totyp",{"_index":1247,"title":{},"name":{},"text":{"20":{}},"component":{}}],["totyped(bird",{"_index":1248,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tour",{"_index":3174,"title":{"75-1":{}},"name":{},"text":{},"component":{}}],["toward",{"_index":283,"title":{},"name":{},"text":{"9":{}},"component":{}}],["trace",{"_index":1681,"title":{},"name":{},"text":{"20":{},"25":{},"46":{},"47":{}},"component":{}}],["trace(\"defin",{"_index":2133,"title":{},"name":{},"text":{"20":{}},"component":{}}],["trace(num1",{"_index":1684,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tradit",{"_index":1663,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tradition",{"_index":1665,"title":{},"name":{},"text":{"20":{}},"component":{}}],["trail",{"_index":994,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["transform",{"_index":782,"title":{"20-17":{},"20-28":{},"20-36":{}},"name":{},"text":{"20":{}},"component":{}}],["transit",{"_index":566,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["transitit",{"_index":1216,"title":{},"name":{},"text":{"20":{}},"component":{}}],["transitivemodul",{"_index":2601,"title":{},"name":{},"text":{"28":{}},"component":{}}],["transitivemodules.from",{"_index":2593,"title":{},"name":{},"text":{"28":{}},"component":{}}],["transitivemodules.from(file(\"module2.pkl",{"_index":2598,"title":{},"name":{},"text":{"28":{}},"component":{}}],["translat",{"_index":2201,"title":{},"name":{},"text":{"21":{}},"component":{}}],["treat",{"_index":614,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["tree",{"_index":481,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"57":{},"58":{}},"component":{}}],["treesitt",{"_index":2917,"title":{},"name":{},"text":{"58":{}},"component":{}}],["treesitter.config",{"_index":2933,"title":{},"name":{},"text":{"58":{}},"component":{}}],["treesitter/nvim",{"_index":2925,"title":{},"name":{},"text":{"58":{}},"component":{}}],["tremend",{"_index":3188,"title":{},"name":{},"text":{"75":{}},"component":{}}],["tri",{"_index":650,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"23":{},"26":{},"27":{},"70":{},"72":{},"73":{},"75":{}},"component":{}}],["trigger",{"_index":444,"title":{},"name":{},"text":{"13":{}},"component":{}}],["trim",{"_index":1016,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tripl",{"_index":791,"title":{"20-55":{}},"name":{},"text":{"20":{},"32":{}},"component":{}}],["true",{"_index":931,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"28":{},"58":{}},"component":{}}],["true.implies(fals",{"_index":943,"title":{},"name":{},"text":{"20":{}},"component":{}}],["true.xor(fals",{"_index":941,"title":{},"name":{},"text":{"20":{}},"component":{}}],["trust",{"_index":290,"title":{},"name":{},"text":{"9":{},"20":{}},"component":{}}],["tsupdat",{"_index":2926,"title":{},"name":{},"text":{"58":{}},"component":{}}],["turn",{"_index":181,"title":{"64-7":{},"69-2":{}},"name":{},"text":{"9":{},"11":{},"20":{},"23":{},"32":{},"64":{},"69":{},"70":{}},"component":{}}],["turtl",{"_index":1159,"title":{},"name":{},"text":{"20":{}},"component":{}}],["tutori",{"_index":76,"title":{"24":{}},"name":{},"text":{"5":{},"20":{},"21":{},"22":{},"23":{},"24":{},"75":{}},"component":{}}],["tutorialpart",{"_index":2354,"title":{},"name":{},"text":{"23":{}},"component":{}}],["tutorialpart.pkl",{"_index":2370,"title":{},"name":{},"text":{"23":{}},"component":{}}],["twice",{"_index":1997,"title":{},"name":{},"text":{"20":{}},"component":{}}],["two",{"_index":272,"title":{},"name":{},"text":{"9":{},"14":{},"17":{},"20":{},"21":{},"23":{},"25":{},"27":{},"28":{},"32":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["txt",{"_index":2032,"title":{},"name":{},"text":{"20":{}},"component":{}}],["type",{"_index":254,"title":{"20-18":{},"20-30":{},"20-38":{},"20-73":{},"20-84":{},"20-85":{},"20-90":{},"20-91":{},"20-92":{},"20-93":{},"20-94":{},"20-95":{},"20-96":{},"20-97":{},"20-98":{},"20-99":{},"20-100":{},"20-101":{},"20-104":{},"20-105":{},"23-1":{},"23-2":{},"37-6":{},"37-9":{},"64-8":{},"69-3":{}},"name":{},"text":{"9":{},"10":{},"11":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"28":{},"32":{},"36":{},"40":{},"43":{},"48":{},"53":{},"54":{},"55":{},"61":{},"62":{},"64":{},"65":{},"69":{},"70":{},"75":{}},"component":{}}],["type'",{"_index":1891,"title":{},"name":{},"text":{"20":{}},"component":{}}],["typealia",{"_index":1792,"title":{},"name":{},"text":{"20":{},"23":{},"32":{},"64":{},"69":{},"75":{}},"component":{}}],["typealias",{"_index":2035,"title":{},"name":{},"text":{"20":{},"69":{}},"component":{}}],["typed.todynam",{"_index":2186,"title":{},"name":{},"text":{"20":{}},"component":{}}],["type’",{"_index":1875,"title":{},"name":{},"text":{"20":{}},"component":{}}],["typic",{"_index":839,"title":{},"name":{},"text":{"20":{},"21":{},"23":{},"25":{},"32":{},"36":{}},"component":{}}],["u",{"_index":963,"title":{},"name":{},"text":{"20":{}},"component":{}}],["uax31",{"_index":2037,"title":{},"name":{},"text":{"20":{}},"component":{}}],["uint",{"_index":1252,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["uint16",{"_index":901,"title":{},"name":{},"text":{"20":{},"36":{},"64":{},"67":{},"69":{},"73":{},"75":{}},"component":{}}],["uint32",{"_index":1812,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["uint8",{"_index":1809,"title":{},"name":{},"text":{"20":{},"64":{},"69":{}},"component":{}}],["ultisnip",{"_index":2937,"title":{},"name":{},"text":{"60":{}},"component":{}}],["unari",{"_index":2816,"title":{},"name":{},"text":{"32":{}},"component":{}}],["unchang",{"_index":356,"title":{},"name":{},"text":{"11":{}},"component":{}}],["uncom",{"_index":2873,"title":{},"name":{},"text":{"40":{}},"component":{}}],["undefin",{"_index":1847,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["under",{"_index":391,"title":{},"name":{},"text":{"11":{},"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"43":{}},"component":{}}],["undergo",{"_index":2433,"title":{},"name":{},"text":{"25":{}},"component":{}}],["underli",{"_index":3018,"title":{},"name":{},"text":{"65":{},"70":{}},"component":{}}],["underpin",{"_index":1356,"title":{},"name":{},"text":{"20":{}},"component":{}}],["underscor",{"_index":868,"title":{},"name":{},"text":{"20":{}},"component":{}}],["understand",{"_index":322,"title":{},"name":{},"text":{"11":{},"20":{},"75":{}},"component":{}}],["unexpect",{"_index":2291,"title":{},"name":{},"text":{"22":{}},"component":{}}],["unfortun",{"_index":846,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["unicod",{"_index":950,"title":{},"name":{},"text":{"20":{},"27":{}},"component":{}}],["unicode’",{"_index":2036,"title":{},"name":{},"text":{"20":{}},"component":{}}],["union",{"_index":808,"title":{"20-98":{}},"name":{},"text":{"20":{},"32":{},"64":{},"69":{}},"component":{}}],["uniqu",{"_index":1440,"title":{},"name":{},"text":{"20":{},"25":{}},"component":{}}],["unit",{"_index":1018,"title":{},"name":{},"text":{"20":{},"23":{}},"component":{}}],["univers",{"_index":3166,"title":{},"name":{},"text":{"73":{}},"component":{}}],["unknown",{"_index":810,"title":{"20-101":{}},"name":{},"text":{"20":{},"32":{},"64":{},"69":{}},"component":{}}],["unless",{"_index":1496,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{}}],["unlik",{"_index":635,"title":{},"name":{},"text":{"16":{},"20":{},"21":{},"23":{}},"component":{}}],["unlist",{"_index":2088,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unmatch",{"_index":706,"title":{},"name":{},"text":{"16":{}},"component":{}}],["unnam",{"_index":2407,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unnecessari",{"_index":2790,"title":{},"name":{},"text":{"32":{}},"component":{}}],["unpack",{"_index":1985,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unreleas",{"_index":2712,"title":{"30-1":{},"49-1":{}},"name":{},"text":{},"component":{}}],["unstructur",{"_index":2338,"title":{},"name":{},"text":{"23":{}},"component":{}}],["unsurprisingli",{"_index":2384,"title":{},"name":{},"text":{"23":{}},"component":{}}],["until",{"_index":370,"title":{},"name":{},"text":{"11":{},"20":{},"25":{},"28":{}},"component":{}}],["untouch",{"_index":1198,"title":{},"name":{},"text":{"20":{}},"component":{}}],["untyp",{"_index":1244,"title":{},"name":{},"text":{"20":{}},"component":{}}],["unus",{"_index":2770,"title":{},"name":{},"text":{"32":{}},"component":{}}],["up",{"_index":269,"title":{},"name":{},"text":{"9":{},"11":{},"20":{},"23":{},"24":{},"25":{},"28":{},"67":{},"73":{}},"component":{}}],["up/down",{"_index":2561,"title":{},"name":{},"text":{"27":{}},"component":{}}],["updat",{"_index":2007,"title":{},"name":{},"text":{"20":{}},"component":{}}],["upload",{"_index":2162,"title":{},"name":{},"text":{"20":{},"75":{}},"component":{}}],["upon",{"_index":632,"title":{},"name":{},"text":{"16":{}},"component":{}}],["upper",{"_index":2351,"title":{},"name":{},"text":{"23":{}},"component":{}}],["upstream",{"_index":1194,"title":{},"name":{},"text":{"20":{}},"component":{}}],["upward",{"_index":2106,"title":{},"name":{},"text":{"20":{}},"component":{}}],["uri",{"_index":524,"title":{"20-45":{},"20-46":{},"20-47":{},"20-48":{},"20-49":{},"20-50":{},"20-51":{},"20-52":{},"20-55":{},"32-10":{},"37-2":{},"43-2":{}},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"26":{},"27":{},"28":{},"32":{},"40":{},"43":{},"75":{}},"component":{}}],["uri’",{"_index":2475,"title":{},"name":{},"text":{"25":{}},"component":{}}],["url",{"_index":563,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"20":{},"25":{},"27":{},"28":{},"46":{},"47":{}},"component":{}}],["us",{"_index":31,"title":{"13":{},"70-1":{}},"name":{"13":{}},"text":{"2":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"32":{},"36":{},"40":{},"43":{},"58":{},"60":{},"64":{},"65":{},"66":{},"67":{},"69":{},"70":{},"73":{},"75":{}},"component":{}}],["usabl",{"_index":315,"title":{"11-10":{}},"name":{},"text":{"11":{}},"component":{}}],["usag",{"_index":474,"title":{"36":{},"14-7":{},"16-4":{},"17-7":{},"19-4":{},"25-7":{},"26-4":{},"27-9":{},"28-3":{},"28-6":{},"28-8":{},"28-11":{},"28-14":{},"28-17":{},"28-20":{}},"name":{"36":{}},"text":{"32":{},"43":{},"64":{}},"component":{}}],["user",{"_index":11,"title":{"2":{}},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"32":{},"75":{}},"component":{}}],["usernam",{"_index":3212,"title":{},"name":{},"text":{"75":{}},"component":{}}],["users/me/tutorial/cicd.pkl",{"_index":2333,"title":{},"name":{},"text":{"22":{}},"component":{}}],["users/me/tutorial/intro.pkl",{"_index":2196,"title":{},"name":{},"text":{"21":{}},"component":{}}],["users/me/tutorial/mixedobject.pkl",{"_index":2233,"title":{},"name":{},"text":{"21":{}},"component":{}}],["users/me/tutorial/parrot.pkl",{"_index":2293,"title":{},"name":{},"text":{"22":{}},"component":{}}],["users/me/tutorial/pigeon.pkl",{"_index":2292,"title":{},"name":{},"text":{"22":{}},"component":{}}],["usual",{"_index":1258,"title":{},"name":{},"text":{"20":{}},"component":{}}],["utf",{"_index":2757,"title":{},"name":{},"text":{"32":{}},"component":{}}],["u{12af",{"_index":1009,"title":{},"name":{},"text":{"20":{}},"component":{}}],["u{1f600",{"_index":968,"title":{},"name":{},"text":{"20":{}},"component":{}}],["u{26",{"_index":966,"title":{},"name":{},"text":{"20":{}},"component":{}}],["u{e9",{"_index":967,"title":{},"name":{},"text":{"20":{}},"component":{}}],["v",{"_index":616,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{},"65":{},"69":{}},"component":{}}],["v\\n",{"_index":3033,"title":{},"name":{},"text":{"65":{}},"component":{}}],["val",{"_index":752,"title":{},"name":{},"text":{"19":{},"75":{}},"component":{}}],["valid",{"_index":30,"title":{"45":{},"75-2":{}},"name":{"45":{}},"text":{"2":{},"9":{},"11":{},"12":{},"13":{},"16":{},"19":{},"20":{},"23":{},"25":{},"26":{},"27":{},"28":{},"46":{},"75":{}},"component":{}}],["valid.pkl",{"_index":1304,"title":{},"name":{},"text":{"20":{}},"component":{}}],["validated[3",{"_index":1224,"title":{},"name":{},"text":{"20":{}},"component":{}}],["valu",{"_index":351,"title":{"16-7":{},"20-37":{},"20-68":{},"20-103":{},"20-109":{},"20-126":{},"21-1":{}},"name":{},"text":{"11":{},"16":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"32":{},"64":{},"69":{},"75":{}},"component":{}}],["value.memb",{"_index":1626,"title":{},"name":{},"text":{"20":{}},"component":{}}],["value?.memb",{"_index":1625,"title":{},"name":{},"text":{"20":{}},"component":{}}],["valuemapp",{"_index":687,"title":{},"name":{},"text":{"16":{}},"component":{}}],["valuemapper.preconfigur",{"_index":692,"title":{},"name":{},"text":{"16":{}},"component":{}}],["valuemapperbuild",{"_index":734,"title":{},"name":{},"text":{"16":{}},"component":{}}],["valuerender",{"_index":1583,"title":{},"name":{},"text":{"20":{}},"component":{}}],["valuetyp",{"_index":1394,"title":{},"name":{},"text":{"20":{}},"component":{}}],["valuevisitor",{"_index":2530,"title":{},"name":{},"text":{"26":{}},"component":{}}],["var",{"_index":579,"title":{},"name":{},"text":{"14":{},"16":{},"17":{},"25":{},"26":{},"27":{},"65":{},"75":{}},"component":{}}],["vararg",{"_index":2122,"title":{},"name":{},"text":{"20":{}},"component":{}}],["vari",{"_index":2369,"title":{},"name":{},"text":{"23":{}},"component":{}}],["variabl",{"_index":581,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{},"44":{}},"component":{}}],["variable’",{"_index":1623,"title":{},"name":{},"text":{"20":{}},"component":{}}],["variant",{"_index":1962,"title":{},"name":{},"text":{"20":{}},"component":{}}],["variat",{"_index":2984,"title":{},"name":{},"text":{"64":{},"69":{},"75":{}},"component":{}}],["variou",{"_index":3330,"title":{},"name":{},"text":{"75":{}},"component":{}}],["verb",{"_index":2879,"title":{},"name":{},"text":{"40":{}},"component":{}}],["verbatim",{"_index":961,"title":{},"name":{},"text":{"20":{}},"component":{}}],["verbos",{"_index":439,"title":{},"name":{},"text":{"13":{},"22":{}},"component":{}}],["veri",{"_index":141,"title":{},"name":{},"text":{"9":{},"20":{},"22":{},"23":{}},"component":{}}],["verifi",{"_index":2901,"title":{},"name":{},"text":{"51":{}},"component":{}}],["version",{"_index":90,"title":{},"name":{},"text":{"7":{},"14":{},"16":{},"17":{},"19":{},"20":{},"25":{},"27":{},"28":{},"35":{},"36":{},"39":{},"51":{},"58":{},"75":{}},"component":{}}],["via",{"_index":1445,"title":{},"name":{},"text":{"20":{},"25":{},"32":{},"57":{},"64":{},"65":{},"67":{},"70":{},"73":{},"75":{}},"component":{}}],["view",{"_index":1666,"title":{"40-2":{}},"name":{},"text":{"20":{},"40":{}},"component":{}}],["vim",{"_index":2913,"title":{},"name":{},"text":{"57":{},"58":{}},"component":{}}],["violat",{"_index":1819,"title":{},"name":{},"text":{"20":{},"22":{},"23":{},"75":{}},"component":{}}],["visibl",{"_index":1383,"title":{},"name":{},"text":{"20":{}},"component":{}}],["vision",{"_index":466,"title":{},"name":{},"text":{"13":{}},"component":{}}],["visit",{"_index":81,"title":{},"name":{},"text":{"6":{}},"component":{}}],["visitor",{"_index":385,"title":{},"name":{},"text":{"11":{}},"component":{}}],["visual",{"_index":197,"title":{},"name":{},"text":{"9":{},"11":{},"50":{},"51":{}},"component":{}}],["vs",{"_index":118,"title":{"50":{},"9-1":{},"9-2":{},"9-3":{},"32-7":{}},"name":{},"text":{"20":{},"50":{},"51":{},"75":{}},"component":{}}],["vscode",{"_index":116,"title":{},"name":{},"text":{"8":{},"25":{}},"component":{"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{}}}],["vscode/releases/new",{"_index":2899,"title":{},"name":{},"text":{"51":{}},"component":{}}],["vsix",{"_index":2897,"title":{},"name":{},"text":{"51":{}},"component":{}}],["w",{"_index":617,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["w3c",{"_index":2250,"title":{},"name":{},"text":{"21":{}},"component":{}}],["walk",{"_index":2834,"title":{},"name":{},"text":{"36":{}},"component":{}}],["walkthrough",{"_index":2584,"title":{},"name":{},"text":{"27":{}},"component":{}}],["want",{"_index":2207,"title":{},"name":{},"text":{"21":{},"22":{},"23":{},"75":{}},"component":{}}],["warn/trac",{"_index":3062,"title":{},"name":{},"text":{"65":{}},"component":{}}],["way",{"_index":146,"title":{},"name":{},"text":{"9":{},"16":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"36":{},"64":{},"65":{},"66":{},"69":{},"75":{}},"component":{}}],["weak",{"_index":131,"title":{},"name":{},"text":{"9":{}},"component":{}}],["web",{"_index":3208,"title":{},"name":{},"text":{"75":{}},"component":{}}],["websit",{"_index":2532,"title":{},"name":{},"text":{"27":{}},"component":{}}],["webstorm",{"_index":3323,"title":{},"name":{},"text":{"75":{}},"component":{}}],["weight",{"_index":1287,"title":{},"name":{},"text":{"20":{}},"component":{}}],["welcom",{"_index":2411,"title":{},"name":{},"text":{"24":{},"25":{}},"component":{}}],["well",{"_index":139,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"25":{},"28":{},"67":{}},"component":{}}],["we’d",{"_index":1,"title":{},"name":{},"text":{"1":{}},"component":{}}],["we’r",{"_index":3332,"title":{},"name":{},"text":{"75":{}},"component":{}}],["we’v",{"_index":3206,"title":{},"name":{},"text":{"75":{}},"component":{}}],["what’",{"_index":67,"title":{},"name":{},"text":{"2":{}},"component":{}}],["whenev",{"_index":1201,"title":{},"name":{},"text":{"20":{}},"component":{}}],["wherea",{"_index":1197,"title":{},"name":{},"text":{"20":{},"23":{},"25":{},"65":{},"70":{}},"component":{}}],["whether",{"_index":451,"title":{},"name":{},"text":{"13":{},"14":{},"20":{},"22":{},"25":{},"28":{},"32":{}},"component":{}}],["which—unlik",{"_index":2004,"title":{},"name":{},"text":{"20":{}},"component":{}}],["whistl",{"_index":1969,"title":{},"name":{},"text":{"20":{}},"component":{}}],["white",{"_index":2131,"title":{},"name":{},"text":{"20":{}},"component":{}}],["whitespac",{"_index":995,"title":{},"name":{},"text":{"20":{}},"component":{}}],["whole",{"_index":2936,"title":{},"name":{},"text":{"58":{}},"component":{}}],["whose",{"_index":922,"title":{},"name":{},"text":{"20":{},"27":{},"70":{},"75":{}},"component":{}}],["wide",{"_index":156,"title":{},"name":{},"text":{"9":{},"11":{}},"component":{}}],["width",{"_index":2736,"title":{"32-26":{}},"name":{},"text":{},"component":{}}],["wildcard",{"_index":819,"title":{"20-116":{}},"name":{},"text":{"20":{}},"component":{}}],["window",{"_index":595,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["wing",{"_index":2227,"title":{},"name":{},"text":{"21":{}},"component":{}}],["wingspan",{"_index":1286,"title":{},"name":{},"text":{"20":{}},"component":{}}],["wingspanweightratio",{"_index":1288,"title":{},"name":{},"text":{"20":{}},"component":{}}],["wise",{"_index":484,"title":{},"name":{},"text":{"14":{}},"component":{}}],["wish",{"_index":3244,"title":{},"name":{},"text":{"75":{}},"component":{}}],["withdiet",{"_index":1929,"title":{},"name":{},"text":{"20":{}},"component":{}}],["withdiet(\"mic",{"_index":1937,"title":{},"name":{},"text":{"20":{}},"component":{}}],["withdiet(\"se",{"_index":1935,"title":{},"name":{},"text":{"20":{}},"component":{}}],["withdiet(_diet",{"_index":1932,"title":{},"name":{},"text":{"20":{}},"component":{}}],["withdiettyp",{"_index":1927,"title":{},"name":{},"text":{"20":{}},"component":{}}],["withevalu",{"_index":3127,"title":{},"name":{},"text":{"70":{}},"component":{}}],["within",{"_index":1303,"title":{"32-28":{}},"name":{},"text":{"20":{},"25":{},"27":{},"28":{},"32":{},"43":{},"65":{},"67":{},"70":{},"75":{}},"component":{}}],["without",{"_index":1291,"title":{"65-4":{},"70-4":{}},"name":{},"text":{"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"32":{},"65":{},"70":{}},"component":{}}],["wolfgang",{"_index":1970,"title":{},"name":{},"text":{"20":{}},"component":{}}],["won't",{"_index":1678,"title":{},"name":{},"text":{"20":{}},"component":{}}],["wood",{"_index":1169,"title":{},"name":{},"text":{"20":{},"21":{},"22":{}},"component":{}}],["woodpigeon",{"_index":2270,"title":{},"name":{},"text":{"22":{}},"component":{}}],["word",{"_index":998,"title":{},"name":{},"text":{"20":{},"21":{},"22":{},"28":{}},"component":{}}],["work",{"_index":137,"title":{"25-23":{}},"name":{},"text":{"9":{},"14":{},"16":{},"17":{},"20":{},"21":{},"22":{},"25":{},"27":{},"28":{},"34":{},"51":{},"64":{}},"component":{}}],["workshop",{"_index":2374,"title":{},"name":{},"text":{"23":{}},"component":{}}],["workshop.pkl",{"_index":2406,"title":{},"name":{},"text":{"23":{}},"component":{}}],["workshop2023.pkl",{"_index":2375,"title":{},"name":{},"text":{"23":{}},"component":{}}],["world",{"_index":362,"title":{},"name":{},"text":{"11":{},"20":{},"25":{},"75":{}},"component":{}}],["worm",{"_index":1335,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["worst",{"_index":365,"title":{},"name":{},"text":{"11":{}},"component":{}}],["wrap",{"_index":1131,"title":{},"name":{},"text":{"20":{}},"component":{}}],["write",{"_index":145,"title":{"23":{}},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"36":{},"75":{}},"component":{}}],["written",{"_index":202,"title":{},"name":{},"text":{"9":{},"20":{},"22":{},"23":{},"25":{},"28":{},"64":{},"75":{}},"component":{}}],["wrong",{"_index":1238,"title":{},"name":{},"text":{"20":{}},"component":{}}],["x",{"_index":924,"title":{},"name":{},"text":{"20":{},"25":{},"67":{},"73":{}},"component":{}}],["x(\"foo",{"_index":2104,"title":{},"name":{},"text":{"20":{}},"component":{}}],["x.509",{"_index":627,"title":{},"name":{},"text":{"14":{},"17":{},"25":{},"27":{}},"component":{}}],["x.mb",{"_index":1112,"title":{},"name":{},"text":{"20":{}},"component":{}}],["x.min",{"_index":1062,"title":{},"name":{},"text":{"20":{}},"component":{}}],["x.y.z",{"_index":2586,"title":{},"name":{},"text":{"28":{}},"component":{}}],["xmegabyt",{"_index":1111,"title":{},"name":{},"text":{"20":{}},"component":{}}],["xminut",{"_index":1061,"title":{},"name":{},"text":{"20":{}},"component":{}}],["xml",{"_index":136,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"25":{},"28":{}},"component":{}}],["xml.render",{"_index":1582,"title":{},"name":{},"text":{"20":{}},"component":{}}],["xor",{"_index":935,"title":{},"name":{},"text":{"20":{}},"component":{}}],["xykibibyt",{"_index":1113,"title":{},"name":{},"text":{"20":{}},"component":{}}],["xysecond",{"_index":1064,"title":{},"name":{},"text":{"20":{}},"component":{}}],["y",{"_index":1063,"title":{},"name":{},"text":{"20":{}},"component":{}}],["y).",{"_index":1065,"title":{},"name":{},"text":{"20":{}},"component":{}}],["y).kib",{"_index":1114,"title":{},"name":{},"text":{"20":{}},"component":{}}],["yaml",{"_index":135,"title":{},"name":{},"text":{"9":{},"11":{},"13":{},"20":{},"23":{},"25":{},"28":{},"34":{},"75":{}},"component":{}}],["yamlrender",{"_index":1575,"title":{},"name":{},"text":{"20":{},"22":{},"26":{}},"component":{}}],["year",{"_index":2389,"title":{},"name":{},"text":{"23":{}},"component":{}}],["yml",{"_index":2026,"title":{},"name":{},"text":{"20":{},"22":{}},"component":{}}],["yourself",{"_index":456,"title":{},"name":{},"text":{"13":{},"75":{}},"component":{}}],["you’d",{"_index":3199,"title":{},"name":{},"text":{"75":{}},"component":{}}],["you’r",{"_index":2246,"title":{},"name":{},"text":{"21":{},"22":{}},"component":{}}],["you’v",{"_index":2321,"title":{},"name":{},"text":{"22":{},"23":{}},"component":{}}],["y{a,}ml",{"_index":2025,"title":{},"name":{},"text":{"20":{}},"component":{}}],["zebra",{"_index":2802,"title":{},"name":{},"text":{"32":{}},"component":{}}],["zebraparti",{"_index":2807,"title":{},"name":{},"text":{"32":{}},"component":{}}],["zero",{"_index":347,"title":{},"name":{},"text":{"11":{},"20":{}},"component":{}}],["zip",{"_index":590,"title":{},"name":{},"text":{"14":{},"17":{},"20":{},"25":{},"27":{},"28":{}},"component":{}}],["zip.sha256",{"_index":2472,"title":{},"name":{},"text":{"25":{}},"component":{}}],["zip1.zip",{"_index":1452,"title":{},"name":{},"text":{"20":{},"28":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"We’d love to hear from you! Create an issue Ask questions on GitHub Discussions","title":"Community","component":"main","version":"0.25.0-dev","name":"community","url":"/main/current/community.html","titles":[]},"2":{"id":2,"text":"Quick Links: Installation | Language Reference Pkl — pronounced Pickle — is an embeddable configuration language which provides rich support for data templating and validation. It can be used from the command line, integrated in a build pipeline, or embedded in a program. Pkl scales from small to large, simple to complex, ad-hoc to repetitive configuration tasks. Introduction Why we created Pkl and what it can do for you. Language Get to know the language and standard library. Bindings Libraries for embedding Pkl into general-purpose languages. Tools CLI, Gradle plugin, code generators, and other tools. Examples Ready-to-go examples with full source code. Release Notes What’s new in each release.","title":"User Manual","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/index.html","titles":[]},"3":{"id":3,"text":"Spring (Boot) Integration","title":"Framework Integrations","component":"main","version":"0.25.0-dev","name":"integrations","url":"/main/current/integrations.html","titles":[]},"4":{"id":4,"text":"Java Kotlin Swift Go","title":"Language Bindings","component":"main","version":"0.25.0-dev","name":"language-bindings","url":"/main/current/language-bindings.html","titles":[]},"5":{"id":5,"text":"Language Tutorial Language Reference Standard Library","title":"Language","component":"main","version":"0.25.0-dev","name":"language","url":"/main/current/language.html","titles":[]},"6":{"id":6,"text":"There’s more to explore! Visit Pkl’s repositories on GitHub Browse the standard library’s API Docs","title":"Resources","component":"main","version":"0.25.0-dev","name":"resources","url":"/main/current/resources.html","titles":[]},"7":{"id":7,"text":"The standard library is a set of Pkl modules, versioned and distributed together with the language. It is documented in the API Docs. To import a standard library module, use import \"pkl:\". For example, import \"pkl:json\" imports the pkl.json module. The pkl.base module defines the most fundamental properties, methods, and classes for using Pkl. Its members are automatically available in every module and hence, it does not need to be imported. The default module allowlist (--allowed-modules) grants access to all standard library modules.","title":"Standard Library","component":"main","version":"0.25.0-dev","name":"standard-library","url":"/main/current/standard-library.html","titles":[]},"8":{"id":8,"text":"CLI Pkldoc Gradle Plugin Editor support IntelliJ VSCode Neovim","title":"Tools","component":"main","version":"0.25.0-dev","name":"tools","url":"/main/current/tools.html","titles":[]},"9":{"id":9,"text":"Configuration is often described in a static configuration format or is generated with a general-purpose programming language. This page lists shortcomings of these approaches and explains how Pkl addresses them. Also, Pkl’s strong and weak points in comparison to other configuration languages are discussed in this document. Static configuration formats such as JSON, YAML, and XML work reasonably well for simple configuration needs. However, they do have some shortcomings, including: They are not very human-friendly to read and write. (JSON, XML) They do not provide a way to split a large file into multiple smaller ones. (JSON, YAML) They offer no way or very limited ways to abstract over repetitive configuration. (JSON, YAML, XML) They do not offer standardized or widely available schema validators. (JSON, YAML) They offer little or no schema-aware tooling. (JSON, YAML) Pkl addresses these shortcomings as follows: It has a clutter-free and familiar syntax with nestable comments. Modules can import other modules from local and remote locations. Every object can act as a template for other objects. The standard library offers strong support for data manipulation. It has strong built-in support for describing and validating configuration schemas. It is designed to enable schema-aware tooling, such as REPLs and editors with code completion support. When configuration needs outgrow the capabilities of static configuration formats, projects often turn to generate configuration with a general-purpose programming language such as Python. Given enough effort, this approach can satisfy complex configuration needs. However, expressing configuration in a full-blown programming language does have some shortcomings, including: Reading, writing, and debugging configuration can become as challenging as reading, writing, and debugging application code. The host language may not be a good fit for describing, manipulating, and abstracting over hierarchical configuration. Configuration code may not visually resemble the configuration it generates. The host language may not be a good fit for defining and validating configuration schemas. Development environments may offer little help for developing and validating configuration written in the host language. General-purpose languages are powerful and often difficult to sandbox. Are you certain your configuration script isn’t erasing your hard disk or launching a rocket? Pkl addresses these shortcomings as follows: As an expression-oriented and side-effect free language, it eliminates many potential sources of errors. It is specifically designed for describing, manipulating, and abstracting over hierarchical configuration. Pkl code often resembles the configuration it generates. It has strong built-in support for defining and validating configuration schemas. It is designed to enable advanced and schema-aware tooling. It is comparatively powerless and strictly sandboxed, making fatal configuration mistakes and exploits less likely. Till now, we haven’t spotted any Pkl script capable of erasing your hard disk. Compared to open-source configuration languages such as Jsonnet, HCL, and Dhall, Pkl’s strong points are: General Pkl has a clean and familiar syntax, which makes it easier to read and learn. Pkl supports writing sophisticated schemas, which enables config validation, code and documentation generation, and advanced IDE support. This is Pkl’s most significant differentiator, and is the main reason why we created it. Pkl has stronger templating capabilities than other config languages, reducing user code to the absolute minimum. Embedding Pkl is great for embedding into JVM applications. Pkl offers modern JVM libraries for runtime application configuration. Pkl supports code generation to enable statically typed access to configuration from programming languages. Pkl integrates with third-party (Spring Boot) JVM libraries and frameworks. Tooling Pkl has a polished documentation generator that produces highly navigable and searchable documentation. Pkl offers a Gradle plugin to easily integrate code evaluation, documentation generation, and code generation into your builds. Pkl’s native executables have a JIT compiler that can speed up evaluation up to hundred times. Support Pkl has two full-time Apple engineers who prioritize customer support. On the other hand, we believe that Pkl’s weak points are: Pkl’s native binaries are larger than those of other config languages. Pkl is less known and has a smaller community than some other config languages. We are working towards making Pkl overcome these weakness. Please support us in reaching this goal! We hope that you will enjoy Pkl, and that you trust us to gradually improve its weak points.","title":"Comparison","component":"main","version":"0.25.0-dev","name":"comparison","url":"/main/current/introduction/comparison.html","titles":[{"text":"Pkl vs. Static Config Formats","hash":"static-config-formats","id":1},{"text":"Pkl vs. General-purpose Languages","hash":"general-purpose-langs","id":2},{"text":"Pkl vs. Other Config Languages","hash":"other-config-langs","id":3}]},"10":{"id":10,"text":"Pkl consists of several components that can be used independently: CLI Command-line evaluator and Read-Eval-Print Loop (REPL). Pkldoc Documentation generator that produces navigable and searchable API documentation for Pkl modules. Java Code Generator Java source code generator that reads Pkl classes and generates corresponding Java classes. Kotlin Code Generator Kotlin source code generator that reads Pkl classes and generates corresponding Kotlin classes. Together with object mapping, code generation provides a complete solution for consuming configuration as statically typed Java objects. Gradle Plugin Plugin for integrating the command-line evaluator, Pkldoc, and Java code generator into Gradle builds. pkl-core Core language implementation used by other components and embeddable in any Java application. pkl-config-java Java library for application runtime configuration with Pkl. pkl-config-kotlin Kotlin library for application runtime configuration with Pkl. All components are published as Maven modules, which makes them easy to use with many build tools. The CLI can be installed with Homebrew or downloaded manually.","title":"Components","component":"main","version":"0.25.0-dev","name":"components","url":"/main/current/introduction/components.html","titles":[]},"11":{"id":11,"text":"Let’s get to know Pkl by discussing some of its concepts and features. Configuration tends to grow larger and more complex over time, making it increasingly difficult to understand and maintain. Pkl can reduce the size and complexity of configuration by describing similar configuration elements in terms of their differences introducing abstractions for common configuration elements separating configuration structure from configuration data computing instead of enumerating configuration Pkl code lives in modules, a more fancy and general term for files. Evaluating a module produces an in-memory data model that is roughly comparable to a JSON data model. If evaluation completes successfully, the Pkl evaluator converts the data model to an external representation and terminates with the status code zero. Otherwise, the evaluator prints an error message and terminates with a non-zero status code. All Pkl data is immutable. Manipulating a value always returns a new value, leaving the original value unchanged. Immutability eliminates many potential sources of errors. Evaluation of Pkl code is strictly sandboxed. Except for a few well-defined and well-controlled exceptions, Pkl code cannot interact with the outside world. Leaving aside bugs in the language implementation, the worst thing that buggy or malicious Pkl code can do is to consume CPU and memory resources until the evaluator gets killed. Over time, sandboxing will be further strengthened to cover fine-grained CPU and memory boxing. Converting a data model to an external representation is called rendering the model. Pkl ships with renderers for the following data formats: JSON Jsonnet Pcf (a static subset of Pkl) (Java) Properties Property List XML YAML Support for other formats can be added by writing a custom renderer in Pkl or Java. See Module Output and Value Visitor for more information. By design, Pkl code tends to structurally and visually resemble the configuration it generates. This makes the code easier to read and write. Modules can reuse other modules by importing them from local or remote locations. Imports can also be used to split up one large module into multiple smaller ones, increasing maintainability. A configurable security policy helps to keep imports under control. Configuration is structured data. Pkl supports — but does not require — to express this structure as a configuration schema, a set of classes defining configuration properties, their defaults, types, and constraints. Writing and maintaining a configuration schema takes some effort but, in return, provides these benefits: Independent evolution of configuration schema and configuration data, often by different teams (for example service providers and service consumers). Automatic documentation generation. Strong validation of configuration, both during development time and runtime. Statically typed access to configuration from Java and other languages through code generation. Schema-aware development tools, for example REPLs and editors with code completion support. Pkl supports writing templates for objects and entire modules. Templates can be repeatedly turned into concrete configuration by filling in the blanks, and — when necessary — overriding defaults. Sharing template modules over the network can streamline complex configuration tasks for entire teams, organizations, and communities. Everybody needs a configuration solution, but nobody wants to spend a lot of time learning it. To reflect this reality, Pkl has a strong focus on usability. For example, error messages explain causes and possible solutions and object properties maintain definition order to avoid surprises. We hope that this focus on usability will make Pkl accessible to a wide audience of occasional users, while still leaving room for expert users and advanced use cases.","title":"Concepts","component":"main","version":"0.25.0-dev","name":"concepts","url":"/main/current/introduction/concepts.html","titles":[{"text":"Abstraction","hash":"abstraction","id":1},{"text":"Evaluation","hash":"evaluation","id":2},{"text":"Immutability","hash":"immutability","id":3},{"text":"Isolation","hash":"isolation","id":4},{"text":"Rendering","hash":"rendering","id":5},{"text":"Resemblance","hash":"resemblance","id":6},{"text":"Reuse","hash":"reuse","id":7},{"text":"Schema","hash":"schema","id":8},{"text":"Templating","hash":"template","id":9},{"text":"Usability","hash":"usability","id":10}]},"12":{"id":12,"text":"Pkl — pronounced Pickle — is a configuration-as-code language with rich validation and tooling. It can be used as a command line tool, software library, or build plugin. Pkl scales from small to large, simple to complex, ad-hoc to recurring configuration tasks. We created Pkl because we believe that configuration is best expressed in a special-purpose configuration language; a middle ground between a static configuration format, and a general-purpose programming language. Use Cases Concepts Components Comparison","title":"Introduction","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/introduction/index.html","titles":[]},"13":{"id":13,"text":"Pkl is a good fit for: Generating Static Configuration Are you using a tool, service, or application that is configured with JSON, YAML, or any other static configuration format? By generating this configuration with Pkl, you can reduce verbosity and increase maintainability through reuse, templating, and abstraction. JSON, YAML, and XML property lists are supported out of the box; renderers for other configuration formats can be developed and shared by anyone. Automatic defaults, strong validation, and sensible error messages come in reach with configuration schemas. Generation can be triggered manually, by an automation pipeline, or by the target application. Application Runtime Configuration Are you the author of a tool, service, or application that consumes configuration? By adopting Pkl as your \"native\" configuration solution (rather than, say, using it to generate JSON files), you benefit from a modern configuration library that is safe, easy, and enjoyable to use. At the same time, anyone configuring your application — whether that’s your users, site reliability engineers (SREs), or yourself — benefit from a well-defined, well-documented, and scalable configuration language. At the time of writing, Pkl offers configuration libraries for the JVM runtime, Swift, and also for Golang. We maintian the following libraries: pkl-config-java for Java compatible languages pkl-config-kotlin for the Kotlin language. pkl-swift for the Swift language. pkl-go for the Go language. In the future, we hope to add support for other popular languages and platforms, realizing our vision of a polyglot config solution based on a single config language. We are just getting started. Tell us about your Pkl success story!","title":"Use Cases","component":"main","version":"0.25.0-dev","name":"use-cases","url":"/main/current/introduction/use-cases.html","titles":[]},"14":{"id":14,"text":"The Java source code generator takes Pkl class definitions as an input, and generates corresponding Java classes with equally named properties. The benefits of code generation are: Configuration can be conveniently consumed as statically typed Java objects. The entire configuration tree can be code-completed in Java IDEs. Any drift between Java code and Pkl configuration structure is caught at compile time. The generated classes are immutable and have component-wise implementations of equals(), hashCode(), and toString(). The code generator is offered as Gradle plugin, Java library, and CLI. See Installation in the Gradle plugin chapter. The pkl-codegen-java library is available from Maven Central. It requires Java 11 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { compile \"org.pkl.testMode.pkl:pkl-codegen-java:0.25.0-SNAPSHOT\" } To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-codegen-java 0.25.0-SNAPSHOT The CLI is bundled with the Java library. As we do not currently ship the CLI as a self-contained Jar, we recommend to provision it with a Maven compatible build tool as shown in Java Library. The code generator is offered as Gradle plugin, Java library, and CLI. See Java Code Generation in the Gradle plugin chapter. The Java library offers two APIs: a high-level API that corresponds to the CLI, and a lower-level API that provides additional features and control. The entry points for these APIs are org.pkl.codegen.java.CliJavaCodeGenerator and org.pkl.codegen.java.JavaCodeGenerator, respectively. For more information, refer to the Javadoc documentation. As explained in Installation, the CLI is bundled with the Java library. To run the CLI, execute the library Jar or its org.pkl.codegen.java.Main main class. Synopsis: java -cp -jar pkl-codegen-java.jar [] The absolute or relative URIs of the modules to generate classes for. Relative URIs are resolved against the working directory. --generate-getters Default: (flag not set) Flag that indicates to generate private final fields and public getter methods instead of public final fields. --generate-javadoc Default: (flag not set) Flag that indicates to generate Javadoc based on doc comments for Pkl modules, classes, and properties. --params-annotation Default: org.pkl.config.java.mapper.Named Fully qualified name of the annotation to use on constructor parameters. --non-null-annotation Default: org.pkl.config.java.mapper.NonNull Fully qualified named of the annotation class to use for non-null types. This annotation is required to have java.lang.annotation.ElementType.TYPE_USE as a @Target or it may generate code that does not compile. --implement-serializable Default: (flag not set) Whether to make generated classes implement java.io.Serializable. Common code generator options: --indent Default: \" \" (two spaces) Example: \"\\t\" (one tab) The characters to use for indenting generated source code. -o, --output-dir Default: (not set) Example: generated/ The directory where generated source code is placed. Relative paths are resolved against the working directory. --generate-spring-boot Default: (not set) Flag that indicates to generate config classes for use with Spring Boot. Common CLI options: --allowed-modules Default: pkl:,file:,modulepath:,https:,repl:,package:,projectpackage: Comma-separated list of URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. --allowed-resources Default: env:,prop:,package:,projectpackage: Comma-separated list of URI patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URIs. At least one pattern needs to match for a resource to be readable. --cache-dir Default: ~/.pkl/cache Example: /path/to/module/cache/ The cache directory for storing packages. --no-cache Disable cacheing of packages. -e, --env-var Default: OS environment variables for the current process Example: MY_VAR=myValue Sets an environment variable that can be read by Pkl code with read(\"env:\"). Repeat this option to set multiple environment variables. -h, --help Display help information. --module-path Default: (empty) Example: dir1:zip1.zip:jar1.jar Directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Paths are separated by the platform-specific path separator (: on *nix, ; on Windows). Relative paths are resolved against the working directory. -p, --property Default: (none) Example: myProp=myValue Sets an external property that can be read by Pkl code with read(\"prop:\"). Repeat this option to set multiple external properties. --root-dir Default: (none) Example: /some/path Root directory for file: modules and resources. If set, access to file-based modules and resources is restricted to those located under the specified root directory. Any symlinks are resolved before this check is performed. --settings Default: (none) Example: mySettings.pkl File path of the Pkl settings file to use. If not set, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. -t, --timeout Default: (none) Example: 30 Duration, in seconds, after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. -v, --version Display version information. -w, --working-dir Base path that relative module paths passed as command-line arguments are resolved against. Defaults to the current working directory. --ca-certificates Default: (none) Example: /some/path/certificates.pem Path to a file containing CA certificates to be used for TLS connections. Setting this option replaces the existing set of CA certificates bundled into the CLI. Certificates need to be X.509 certificates in PEM format. For other methods of configuring certificates, see CA Certificates. For a ready-to-go example with full source code, see codegen-java in the pkl/pkl-examples repository.","title":"Java Code Generator","component":"main","version":"0.25.0-dev","name":"codegen","url":"/main/current/java-binding/codegen.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Gradle Plugin","hash":"gradle-plugin","id":2},{"text":"Java Library","hash":"install-library","id":3},{"text":"Gradle","hash":"gradle","id":4},{"text":"Maven","hash":"maven","id":5},{"text":"CLI","hash":"install-cli","id":6},{"text":"Usage","hash":"codegen-java-usage","id":7},{"text":"Gradle Plugin","hash":"gradle-plugin-2","id":8},{"text":"Java Library","hash":"java-library","id":9},{"text":"CLI","hash":"cli","id":10},{"text":"Options","hash":"options","id":11},{"text":"Full Example","hash":"full-example","id":12}]},"15":{"id":15,"text":"Pkl provides rich integration with Java. Our integration allows you to embed the Pkl runtime into your Java program, and also provides code generation from Pkl source files.","title":"Integration with Java","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/java-binding/index.html","titles":[]},"16":{"id":16,"text":"The pkl-config-java library builds upon pkl-core. It offers a higher-level API specifically designed for consuming application runtime configuration. The pkl-config-java library is available from Maven Central. It requires Java 11 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { implementation \"org.pkl-lang:pkl-config-java-all:0.25.0-SNAPSHOT\" } Unlike pkl-config-java, pkl-config-java-all is a fat Jar with renamed third-party packages to avoid version conflicts. To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-config-java-all 0.25.0-SNAPSHOT Unlike pkl-config-java, pkl-config-java-all is a fat Jar with renamed third-party packages to avoid version conflicts. The ConfigEvaluator class loads and evaluates Pkl modules. If evaluation succeeds, a Config object is returned. Otherwise, an EvalException with error details is thrown. The returned Config object represents the root of the Pkl configuration tree. Intermediate and leaf nodes are also represented as Config objects. Config objects offer methods to convert their Pkl value to a Java value of the specified type. navigate to child nodes. Let’s see this in action: Config config; try (var evaluator = ConfigEvaluator.preconfigured()) { (1) config = evaluator.evaluateText( \"pigeon { age = 5; diet = \\\"Seeds\\\" }\"); (2) } var pigeon = config.get(\"pigeon\"); (3) var age = pigeon.get(\"age\").as(int.class); (4) var diet = pigeon.get(\"diet\").as(JavaType.listOf(String.class)); (5) 1 Create a preconfigured ConfigEvaluator. To create a customized evaluator, start from ConfigEvaluatorBuilder.preconfigured() or ConfigEvaluatorBuilder.unconfigured(). The evaluator should be closed once it is no longer needed. In this example, this is done with a try-with-resources statement. Note that objects returned by the evaluator remain valid after calling close(). 2 Evaluate the given text. Other evaluate methods read from files, URLs, and other sources. If evaluation fails, an EvalException is thrown. 3 Navigate from the config root to its \"pigeon\" child. 4 Navigate from \"pigeon\" to \"age\" and get the latter’s value as an int. If conversion to the requested type fails, a ConversionException is thrown. 5 Navigate from \"pigeon\" to \"diet\" and get the latter’s value as a List. Note the use of JavaType.listOf() for creating a parameterized type literal. Similar methods exist for sets, maps, and other generic types. A ConfigEvaluator caches module sources and evaluation results. To clear the cache, for example to evaluate the same module again, close the evaluator and create a new one. For a ready-to-go example with full source code, see config-java in the pkl/pkl-examples repository. When a Config object needs to convert its Pkl value to a Java value, it delegates the conversion to ValueMapper. ValueMapper can convert an entire PModule or any part thereof. A ValueMapper instance can be configured with many different Pkl-to-Java value conversions. ValueMapper.preconfigured() creates an instance configured with conversions from Pkl values to: Number types Strings Enums Collections Arrays java.util.Optional java.time.Duration java.net.URI/URL etc. Additionally, a preconfigured ValueMapper instance can convert Pkl objects to Java objects with equally named properties that are settable through a constructor. This conversion works as follows: Find the Java class constructor with the highest number of parameters. Match constructor parameters with Pkl object properties by name. Unmatched constructor parameters result in a conversion error. Unmatched Pkl object properties are ignored. Convert each Pkl property value to the corresponding constructor parameter’s type. Invoke the constructor. The Pkl object’s runtime type is irrelevant to this conversion. Hence, typed and dynamic Pkl objects are equally supported. To perform this conversion, ValueMapper needs a way to obtain the Java constructor’s parameter names. They need to be provided in one of the following ways: Annotate constructor with java.beans.ConstructorProperties. Annotate parameters with Named. Annotate parameters with javax.inject.Named. Set the Java compiler flag -parameters. For a complete object mapping example, see: PObjectToObjectByCtorTest.java Together with code generation, object mapping provides a complete solution for consuming Pkl configuration as statically typed Java objects. Java code never drifts from the configuration structure defined in Pkl, and the entire configuration tree can be code-completed in Java IDEs. The Pkl-to-Java value conversions that ship with the library are defined in Conversions (for individual conversions) and ConverterFactories (for families of conversions). To implement and register your own conversions, follow these steps: For conversions from a single source type to a single target type, implement a Conversion. Example: Conversions.pStringToCharacter converts a single-character pkl.base#String to java.lang.Character. For conversions from one or multiple source types to one or multiple target types, implement a ConverterFactory. Example: ConverterFactories.pCollectionToCollection converts any pkl.base#Collection to any implementation of java.util.Collection, for any E. Converter factories are called once per combination of source type and (possibly parameterized) target type. The returned `Converter`s are cached. Create a ValueMapperBuilder, add all desired conversions, and build a ValueMapper. Either use the ValueMapper directly, or connect it to a ConfigEvaluator through ConfigEvaluatorBuilder. Refer to the Javadoc and sources published with the library, or browse the library’s main and test sources.","title":"pkl-config-java Library","component":"main","version":"0.25.0-dev","name":"pkl-config-java","url":"/main/current/java-binding/pkl-config-java.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Gradle","hash":"gradle","id":2},{"text":"Maven","hash":"maven","id":3},{"text":"Usage","hash":"usage","id":4},{"text":"Consuming Configuration","hash":"consuming-configuration","id":5},{"text":"Object Mapping","hash":"object-mapping","id":6},{"text":"Value Conversions","hash":"value-conversions","id":7},{"text":"Further Information","hash":"further-information","id":8}]},"17":{"id":17,"text":"The Kotlin source code generator reads Pkl classes and generates corresponding Kotlin classes with equally named properties. Together with Object Mapping, code generation provides a complete solution for consuming Pkl configuration as statically typed Kotlin objects. Kotlin code never drifts from the configuration structure defined in Pkl, and the entire configuration tree can be code-completed in Kotlin IDEs. The code generator is offered as Gradle plugin, Java library, and CLI. See Installation in the Gradle plugin chapter. The pkl-codegen-kotlin library is available from Maven Central. It requires Java 8 or higher and Kotlin 1.3 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { compile \"org.pkl-lang:pkl-codegen-kotlin:0.25.0-SNAPSHOT\" } To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-codegen-kotlin 0.25.0-SNAPSHOT The CLI is bundled with the library. As we do not currently ship the CLI as a self-contained Jar, we recommend to provision it with a Maven compatible build tool as shown in Java Library. The code generator is offered as Gradle plugin, Java library, and CLI. See Kotlin Code Generation in the Gradle plugin chapter. The library offers two APIs: a high-level API that corresponds to the CLI, and a lower-level API that provides additional features and control. The entry points for these APIs are org.pkl.codegen.kotlin.CliKotlinCodeGenerator and org.pkl.codegen.kotlin.KotlinCodeGenerator, respectively. For more information, refer to the KDoc documentation. As mentioned in Installation, the CLI is bundled with the library. To run the CLI, execute the library Jar or its org.pkl.codegen.kotlin.Main main class. Synopsis: java -cp -jar pkl-codegen-kotlin.jar [] The absolute or relative URIs of the modules to generate classe for. Relative URIs are resolved against the working directory. --generate-kdoc Default: (flag not set) Flag that indicates to generate Kdoc based on doc comments for Pkl modules, classes, and properties. Common code generator options: --indent Default: \" \" (two spaces) Example: \"\\t\" (one tab) The characters to use for indenting generated source code. -o, --output-dir Default: (not set) Example: generated/ The directory where generated source code is placed. Relative paths are resolved against the working directory. --generate-spring-boot Default: (not set) Flag that indicates to generate config classes for use with Spring Boot. Common CLI options: --allowed-modules Default: pkl:,file:,modulepath:,https:,repl:,package:,projectpackage: Comma-separated list of URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. --allowed-resources Default: env:,prop:,package:,projectpackage: Comma-separated list of URI patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URIs. At least one pattern needs to match for a resource to be readable. --cache-dir Default: ~/.pkl/cache Example: /path/to/module/cache/ The cache directory for storing packages. --no-cache Disable cacheing of packages. -e, --env-var Default: OS environment variables for the current process Example: MY_VAR=myValue Sets an environment variable that can be read by Pkl code with read(\"env:\"). Repeat this option to set multiple environment variables. -h, --help Display help information. --module-path Default: (empty) Example: dir1:zip1.zip:jar1.jar Directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Paths are separated by the platform-specific path separator (: on *nix, ; on Windows). Relative paths are resolved against the working directory. -p, --property Default: (none) Example: myProp=myValue Sets an external property that can be read by Pkl code with read(\"prop:\"). Repeat this option to set multiple external properties. --root-dir Default: (none) Example: /some/path Root directory for file: modules and resources. If set, access to file-based modules and resources is restricted to those located under the specified root directory. Any symlinks are resolved before this check is performed. --settings Default: (none) Example: mySettings.pkl File path of the Pkl settings file to use. If not set, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. -t, --timeout Default: (none) Example: 30 Duration, in seconds, after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. -v, --version Display version information. -w, --working-dir Base path that relative module paths passed as command-line arguments are resolved against. Defaults to the current working directory. --ca-certificates Default: (none) Example: /some/path/certificates.pem Path to a file containing CA certificates to be used for TLS connections. Setting this option replaces the existing set of CA certificates bundled into the CLI. Certificates need to be X.509 certificates in PEM format. For other methods of configuring certificates, see CA Certificates. For a ready-to-go example with full source code, see codegen-kotlin in the pkl/pkl-examples repository.","title":"Kotlin Code Generator","component":"main","version":"0.25.0-dev","name":"codegen","url":"/main/current/kotlin-binding/codegen.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Gradle Plugin","hash":"gradle-plugin","id":2},{"text":"Java Library","hash":"install-library","id":3},{"text":"Gradle","hash":"gradle","id":4},{"text":"Maven","hash":"maven","id":5},{"text":"CLI","hash":"install-cli","id":6},{"text":"Usage","hash":"usage","id":7},{"text":"Gradle Plugin","hash":"gradle-plugin-2","id":8},{"text":"Java Library","hash":"java-library","id":9},{"text":"CLI","hash":"cli","id":10},{"text":"Options","hash":"options","id":11},{"text":"Full Example","hash":"full-example","id":12}]},"18":{"id":18,"text":"Pkl provides rich integration with Kotlin. Our integration allows you to embed the Pkl runtime into your Kotlin application, and also provides code generation for from Pkl source code.","title":"Integration with Kotlin","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/kotlin-binding/index.html","titles":[]},"19":{"id":19,"text":"The pkl-config-kotlin library extends pkl-config-java with Kotlin specific extension methods and object converters. We recommend that Kotlin projects depend on this library instead of pkl-config-java. The pkl-config-kotlin library is available from Maven Central. It requires Java 11 or higher and Kotlin 1.5 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { compile \"org.pkl-lang:pkl-config-kotlin:0.25.0-SNAPSHOT\" } To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-config-kotlin 0.25.0-SNAPSHOT Below is the Kotlin version of the Java ConfigEvaluator example. Differences to the Java version are called out. val evaluator = ConfigEvaluator.preconfigured().forKotlin() (1) val config = evaluator.use { (2) it.evaluateText(\"\"\"pigeon { age = 5; diet = \"Seeds\" }\"\"\") } val pigeon = config[\"pigeon\"] (3) val age = pigeon[\"age\"].to() (4) val hobbies = pigeon[\"diet\"].to>() (5) 1 Use the forKotlin() method to preconfigure the builder with Kotlin specific conversions. In particular, forKotlin() eliminates the need to annotate constructor parameters of Kotlin classes and Kotlin data classes with @Named. 2 The evaluator should be closed once it is no longer needed. Here this is done with a Kotlin use {} expression. Any data returned by the evaluator before calling close() remains valid. 3 Navigate to the \"pigeon\" child. The subscript notation is shorthand for config.get(\"pigeon\"). 4 Convert \"age\" to Int with the Config.to() extension method. The target type is provided as a type argument. Always use Config.to() instead of Config.as() in Kotlin. 5 Config.to() makes conversions to parameterized types straightforward: to>() instead of as(JavaType.listOf(String::class.java)). For properties that are allowed to be null, convert to a nullable type: val evaluator = ConfigEvaluator.preconfigured().forKotlin() val config = evaluator.use { it.evaluateText(\"name = null\") (1) } val name = config[\"name\"].to() (2) 1 To indicate that null is an allowed value, convert to the nullable type String?. Converting to String would result in a ConversionException. For a ready-to-go example with full source code, see config-kotlin in the pkl/pkl-examples repository. Refer to the Javadoc and sources published with the library, or browse the library’s main and test sources.","title":"pkl-config-kotlin Library","component":"main","version":"0.25.0-dev","name":"pkl-config-kotlin","url":"/main/current/kotlin-binding/pkl-config-kotlin.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Gradle","hash":"gradle","id":2},{"text":"Maven","hash":"maven","id":3},{"text":"Usage","hash":"usage","id":4},{"text":"Further Information","hash":"further-information","id":5}]},"20":{"id":20,"text":"The language reference provides a comprehensive description of every Pkl language feature. Comments Numbers Booleans Strings Durations Data Sizes Objects Listings Mappings Classes Methods Modules Null Values If Expressions Resources Errors Debugging Advanced Topics For a hands-on introduction, see Language Tutorial. For ready-to-go examples with full source code, see Examples. For API documentation, see Standard Library. Pkl has three forms of comments: Line comment A code comment that starts with a double-slash (//) and runs until the end of the line. // Single-line comment Block comment A nestable multiline comment which is typically used to comment out code. Starts with /* and ends with */. /* Multiline comment */ Doc comment A user-facing comment attached to a program member. It starts with a triple-slash (///) and runs until the end of the line. Doc comments on consecutive lines are merged. /// A *bird* superstar. /// Unfortunately, extinct. dodo: Bird Doc comments are processed by Pkldoc, Pkl’s documentation generator. For details on their syntax, see Doc Comments. Pkl has two numeric types, Int and Float. Their common supertype is Number. A value of type Int is a 64-bit signed integer. Integer literals can be written in decimal, hexadecimal, binary, or octal notation: num1 = 123 num2 = 0x012AFF (1) num3 = 0b00010111 (2) num4 = 0o755 (3) 1 decimal: 76543 2 decimal: 23 3 decimal: 493 Integers can optionally include an underscore as a separator to improve readability. An underscore does not affect the integer’s value. num1 = 1_000_000 (1) num2 = 0x0134_64DE (2) num3 = 0b0001_0111 (3) num4 = 0o0134_6475 (4) 1 Equivalent to 1000000 2 Equivalent to 0x013464DE 3 Equivalent to 0b00010111 4 Equivalent to 0o01346475 Negative integer literals start with a minus sign, as in -123. Integers support the standard comparison operators: comparison1 = 5 == 2 comparison2 = 5 2 comparison4 = 5 = 2 Integers support the following arithmetic operators: num1 = 5 + 2 (1) num2 = 5 - 2 (2) num3 = 5 * 2 (3) num4 = 5 / 2 (4) num5 = 5 ~/ 2 (5) num6 = 5 % 2 (6) num7 = 5 ** 2 (7) 1 addition (result: 7) 2 subtraction (result: 3) 3 multiplication (result: 10) 4 division (result: 2.5, always Float) 5 integer division (result: 2, always Int) 6 remainder (result: 1) 7 exponentiation (result: 25) Arithmetic overflows are caught and result in an error. To restrict an integer’s range, use one of the predefined type aliases or an isBetween type constraint: clientPort: UInt16 serverPort: Int(isBetween(0, 1023)) A value of type Float is a 64-bit double-precision floating point number. Float literals use decimal notation. They consist of an integer part, decimal point, fractional part, and exponent part. The integer and exponent part are optional. num1 = .23 num2 = 1.23 num3 = 1.23e2 (1) num4 = 1.23e-2 (2) 1 result: 1.23 * 102 2 result: 1.23 * 10-2 Negative float literals start with a minus sign, as in -1.23. The special float values not a number, positive infinity, and negative infinity are written as: notANumber = NaN positiveInfinity = Infinity negativeInfinity = -Infinity The NaN and Infinity properties are defined in the standard library. Floats support the same comparison and arithmetic operators as integers. Float literals with zero fractional part can be safely replaced with integer literals. For example, it is safe to write 1.3 * 42 instead of 1.3 * 42.0. Floats can also include the same underscore separater as integers. For example, 1_000.4_400 is a float whose value is equivalent to 1000.4400. As integers are more convenient to use than floats with zero fractional part, we recommend to require x: Number instead of x: Float in type annotations. To restrict a float to a finite value, use the isFinite type constraint: x: Float(isFinite) To restrict a float’s range, use the isBetween type constraint: x: Float(isBetween(0, 10e6)) A value of type Boolean is either true or false. Apart from the standard logical operators, Boolean has xor and implies methods. res1 = true && false (1) res2 = true || false (2) res3 = !false (3) res4 = true.xor(false) (4) res5 = true.implies(false) (5) 1 logical conjunction (result: false) 2 logical disjunction (result: true) 3 logical negation (result: true) 4 exclusive disjunction (result: true) 5 logical implication (result: false) A value of type String is a sequence of Unicode code points. String literals are enclosed in double quotes: \"Hello, World!\" Except for a few minor differences [1], String literals have the same syntax and semantics as in Swift 5. Learn one of them, know both of them! Inside a string literal, the following character escape sequences have special meaning: \\t - tab \\n - line feed \\r - carriage return \\\" - verbatim quote \\\\ - verbatim backslash Unicode escape sequences have the form \\u{}, where is a hexadecimal number between 0 and 10FFFF: \"\\u{26} \\u{E9} \\u{1F600}\" (1) 1 result: \"& é 😀\" To concatenate strings, use the + (plus) operator, as in \"abc\" + \"def\" + \"ghi\". To embed the result of expression in a string, use \\(): name = \"Dodo\" greeting = \"Hi, \\(name)!\" (1) 1 result: \"Hi, Dodo!\" Before a result is inserted, it is converted to a string: x = 42 str = \"\\(x + 2) plus \\(x * 2) is \\(0x80)\" (1) 1 result: \"44 plus 84 is 128\" To write a string that spans multiple lines, use a multiline string literal: \"\"\" Although the Dodo is extinct, the species will be remembered. \"\"\" Multiline string literals are delimited by three double quotes (\"\"\"). String content and closing delimiter must each start on a new line. The content of a multiline string starts on the first line after the opening quotes and ends on the last line before the closing quotes. Line breaks are included in the string and normalized to \\n. The previous multiline string is equivalent to this single line string. Notice that there is no leading or trailing whitespace. \"Although the Dodo is extinct,\\nthe species will be remembered.\" String interpolation, character escape sequences, and Unicode escape sequences work the same as for single line strings: bird = \"Dodo\" message = \"\"\" Although the \\(bird) is extinct, the species will be remembered. \"\"\" Each content line must begin with the same whitespace characters as the line containing the closing delimiter, which are not included in the string. Any further leading whitespace characters are preserved. In other words, line indentation is controlled by indenting lines relative to the closing delimiter. In the following string, lines have no leading whitespace: str = \"\"\" Although the Dodo is extinct, the species will be remembered. \"\"\" In the following string, lines are indented between three and five spaces: str = \"\"\" Although the Dodo is extinct, the species will be remembered. \"\"\" Some strings contain many verbatim backslash (\\) or quote (\") characters. A good example is regular expressions, which make frequent use of backslash characters for their own escaping. In such cases, using the escape sequences \\\\ and \\\" quickly becomes tedious and hampers readability. Instead, leading/closing string delimiters can be customized to start/end with a pound sign (#). This also affects the escape character, which changes from \\ to \\#. All backslash and quote characters in the following string are interpreted verbatim: #\" \\\\\\\\\\ \"\"\"\"\" \"# Escape sequences and string interpolation still work, and now start with \\#: bird = \"Dodo\" str = #\" \\\\\\\\\\ \\#n \\#u{12AF} \\#(bird) \"\"\"\"\" \"# More generally, string delimiters and escape character can be customized to contain n pound signs each, for n >= 1. In the following string, n is 2. As a result, the string content is interpreted verbatim: ##\" \\\\\\\\\\ \\#\\#\\# \"\"\"\"\" \"## The String class offers a rich API. Here are just a few examples: strLength = \"dodo\".length (1) reversedStr = \"dodo\".reverse() (2) hasAx = \"dodo\".contains(\"alive\") (3) trimmed = \" dodo \".trim() (4) 1 result: 4 2 result: \"odod\" 3 result: false 4 result: \"dodo\" A value of type Duration has a value component of type Number and a unit component of type String. The unit component is constrained to the units defined in DurationUnit. Durations are constructed with the following Number properties: duration1 = 5.ns // nanoseconds (smallest unit) duration2 = 5.us // microseconds duration3 = 5.ms // milliseconds duration4 = 5.s // seconds duration5 = 5.min // minutes duration6 = 5.h // hours duration7 = 3.d // days (largest unit) A duration can be negative, as in -5.min. It can have a floating point value, as in 5.13.min. The value and unit properties provide access to the duration’s components. Durations support the standard comparison operators: comparison1 = 5.min == 3.s comparison2 = 5.min 3.s comparison4 = 5.min = 3.s Durations support the same arithmetic operators as numbers: res1 = 5.min + 3.s (1) res2 = 5.min - 3.s (2) res3 = 5.min * 3 (3) res4 = 5.min / 3 (4) res5 = 5.min / 3.min (5) res6 = 5.min ~/ 3 (6) res7 = 5.min ~/ 3.min (7) res8 = 5.min % 3 (8) res9 = 5.min ** 3 (9) 1 result: 5.05.min 2 result: 4.95.min 3 result: 15.min 4 result: 1.6666666666666667.min 5 result: 1.6666666666666667 6 result: 1.min 7 result: 1 8 result: 2.min 9 result: 125.min The value component can be an expression: x = 5 xMinutes = x.min (1) y = 3 xySeconds = (x + y).s (2) 1 result: 5.min 2 result: 8.s A value of type DataSize has a value component of type Number and a unit component of type String. The unit component is constrained to the units defined in DataSizeUnit. Data sizes with decimal unit (factor 1000) are constructed with the following Number properties: datasize1 = 5.b // bytes (smallest unit) datasize2 = 5.kb // kilobytes datasize3 = 5.mb // megabytes datasize4 = 5.gb // gigabytes datasize5 = 5.tb // terabytes datasize6 = 5.pb // petabytes (largest unit) Data sizes with binary unit (factor 1024) are constructed with the following Number properties: datasize1 = 5.b // bytes (smallest unit) datasize2 = 5.kib // kibibytes datasize3 = 5.mib // mebibytes datasize4 = 5.gib // gibibytes datasize5 = 5.tib // tebibytes datasize6 = 5.pib // pebibytes (largest unit) A data size can be negative, as in -5.mb. It can have a floating point value, as in 5.13.mb. The value and unit properties provide access to the data size’s components. Data sizes support the standard comparison operators: comparison1 = 5.mb == 3.kib comparison2 = 5.mb 3.kib comparison4 = 5.mb = 3.kib Data sizes support the same arithmetic operators as numbers: res1 = 5.mb + 3.kib (1) res2 = 5.mb - 3.kib (2) res3 = 5.mb * 3 (3) res4 = 5.mb / 3 (4) res5 = 5.mb / 3.mb (5) res6 = 5.mb ~/ 3 (6) res7 = 5.mb ~/ 3.mb (7) res8 = 5.mb % 3 (8) res9 = 5.mb ** 3 (9) 1 result: 5.003072.mb 2 result: 4.996928.mb 3 result: 15.mb 4 result: 1.6666666666666667.mb 5 result: 1.6666666666666667 6 result: 1.mb 7 result: 1 8 result: 2.mb 9 result: 125.mb The value component can be an expression: x = 5 xMegabytes = x.mb (1) y = 3 xyKibibytes = (x + y).kib (2) 1 result: 5.mb 2 result: 8.kib An object is an ordered collection of values indexed by name. An object’s key–value pairs are called its properties. Property values are lazily evaluated on the first read. Because Pkl’s objects differ in important ways from objects in general-purpose programming languages, and because they are the backbone of most data models, understanding objects is the key to understanding Pkl. Let’s define an object with properties name and extinct: dodo { (1) name = \"Dodo\" (2) extinct = true (3) } (4) 1 Defines a module property named dodo. The open curly brace ({) indicates that the value of this property is an object. 2 Defines an object property named name with string value \"Dodo\". 3 Defines an object property named extinct with boolean value true. 4 The closing curly brace indicates the end of the object definition. To access an object property by name, use dot (.) notation: dodoName = dodo.name dodoIsExtinct = dodo.extinct Objects can be nested: dodo { name = \"Dodo\" taxonomy { (1) `class` = \"Aves\" (2) } } 1 Defines an object property named taxonomy. The open curly brace indicates that its value is another object. 2 The word class is a keyword of Pkl, and needs to be wrapped in backticks (`) to be used as a property. As you probably guessed, the nested property class can be accessed with dodo.taxonomy.class. Like all values, objects are immutable, which is just a fancy (and short!) way to say that their properties never change. So what happens when Pigeon moves to a different street? Do we have to construct a new object from scratch? Fortunately we don’t have to. An object can be amended to form a new object that only differs in selected properties. Here is how this looks: tortoise = (dodo) { (1) name = \"Galápagos tortoise\" taxonomy { (2) `class` = \"Reptilia\" (3) } } 1 Defines a module property named tortoise. Its value is an object that amends dodo. Note that the amended object must be enclosed in parentheses. 2 Object property tortoise.taxonomy amends dodo.taxonomy. 3 Object property tortoise.taxonomy.class overrides dodo.taxonomy.class. As you can see, it is easy to construct a new object that overrides selected properties of an existing object, even if, as in our example, the overridden property is nested inside another object. If this way of constructing new objects from existing objects reminds you of prototypical inheritance, you are spot-on: Pkl objects use protoypical inheritance as known from languages such as JavaScript. But unlike in JavaScript, their prototype chain cannot be directly accessed or even be modified. Another difference is that in Pkl, object properties are late-bound. Read on to see what this means. Amends expressions vs. amends declarations The defining objects and amending objects sections cover two notations that are both a form of amending; called an amends declaration and an amends expression, respectively. pigeon { (1) name = \"Turtle dove\" extinct = false } parrot = (pigeon) { (2) name = \"Parrot\" } 1 Amends expression. 2 Amends declaration. An amends declaration amends the property of the same name in a module’s parent module, if the parent property exists. Otherwise, an amends declaration implicitly amends Dynamic. Another way to think about an amends declaration is that it is shorthand for assignment. In practical terms, pigeon {} is the same as pigeon = super.pigeon {}. Amending object bodies can be chained for both an amends expression and an amends declaration. pigeon { name = \"Common wood pigeon\" } { extinct = false } (1) dodo = (pigeon) { name = \"Dodo\" } { extinct = true } (2) 1 Chained amends expression (pigeon { …​ } { …​ } is the amends expression). 2 Chained amends declaration. Let’s move on to Pkl’s secret sauce: the ability to define an object property’s value in terms of another property’s value, and the resulting late binding effect. Here is an example: penguin { eggIncubation = 40.d adultWeightInGrams = eggIncubation.value * 100 (1) } adultWeightInGrams = penguin.adultWeightInGrams 1 result: 4000 We have defined a hypothetical penguin object whose adultWeightInGrams property is defined in terms of the eggIncubation duration. Can you guess what happens when penguin is amended and its eggIncubation overridden? madeUpBird = (penguin) { eggIncubation = 11.d } adultWeightInGrams = madeUpBird.adultWeightInGrams (1) 1 result: 1100 As you can see, madeUpBird's adultWeightInGrams changed along with its eggIncubation. This is what we mean when we say that object properties are late-bound. Spreadsheet Programming A good analogy is that object properties behave like spreadsheet cells. When they are linked, changes to \"downstream\" properties automatically propagate to \"upstream\" properties. The main difference is, editing a spreadsheet cell changes the state of the spreadsheet, whereas \"editing\" a property results in a new object, leaving the original object untouched. It is as if you made a copy of the entire spreadsheet whenever you edited a cell! Late binding of properties is an incredibly useful feature for a configuration language. It is used extensively in Pkl code (especially in templates), and is the key to understanding how Pkl works. Say we have the following object: dodo { name = \"Dodo\" extinct = true } How can property name be removed? The recipe for transforming an object is: Convert the object to a map. Transform the map using Map's rich API. If necessary, convert the map back to an object. Equipped with this knowledge, let’s try to accomplish our objective: dodo .toMap() .remove(\"name\") .toDynamic() The resulting dynamic object is equivalent to dodo, except that it no longer has a name property. Lazy vs. Eager Data Types Converting an object to a map is a transitition from a lazy to an eager data type. All of the object’s properties are evaluated and all references between them are resolved. If the map is later converted back to an object, subsequent changes to the object’s properties no longer propagate to (previously) dependent properties. To make these boundaries clear, transitioning between lazy and eager data types always requires an explicit method call, such as toMap() or toDynamic(). Pkl has two kinds of objects: A Dynamic object has no predefined structure.[2] When a dynamic object is amended, not only can existing properties be overridden or amended, but new properties can also be added. So far, we have only used dynamic objects in this chapter. A Typed object has a fixed structure described by a class definition. When a typed object is amended, its properties can be overridden or amended, but new properties cannot be added. In other words, the new object has the same class as the original object. When to Use Typed vs. Dynamic Objects Use typed objects to build schema-backed data models that are validated[3]. This is what most templates do. Use dynamic objects to build schema-less data models that are not validated. Dynamic objects are useful for ad-hoc tasks, tasks that do not justify the effort of writing and maintaining a schema, and for representing data whose structure is unknown. Note that every module is a typed object. Its properties implicitly define a class, and new properties cannot be added when amending the module. A typed object is backed by a class. Let’s look at an example: class Bird { (1) name: String lifespan: Int migratory: Boolean } pigeon = new Bird { (2) name = \"Pigeon\" lifespan = 8 migratory = false } 1 Defines a class named Bird with properties name, lifespan and migratory. 2 Defines a module property named pigeon. Its value is a typed object constructed by instantiating class Bird. A type only needs to be stated when the property does not have or inherit a type annotation. Otherwise, amend syntax (pigeon { …​ }) or shorthand instantiation syntax (pigeon = new { …​ }) should be used. Congratulations, you have constructed your first typed object[4]! How does it differ from a dynamic object? The answer is that a typed object has a fixed structure prescribed by its class, which cannot be changed when amending the object: class Bird { (1) name: String lifespan: Int } faultyPigeon = new Bird { name = \"Pigeon\" lifespan = 8 hobby = \"singing\" } Evaluating this, gives: Cannot find property hobby in object of type repl#Bird. Available properties: lifespan name Class structure is also enforced when instantiating a class. Let’s try to override property name with a value of the wrong type: faultyPigeon2 = new Bird { name = 3.min lifespan = 8 } Evaluating this, also fails: Expected value of type String, but got type Duration. Value: 3.min Typed objects are the fundamental building block for constructing validated data models in Pkl. To dive deeper into this topic, continue with Classes. Converting untyped objects to typed objects When you have a Dynamic that has all the properties (with the right types and meeting all constraints), you can convert it to a Typed by using toTyped(): class Bird { name: String lifespan: Int } pigeon = new Dynamic { (1) name = \"Pigeon\" lifespan = 8 }.toTyped(Bird) (2) 1 Instead of a new Bird, pigeon can be defined with a new Dynamic. 2 That Dynamic is then converted to a Bird. A property with modifier hidden is omitted from rendered output and from object conversions. class Bird { name: String lifespan: Int hidden nameAndLifespanInIndex = \"\\(name), \\(lifespan)\" (1) nameSignWidth: UInt = nameAndLifespanInIndex.length (2) } pigeon = new Bird { (3) name = \"Pigeon\" } pigeonInIndex = pigeon.nameAndLifespanInIndex (4) pigeonDynamic = pigeon.toDynamic() (5) 1 Properties defined as hidden are accessible on any Bird instance, but not output by default. 2 Non-hidden properties can refer to hidden properties as usual. 3 pigeon is an object with four properties, but is rendered with three properties. 4 Accessing a hidden property from outside the class and object is like any other property. 5 Object conversions omit hidden properties, so the resulting Dynamic has three properties. Invoking Pkl on this file produces the following result. pigeon { name = \"Pigeon\" lifespan = 8 nameSignWidth = 9 } pigeonInIndex = \"Pigeon, 5\" pigeonDynamic { name = \"Pigeon\" lifespan = 8 nameSignWidth = 9 } A property with modifier local can only be referenced in the lexical scope of its definition. class Bird { name: String lifespan: Int local separator = \",\" (1) hidden nameAndLifespanInIndex = \"\\(name)\\(separator) \\(lifespan)\" (2) } pigeon = new Bird { name = \"Pigeon\" lifespan = 8 } pigeonInIndex = pigeon.nameAndLifespanInIndex (3) pigeonSeparator = pigeon.separator // Error (4) 1 This property can only be accessed from inside this class definition. 2 Non-local properties can refer to the local property as usual. 3 The value of separator occurs in nameAndLifespanInIndex. 4 Pkl does not accept this, as there is no property separator on a Bird instance. Because a local property is added to the lexical scope, but not (observably) to the object, you can add local properties to Listings and Mappings. Import clauses define local properties An import clause defines a local property in the containing module. This means import \"someModule.pkl\" is equivalent to local someModule = import(\"someModule.pkl\"). Also, import \"someModule.pkl\" as otherName is equivalent to local otherName = import(\"someModule.pkl\"). A property with the fixed modifier cannot be assigned to or amended when defining an object of its class. Bird.pkl fixed laysEggs: Boolean = true fixed birds: Listing = new { \"Pigeon\" \"Hawk\" \"Penguin\" } When amending, assigning to a fixed property is an error. Similarly, it is an error to use an amends declaration on a fixed property: invalid.pkl amends \"Bird.pkl\" laysEggs = false (1) birds { (2) \"Giraffe\" } 1 Error: cannot assign to fixed property laysEggs 2 Error: cannot amend fixed property birds When extending a class and overriding an existing property definition, the fixed-ness of the overridden property must be preserved. If the property in the parent class is declared fixed, the child property must also be declared fixed. If the property in the parent class is not declared fixed, the child property may not add the fixed modifier. abstract class Bird { fixed canFly: Boolean name: String } class Penguin extends Bird { canFly = false (1) fixed name = \"Penguin\" (2) } 1 Error: missing modifier fixed. 2 Error: modifier fixed cannot be applied to property name. The fixed modifier is useful for defining properties that are meant to be derived from other properties. In the following snippet, property result is not meant to be assigned to, because it is derived from other properties. class Bird { wingspan: Int weight: Int fixed wingspanWeightRatio: Int = wingspan / weight } Another use-case for fixed is to define properties that are meant to be fixed to a class definition. In the example below, the species of a bird is tied to the class, and therefore is declared fixed. Note that it is possible to define a fixed property without a value, for one of two reasons: The type has a default value that makes an explicit default redundant. The property is meant to be overridden by a child class. abstract class Bird { fixed species: String (1) } class Osprey extends Bird { fixed species: \"Pandion haliaetus\" (2) } 1 No explicit default because the property is overridden by a child class. 2 Overrides the type from String to the string literal type \"Pandion haliaetus\". Assigning an explicit default would be redundant, therefore it is omitted. A property with the const modifier behaves like the fixed modifier, with the additional rule that it cannot reference non-const properties or methods. Bird.pkl const laysEggs: Boolean = true const examples: Listing = new { \"Pigeon\" \"Hawk\" \"Penguin\" } Referencing any non-const property or method is an error. invalid.pkl pigeonName: String = \"Pigeon\" const function birdLifespan(i: Int): Int = (i / 4).toInt() class Bird { name: String lifespan: Int } const bird: Bird = new { name = pigeonName (1) lifespan = birdLifespan(24) (2) } 1 Error: cannot reference non-const property pigeonName from a const property. 2 Allowed: birdLifespan is const. It is okay to reference another value within the same const property. valid.pkl class Bird { lifespan: Int description: String speciesName: \"Bird\" } const bird: Bird = new { lifespan = 8 description = \"species: \\(speciesName), lifespan: \\(lifespan)\" (1) } 1 lifespan is declared within property bird. speciesName resolves to this.speciesName, where this is a value within property bird. Because const members can only reference its own values, or other const members, they are not late bound. The const modifier implies that it is also fixed. Therefore, the same rules that apply to fixed also apply to const: A const property cannot be assigned to or amended when defining an object of its class. The const-ness of a property or method must be preserved when it is overridden by a child class. Class and Annotation Scoping Within a class or annotation body, any reference to a property or method of its enclosing module requires that the referenced member is const. invalid2.pkl pigeonName: String = \"Pigeon\" class Bird { name: String = pigeonName (1) } @Deprecated { message = \"Replace with \\(pigeonName)\" } (2) oldPigeonName: String 1 Error: cannot reference non-const property pigeonName from a class. 2 Error: cannot reference non-const property pigeonName from an annotation. This rule exists because classes and annotations are not late bound; it is not possible to change the definition of a class nor annotation by amending the module where it is defined. Generally, there are two strategies for referencing a property from a class or annotation: Add the const modifier to the referenced property One solution is to add the const modifier to the property being referenced. Birds.pkl -pigeonName: String = \"Pigeon\" +const pigeonName: String = \"Pigeon\" class Bird { name: String = pigeonName } This solution makes sense if pigeonName does get assigned/amended when amending module Birds.pkl (modules are regular objects that can be amended). Self-import the module Birds.pkl +import \"Birds.pkl\" (1) + pigeonName: String = \"Pigeon\" class Bird { - name: String = pigeonName + name: String = Birds.pigeonName } 1 module Birds imports itself This solution works because an import clause implicitly defines a const local property and amending this module does not affect a self-import. This makes sense if property pigeonName does get assigned/amended when amending module Birds.pkl. A value of type Listing is an ordered, indexed collection of elements. A listing’s elements have zero-based indexes and are lazily evaluated on the first read. Listings combine qualities of lists and objects: Like lists, listings can contain arbitrary elements. Like objects, listings excel at defining and amending nested literal data structures. Like objects, listings can only be directly manipulated through amendment, but converting them to a list (and, if necessary, back to a listing) opens the door to arbitrary transformations. Like object properties, listing elements are evaluated lazily, can be defined in terms of each other, and are late-bound. When to use Listing vs. List When a collection of elements needs to be specified literally, use a listing. When a collection of elements needs to be transformed in a way that cannot be achieved by amending a listing, use a list. If in doubt, use a listing. Templates and schemas should almost always use listings instead of lists. Note that listings can be converted to lists when the need arises. Listings have a literal syntax that is similar to that of objects. Here is a listing with two elements: birds = new Listing { (1) new { (2) name = \"Pigeon\" diet = \"Seed\" } new { (3) name = \"Parrot\" diet = \"Berries\" } } 1 Defines a module property named birds with a value of type Listing. A type only needs to be stated when the property does not have or inherit a type annotation. Otherwise, amend syntax (birds { …​ }) or shorthand instantiation syntax (birds = new { …​ }) should be used. 2 Defines a listing element of type Dynamic. 3 Defines another listing element of type Dynamic. The order of definitions is relevant. To access an element by index, use the [] (subscript) operator: firstBirdName = birds[0].name (1) secondBirdDiet = birds[1].diet (2) 1 result: \"Pigeon\" 2 result: \"Berries\" Listings can contain arbitrary types of elements: listing = new Listing { \"Pigeon\" (1) 3.min (2) new Listing { (3) \"Barn owl\" } } 1 Defines a listing element of type String. 2 Defines a listing element of type Duration. 3 Defines a listing element of type Listing. Listings can have local properties: listing = new Listing { local pigeon = \"Pigeon\" (1) pigeon (2) \"A \" + pigeon + \" is a bird\" (3) } 1 Defines a local property with value \"Pigeon\". Local properties can have a type annotation, as in pigeon: String = \"Pigeon\". 2 Defines a listing element that references the local property. 3 Defines another listing element that references the local property. Let’s say we have the following listing: birds = new Listing { new { name = \"Pigeon\" diet = \"Seeds\" } new { name = \"Parrot\" diet = \"Berries\" } } To add, override, or amend elements of this listing, amend the listing itself: birds2 = (birds) { (1) new { (2) name = \"Barn owl\" diet = \"Mice\" } [0] { (3) diet = \"Worms\" } [1] = new { (4) name = \"Albatross\" diet = \"Fish\" } } 1 Defines a module property named birds2. Its value is a listing that amends birds. 2 Defines a listing element of type Dynamic. 3 Amends the listing element at index 0 (whose name is \"Pigeon\") and overrides property diet. 4 Overrides the listing element at index 1 (whose name is \"Parrot\") with an entirely new dynamic object. A listing element can be defined in terms of another element. To reference the element at index , use this[]: birds = new Listing { new { (1) name = \"Pigeon\" diet = \"Seeds\" } (this[0]) { (2) name = \"Parrot\" } } 1 Defines a listing element of type Dynamic. 2 Defines a listing element that amends the element at index 0 and overrides name. Listing elements are late-bound: newBirds = (birds) { (1) [0] { diet = \"Worms\" } } secondBirdDiet = newBirds[1].diet (2) 1 Amends listing birds and overrides property diet of element 0 (whose name is \"Pigeon\"`) to have value \"Worms\". 2 Because element 1 is defined in terms of element 0, its diet property also changes to \"Worms\". Say we have the following listing: birds = new Listing { new { name = \"Pigeon\" diet = \"Seeds\" } new { name = \"Parrot\" diet = \"Berries\" } } How can the order of elements be reversed programmatically? The recipe for transforming a listing is: Convert the listing to a list. Transform the list using List's rich API. If necessary, convert the list back to a listing. Often, transformations happen in a converter of a value renderer. Because most value renderers treat lists the same as listings, it is often not necessary to convert back to a listing. Equipped with this knowledge, let’s try to accomplish our objective: reversedbirds = birds .toList() .reverse() .toListing() result now contains the same elements as birds, but in reverse order. Lazy vs. Eager Data Types Converting a listing to a list is a transitition from a lazy to an eager data type. All of the listing’s elements are evaluated and all references between them are resolved. If the list is later converted back to a listing, subsequent changes to the listing’s elements no longer propagate to (previously) dependent elements. To make these boundaries clear, transitioning between lazy and eager data types always requires an explicit method call, such as toList() or toListing(). Listings can have a default element: birds = new Listing { default { (1) lifespan = 8 } new { (2) name = \"Pigeon\" (3) } new { (4) name = \"Parrot\" lifespan = 20 (5) } } 1 Amends the default element and sets property lifespan. 2 Defines a new listing element that implicitly amends the default element. 3 Defines a new property called name. Property lifespan is inherited from the default element. 4 Defines a new listing element that implicitly amends the default element. 5 Overrides the default for property lifespan. default is a hidden (that is, not rendered) property defined in class Listing. If birds had a type annotation, a suitable default element would be inferred from its type parameter. If, as in our example, no type annotation is provided or inherited, the default element is the empty Dynamic object. Like regular listing elements, the default element is late-bound. As a result, defaults can be changed retroactively: birds2 = (birds) { default { lifespan = 8 diet = \"Seeds\" } } Because both of birds's elements amend the default element, changing the default element also changes them. An equivalent literal definition of birds2 would look as follows: birds2 = new Listing { new { name = \"Pigeon\" lifespan = 8 diet = \"Seeds\" } new { name = \"Parrot\" lifespan = 20 diet = \"Berries\" } } Note that Parrot kept its diet because its prior self defined it explicitly, overriding any default. If you are interested in the technical underpinnings of default elements (and not afraid of dragons!), continue with Function Amending. To declare the type of a property that is intended to hold a listing, use: x: Listing This declaration has the following effects: x is initialized with an empty listing. If ElementType has a default value, that value becomes the listing’s default element. The first time x is read, its value is checked to have type Listing. the listing’s elements are checked to have type ElementType. Here is an example: class Bird { name: String lifespan: Int } birds: Listing Because the default value for type Bird is new Bird {}, that value becomes the listing’s default element. Let’s go ahead and populate birds: birds { new { name = \"Pigeon\" lifespan = 8 } new { name = \"Parrot\" lifespan = 20 } } Thanks to birds's default element, which was inferred from its type, it is not necessary to state the type of each list element (new Bird { …​ }, new Bird { …​ }, etc.). To constrain a listing to distinct elements, use Listing's isDistinct property: class Bird { name: String lifespan: Int } birds: Listing(isDistinct) This is as close as Pkl’s late-bound data types (objects, listings, and mappings) get to a Set. To demand distinct names instead of distinct Bird objects, use isDistinctBy(): birds: Listing(isDistinctBy((it) -> it.name)) A value of type Mapping is an ordered collection of values indexed by key. Most of what has been said about listings also applies to mappings. Nevertheless, this section is written to stand on its own. A mapping’s key–value pairs are called its entries. Keys are eagerly evaluated; values are lazily evaluated on the first read. Mappings combine qualities of maps and objects: Like maps, mappings can contain arbitrary key–value pairs. Like objects, mappings excel at defining and amending nested literal data structures. Like objects, mappings can only be directly manipulated through amendment, but converting them to a map (and, if necessary, back to a mapping) opens the door to arbitrary transformations. Like object properties, a mapping’s values (but not its keys) are evaluated lazily, can be defined in terms of each other, and are late-bound. When to use Mapping vs. Map When key–value style data needs to be specified literally, use a mapping. When key–value style data needs to be transformed in a way that cannot be achieved by amending a mapping, use a map. If in doubt, use a mapping. Templates and schemas should almost always use mappings instead of maps. Note that mappings can be converted to maps when the need arises. Mappings have the same literal syntax as objects, except that keys enclosed in [] take the place of property names. Here is a mapping with two entries: birds = new Mapping { (1) [\"Pigeon\"] { (2) lifespan = 8 diet = \"Seeds\" } [\"Parrot\"] { (3) lifespan = 20 diet = \"Berries\" } } 1 Defines a module property named birds with a value of type Mapping. A type only needs to be stated when the property does not have or inherit a type annotation. Otherwise, amend syntax (birds { …​ }) or shorthand instantiation syntax (birds = new { …​ }) should be used. 2 Defines a mapping entry with key \"Pigeon\" and a value of type Dynamic. 3 Defines a mapping entry with key \"Parrot\" and a value of type Dynamic. To access a value by key, use the [] (subscript) operator: pigeon = birds[\"Pigeon\"] parrot = birds[\"Parrot\"] Mappings can contain arbitrary types of values: mapping = new Mapping { [\"number\"] = 42 [\"list\"] = List(\"Pigeon\", \"Parrot\") [\"nested mapping\"] { [\"Pigeon\"] { lifespan = 20 diet = \"Seeds\" } } } Although string keys are most common, mappings can contain arbitrary types of keys: mapping = new Mapping { [3.min] = 42 [new Dynamic { name = \"Pigeon\" }] = \"abc\" } Keys can be computed: mapping = new Mapping { [\"Pigeon\".reverse()] = 42 } Mappings can have local properties: mapping = new Mapping { local parrot = \"Parrot\" (1) [\"Pigeon\"] { (2) friend = parrot } } 1 Defines a local property name parrot with value \"Parrot\". Local properties can have a type annotation, as in parrot: String = \"Parrot\". 2 Defines a mapping entry whose value references parrot. The local property is visible to values but not keys. Let’s say we have the following mapping: birds = new Mapping { [\"Pigeon\"] { lifespan = 8 diet = \"Seeds\" } [\"Parrot\"] { lifespan = 20 diet = \"Berries\" } } To add, override, or amend entries of this mapping, amend the mapping: birds2 = (birds) { (1) [\"Barn owl\"] { (2) lifespan = 15 diet = \"Mice\" } [\"Pigeon\"] { (3) diet = \"Seeds\" } [\"Parrot\"] = new { (4) lifespan = 20 diet = \"Berries\" } } 1 Defines a module property named birds2. Its value is a mapping that amends birds. 2 Defines a mapping entry with key \"Barn owl\" and a value of type Dynamic. 3 Amends mapping entry \"Pigeon\" and overrides property diet. 4 Overrides mapping entry \"Parrot\" with an entirely new value of type Dynamic. A mapping entry’s value can be defined in terms of another entry’s value. To reference the value with key , use this[]: birds = new Mapping { [\"Pigeon\"] { (1) lifespan = 8 diet = \"Seeds\" } [\"Parrot\"] = (this[\"Pigeon\"]) { (2) lifespan = 20 } } 1 Defines a mapping entry with key \"Pigeon\" and a value of type Dynamic. 2 Defines a mapping entry with key \"Parrot\" and a value that amends \"Pigeon\". Mapping values are late-bound: birds2 = (birds) { (1) [\"Pigeon\"] { diet = \"Seeds\" } } parrotDiet = birds2[\"Parrot\"].diet (2) 1 Amends mapping birds and overrides \"Pigeon\"'s diet property to have value \"Seeds\". 2 Because \"Parrot\" is defined in terms of \"Pigeon\", its diet property also changes to \"Seeds\". Say we have the following mapping: birds = new Mapping { [\"Pigeon\"] { lifespan = 8 diet = \"Seeds\" } [\"Parrot\"] = (this[\"Pigeon\"]) { lifespan = 20 } } How can birds's keys be reversed programmatically? The recipe for transforming a mapping is: Convert the mapping to a map. Transform the map using Map's rich API. If necessary, convert the map back to a mapping. Often, transformations happen in a converter of a value renderer. As most value renderers treat maps the same as mappings, it is often not necessary to convert back to a mapping. Equipped with this knowledge, let’s try to accomplish our objective: result = birds .toMap() .mapKeys((key, value) -> key.reverse()) .toMapping() result contains the same values as birds, but its keys have changed to \"noegiP\" and \"torraP\". Lazy vs. Eager Data Types Converting a mapping to a map is a transitition from a lazy to an eager data type. All of the mapping’s values are evaluated and all references between them are resolved. (Mapping keys are eagerly evaluated.) If the map is later converted back to a mapping, changes to the mapping’s values no longer propagate to (previously) dependent values. To make these boundaries clear, transitioning between lazy and eager data types always requires an explicit method call, such as toMap() or toMapping(). Mappings can have a default value: birds = new Mapping { default { (1) lifespan = 8 } [\"Pigeon\"] { (2) diet = \"Seeds\" (3) } [\"Parrot\"] { (4) lifespan = 20 (5) } } 1 Amends the default value and sets property lifespan. 2 Defines a mapping entry with key \"Pigeon\" that implicitly amends the default value. 3 Defines a new property called diet. Property lifespan is inherited from the default value. 4 Defines a mapping entry with key \"Parrot\" that implicitly amends the default value. 5 Overrides the default for property lifespan. default is a hidden (that is, not rendered) property defined in class Mapping. If birds had a type annotation, a suitable default value would be inferred from its second type parameter. If, as in our example, no type annotation is provided or inherited, the default value is the empty Dynamic object. Like regular mapping values, the default value is late-bound. As a result, defaults can be changed retroactively: birds2 = (birds) { default { lifespan = 8 diet = \"Seeds\" } } Because both of birds's mapping values amend the default value, changing the default value also changes them. An equivalent literal definition of birds2 would look as follows: birds2 = new Mapping { [\"Pigeon\"] { lifespan = 8 diet = \"Seeds\" } [\"Parrot\"] { lifespan = 20 diet = \"Berries\" } } Note that Parrot kept its lifespan because its prior self defined it explicitly, overriding any default. If you are interested in the technical underpinnings of default values, continue with Function Amending. To declare the type of a property that is intended to hold a mapping, use: x: Mapping This declaration has the following effects: x is initialized with an empty mapping. If ValueType has a default value, that value becomes the mapping’s default value. The first time x is read, its value is checked to have type Mapping. the mapping’s keys are checked to have type KeyType. the mapping’s values are checked to have type ValueType. Here is an example: class Bird { lifespan: Int } birds: Mapping Because the default value for type Bird is new Bird {}, that value becomes the mapping’s default value. Let’s go ahead and populate birds: birds { [\"Pigeon\"] { lifespan = 8 } [\"Parrot\"] { lifespan = 20 } } Thanks to birds's default value, which was inferred from its type, it is not necessary to state the type of each mapping value ([\"Pigeon\"] = new Bird { …​ }, [\"Parrot\"] = new Bird { …​ }, etc.). Classes are arranged in a single inheritance hierarchy. At the top of the hierarchy sits class Any; at the bottom, type nothing. Classes contain properties and methods, which can be local to their declaring scope. Properties can also be hidden from rendering. class Bird { name: String hidden taxonomy: Taxonomy } class Taxonomy { `species`: String } pigeon: Bird = new { name = \"Common wood pigeon\" taxonomy { species = \"Columba palumbus\" } } pigeonClass = pigeon.getClass() Declaration of new class instances will fail when property names are misspelled: // Detects the spelling mistake parrot = new Bird { namw = \"Parrot\" } Pkl supports single inheritance with a Java(Script) like syntax. abstract class Bird { name: String } class ParentBird extends Bird { kids: List } pigeon: ParentBird = new { name = \"Old Pigeon\" kids = List(\"Pigeon Jr.\", \"Teen Pigeon\") } Modules and classes can define methods. Submodules and subclasses can override them. Like Java and most other object-oriented languages, Pkl uses single dispatch — methods are dynamically dispatched based on the receiver’s runtime type. class Bird { name: String function greet(bird: Bird): String = \"Hello, \\(bird.name)!\" (1) } function greetPigeon(bird: Bird): String = bird.greet(pigeon) (2) pigeon: Bird = new { name = \"Pigeon\" } parrot: Bird = new { name = \"Parrot\" } greeting1 = pigeon.greet(parrot) (3) greeting2 = greetPigeon(parrot) (4) 1 Instance method of class Bird. 2 Module method. 3 Call instance method on pigeon. 4 Call module method (on this). Modules are the unit of loading, executing, and sharing Pkl code. Every file containing Pkl code is a module. By convention, module files have a .pkl extension. Modules have a Module Name and are loaded from a Module URI. At runtime, modules are represented as objects of type Module. The precise runtime type of a module is a subclass of Module containing the module’s property and method definitions. Like class members, module members may have type annotations, which are validated at runtime: timeout: Duration(isPositive) = 5.ms function greet(name: String): String = \"Hello, \\(name)!\" Because modules are regular objects, they can be assigned to properties and passed to and returned from methods. Modules can be imported by other modules. In analogy to objects, modules can serve as templates for other modules through amending. In analogy to classes, modules can be extended to add additional module members. Modules may declare their name by way of a module clause, which consists of the keyword module followed by a qualified name: /// My bird module. module com.animals.Birds A module clause must come first in a module. Its doc comment, if present, holds the module’s overall documentation. In the absence of a module clause, a module’s name is inferred from the module URI from which the module was first loaded. For example, the inferred name for a module first loaded from https://example.com/pkl/bird.pkl is bird. Module names do not affect evaluation but are used in diagnostic messages and Pkldoc. In particular, they are the first component (everything before the hash sign) of fully qualified member names such as pkl.base#Int. Modules shared with other parties should declare a qualified module name, which is more unique and stable than an inferred name. Modules are loaded from module URIs. By default, the following URI types are available for import: Example: file:///path/to/my_module.pkl Represents a module located on a file system. Example: https://example.com/my_module.pkl Represents a module imported via an HTTP(S) GET request. Modules loaded from HTTP(S) URIs are only cached until the pkl command exits or the Evaluator object is closed. Example: modulepath:/path/to/my_module.pkl Module path URIs are resolved relative to the module path, a search path for modules similar to Java’s class path (see the --module-path CLI option). For example, given the module path /dir1:/zip1.zip:/jar1.jar, module modulepath:/path/to/my_module.pkl will be searched for in the following locations: /dir1/path/to/my_module.pkl /path/to/my_module.pkl within /zip1.zip /path/to/my_module.pkl within /jar1.jar When evaluating Pkl code from Java, modulepath:/path/to/my_module.pkl corresponds to class path location path/to/my_module.pkl. In a typical Java project, this corresponds to file path src/main/resources/path/to/my_module.pkl or src/test/resources/path/to/my_module.pkl. Example: package://example.com/mypackage@1.0.0#/my_module.pkl Represent a module within a package. A package is a shareable archive of modules and resources that are published to the internet. To import package://example.com/mypackage@1.0.0#/my_module.pkl, Pkl follows these steps: Make an HTTPS GET request to https://example.com/mypackage@1.0.0 to retrieve the package’s metadata. From the package metadata, download the referenced zip archive, and validate its checksum. Resolve path /my_module.pkl within the package’s zip archive. A package asset URI has the following form: 'package://' '@' '#' Optionally, the SHA-256 checksum of the package can also be specified: 'package://' '@' '::sha256:' '#' Packages can be managed as dependencies within a project. For more details, consult the project section of the language reference. Example: pkl:math Standard library modules are named pkl. and have module URIs of the form pkl:. For example, module pkl.math has module URI pkl:math. See the API Docs for the complete list of standard library modules. Relative module URIs are interpreted relative to the URI of the enclosing module. For example, a module with URI modulepath:/animals/birds/pigeon.pkl can import modulepath:/animals/birds/parrot.pkl with import \"parrot.pkl\" or import \"/animals/birds/parrot.pkl\". When importing a relative folder or file that starts with @, the import string must be prefixed with ./. Otherwise, this syntax will be interpreted as dependency notation. Example: @birds/bird.pkl Dependency notation URIs represent a path within a project or package dependency. For example, import @birds/bird.pkl represents path /bird.pkl in a dependency named \"birds\". A dependency is either a remote package, or a local project dependency. Pkl embedders can register additional module loaders that recognize other types of module URIs. Module URIs can be evaluated directly: $ pkl eval path/to/mymodule.pkl $ pkl eval file:///path/to/my_module.pkl $ pkl eval https://apple.com/path/to/mymodule.pkl $ pkl eval --module-path=/pkl-modules modulepath:/path/to/my_module.pkl $ pkl eval pkl:math To simplify referencing ancestor modules in a hierarchical module structure, relative file and module path URIs may start with .../, a generalization of ../. Module URI .../foo/bar/baz.pkl resolves to the first existing module among ../foo/bar/baz.pkl, ../../foo/bar/baz.pkl, ../../../foo/bar/baz.pkl, and so on. Furthermore, module URI ... is equivalent to .../. Using triple-dot module URIs never resolve to the current module. For example, a module at path foo/bar.pkl that references module URI .../foo/bar.pkl does not resolve to itself. Recall how an object is amended: pigeon { name = \"Pigeon\" diet = \"Seeds\" } parrot = (pigeon) { (1) name = \"Parrot\" (2) } 1 Object parrot amends object pigeon, inheriting all of its members. 2 parrot overrides name. Amending a module works in the same way, except that the syntax differs slightly: pigeon.pkl name = \"Pigeon\" diet = \"Seeds\" parrot.pkl amends \"pigeon.pkl\" (1) name = \"Parrot\" (2) 1 Module parrot amends module pigeon, inheriting all of its members. 2 parrot overrides name. A module is amended by way of an amends clause, which consists of the keyword amends followed by the module URI of the module to amend. An amends clause comes after the module clause (if present) and before any import clauses: parrot.pkl module parrot amends \"pigeon.pkl\" import \"other.pkl\" name = \"Parrot\" At most one amends clause is permitted. A module cannot have both an amends clause and an extends clause. An amending module has the same type (that is, module class) as the module it amends. As a consequence, it cannot define new properties, methods, or classes, unless they are declared as local. In our example, this means that module parrot can only define (and thus override) the property name. Spelling mistakes such as namw are caught immediately, rather than accidentally defining a new property. Amending is used to fill in template modules: The template module defines which properties exist, their types, and what module output is desired (for example JSON indented with two spaces). The amending module fills in property values as required, relying on the structure, defaults and validation provided by the template module. The amending module is evaluated to produce the final result. Template modules are often provided by third parties and served over HTTPS. Recall how a class is extended: PigeonAndParrot.pkl open class Pigeon { (1) name = \"Pigeon\" diet = \"Seeds\" } class Parrot extends Pigeon { (2) name = \"Parrot\" (3) diet = \"Berries\" (4) extinct = false (5) function say() = \"Pkl is great!\" (6) } 1 Class Pigeon is declared as open for extension. 2 Class Parrot extends Pigeon, inheriting all of its members. 3 Parrot overrides name. 4 Parrot overrides diet. 5 Parrot defines a new property named extinct. 6 Parrot defines a new function named say. Extending a module works in the same way, except that the syntax differs slightly: pigeon.pkl open module pigeon (1) name = \"Pigeon\" diet = \"Seeds\" 1 Module pigeon is declared as open for extension. parrot.pkl extends \"pigeon.pkl\" (1) name = \"Parrot\" (2) diet = \"Berries\" (3) extinct = false (4) function say() = \"Pkl is great!\" (5) 1 Module parrot extends module pigeon, inheriting all of its members. 2 parrot overrides name. 3 parrot overrides diet. 4 parrot defines a new property named extinct. 5 parrot defines a new function named say. A module is extended by way of an extends clause, which consists of the keyword extends followed by the module URI of the module to extend. The extends clause comes after the module clause (if present) and before any import clauses. Only modules declared as open can be extended. parrot.pkl module parrot extends \"pigeon.pkl\" import \"other.pkl\" name = \"Parrot\" diet = \"Berries\" extinct = false function say() = \"Pkl is great!\" At most, one extends clause is permitted. A module cannot have both an amends clause and an extends clause. Extending a module implicitly defines a new module class that extends the original module’s class. A module import makes the imported module accessible to the importing module. A module is imported by way of either an import clause, or an import expression. An import clause consists of the keyword import followed by the module URI of the module to import. An import clause comes after module, amends and extends clauses (if present), and before the module body: parrot.pkl module parrot amends \"pigeon.pkl\" import \"module1.pkl\" import \"module2.pkl\" name = \"Parrot\" Multiple import clauses are permitted. A module import implicitly defines a new const local property through which the imported module can be accessed. (Remember that modules are regular objects.) The name of this property, called import name, is constructed from the module URI as follows: Strip the URI scheme, including the colon (:). Strip everything up to and including the last forward slash (/). Strip any trailing .pkl file extension. Here are some examples: Local file import import \"modules/pigeon.pkl\" // relative to current module name = pigeon.name HTTPS import import \"https://mycompany.com/modules/pigeon.pkl\" name = pigeon.name Standard library import import \"pkl:math\" pi = math.Pi Package import import \"package://example.com/birds@1.0.0#/sparrow.pkl\" name = sparrow.name Because its members are automatically visible in every module, the pkl:base module is typically not imported. Occasionally, the default import name for a module may not be convenient or appropriate: If not a valid identifier, the import name needs to be enclosed in backticks on each use, for example, `my-module`.someMember. The import name may clash with other names in the importing module. In such a case, a different import name can be chosen: parrot.pkl import \"pigeon.pkl\" as piggy name = \"Parrot\" diet = piggy.diet What makes a good module file name? When creating a new module, especially one intended for import into other modules, try to choose a module file name that makes a good import name: short Less than six characters, not counting the .pkl file extension, is a good rule of thumb. valid identifier Stick to alphanumeric characters. Use underscore (_) instead of hyphen (-) as name separator. descriptive An import name should make sense on its own and when used in qualified member names. An import expression consists of the keyword import, following by a module URI wrapped in parentheses: module birds pigeon = import(\"pigeon.pkl\") parrot = import(\"parrot.pkl\") Unlike import clauses, import expressions only import a value, and do not import a type. A type is a name that can be used in type positions, for example, as a type annotation. Multiple modules may be imported at once with import*. When importing multiple modules, a glob pattern is used to match against existing resources. A globbed import evaluates to a Mapping, where keys are the expanded form of the glob and values are import expressions on each individual module. Globbed imports can be expressed as either a clause, or as an expression. When expressed as a clause, they follow the same naming rules as a normal import clause: they introduce a local property equal to the last path segment without the .pkl extension. A globbed import clause cannot be used as a type. import* \"birds/*.pkl\" as allBirds (1) import* \"reptiles/*.pkl\" (2) birds = import*(\"birds/*.pkl\") (3) 1 Globbed import clause 2 Globbed import clause without explicit name (will import the name *) 3 Globbed import expression Assuming that a file system contains these files: . ├── birds/ │ ├── pigeon.pkl │ ├── parrot.pkl │ └── falcon.pkl └── index.pkl The following two snippets are logically identical: index.pkl birds = import*(\"birds/*.pkl\") index.pkl birds = new Mapping { [\"birds/pigeon.pkl\"] = import(\"birds/pigeon.pkl\") [\"birds/parrot.pkl\"] = import(\"birds/parrot.pkl\") [\"birds/falcon.pkl\"] = import(\"birds/falcon.pkl\") } By default, only the file and package schemes are globbable. Globbing another scheme will cause Pkl to throw. Pkl can be extended to provide custom globbable schemes through the ModuleKey SPI. When globbing within packages, only the asset path (the fragment section) is globbable. Otherwise, characters are interpreted verbatim, and not treated as glob wildcards. For details on how glob patterns work, refer to Glob Patterns in the Advanced Topics section. When globbing files, symbolic links are not followed. Additionally, the . and .. entries are skipped. This behavior is similar to the behavior of Bash with shopt -s dotglob enabled. When attempting to directly evaluate a module, as in pkl myModule.pkl, the following security checks are performed: The module URI is checked against the module allowlist (--allowed-modules). The module allowlist is a comma-separated list of regular expressions. For access to be granted, at least one regular expression must match a prefix of the module URI. For example, the allowlist file:,https: grants access to any module whose URI starts with file: or https:. When a module attempts to load another module (via amends, extends, or imports), the following security checks are performed: The target module URI is checked against the module allowlist (--allowed-modules). The source and target modules' trust levels are determined and compared. For access to be granted, the source module’s trust level must be higher than or equal to the target module’s trust level. By default, there are five trust levels, listed from highest to lowest: repl: modules (code evaluated in the REPL) file: modules modulepath: modules All other modules (for example https:) pkl: modules (standard library) For example, this means that file: modules can import https: modules, but not the other way around. If a module URI is resolved in multiple steps, all URIs are subject to the above security checks. An example for this is an HTTPS URL that results in a redirect. Pkl embedders can further customize security checks. By default, the output of evaluating a module is the entire module rendered as Pcf. There are two ways to change this behavior: Outside the language, by using the --format CLI option or the outputFormat Gradle task property. Inside the language, by configuring a module’s output property. Given the following module: config.pkl a = 10 b { c = 20 } pkl config.pkl, which is shorthand for pkl --format pcf config.pkl, renders the module as Pcf: a = 10 b { c = 20 } pkl --format yaml config.pkl renders the module as YAML: a: 10 b: c: 20 Likewise, pkl --format json config.pkl renders the module as JSON. Now let’s do the same — and more — inside the language. Modules have an output property that controls what the module’s output is and how that output is rendered. To control what the output is, set the output.value property: a = 10 b { c = 20 } output { value = b // defaults to `outer`, which is the entire module } This produces: c = 20 To control how the output is rendered, set the output.renderer property: a = 10 b { c = 20 } output { renderer = new YamlRenderer {} } The standard library provides these renderers: JsonRenderer jsonnet.Renderer PcfRenderer PListRenderer PropertiesRenderer protobuf.Renderer xml.Renderer YamlRenderer To render a format that is not yet supported, implement your own renderer by extending class ValueRenderer. The standard library renderers can be configured with value converters, which influence how particular values are rendered. For example, since YAML does not have a standard way to represent data sizes, a plain YamlRenderer cannot render DataSize values. However, we can teach it to: quota { memory = 100.mb disk = 20.gb } output { renderer = new YamlRenderer { converters { [DataSize] = (size) -> \"\\(size.value) \\(size.unit)\" } } } This produces: quota: memory: 100 MB disk: 20 GB In addition to type based converters, renderers also support path based converters: output { renderer = new YamlRenderer { converters { [\"quota.memory\"] = (size) -> \"\\(size.value) \\(size.unit)\" [\"quota.disk\"] = (size) -> \"\\(size.value) \\(size.unit)\" } } } For more on path based converters, see PcfRenderer.converters. Sometimes it is useful to directly compute the final module output, bypassing output.value and output.converters. To do so, set the output.text property to a String value: output { // defaults to `renderer.render(value)` text = \"this is the final output\".toUpperCase() } This produces: THIS IS THE FINAL OUTPUT Sometimes, it is desirable for a single module to produce multiple output files. This is possible by configuring a module’s output.files property and specifying the --multiple-file-output-path (or -m for short) CLI option. Here is an example that produces a JSON and a YAML file: birds.pkl pigeon { name = \"Pigeon\" diet = \"Seeds\" } parrot { name = \"Parrot\" diet = \"Seeds\" } output { files { [\"birds/pigeon.json\"] { value = pigeon renderer = new JsonRenderer {} } [\"birds/parrot.yaml\"] { value = parrot renderer = new YamlRenderer {} } } } Running pkl -m output/ pigeon.pkl produces the following output files: output/birds/pigeon.json { \"name\": \"Pigeon\", \"diet\": \"Seeds\" } output/birds/parrot.yaml name: Parrot diet: Berries Within output.files, a key determines a file’s path relative to --multiple-file-output-path, and a value determines the file’s contents. If a file’s path resolves to a location outside --multiple-file-output-path, evaluation fails with an error. Non-existing parent directories are created. A value within output.files can be another module’s output. With this, a module can aggregate the outputs of multiple other modules. Here is an example: pigeon.pkl name = \"Pigeon\" diet = \"Seeds\" output { renderer = new JsonRenderer {} } parrot.pkl name = \"Parrot\" diet = \"Seeds\" output { renderer = new YamlRenderer {} } birds.pkl import \"pigeon.pkl\" import \"parrot.pkl\" output { files { [\"birds/pigeon.json\"] = pigeon.output [\"birds/parrot.yaml\"] = parrot.output } } When aggregating module outputs, the appropriate file extensions can be obtained programmatically: birds.pkl import \"pigeon.pkl\" import \"parrot.pkl\" output { files { [\"birds/pigeon.\\(pigeon.output.renderer.extension)\"] = pigeon.output [\"birds/parrot.\\(parrot.output.renderer.extension)\"] = parrot.output } } The keyword null indicates the absence of a value. null is an instance of Null, a direct subclass of Any. The !! (non-null) operator asserts that its operand is non-null. Here are some examples: name = \"Pigeon\" nameNonNull = name!! (1) name2 = null name2NonNull = name2!! (2) 1 result: \"Pigeon\" 2 result: Error: Expected a non-null value, but got null. The ?? (null coalescing) operator fills in a default for a null value. value ?? default The above expression evaluates to value if value is non-null, and to default otherwise. Here are some examples: name = \"Pigeon\" nameOrParrot = name ?? \"Parrot\" (1) name2 = null name2OrParrot = name2 ?? \"Parrot\" (2) 1 result: \"Pigeon\" 2 result: \"Parrot\" Default non-null behavior There are many languages that allow null for (almost) every type, but Pkl does not. Any type can be extended to include null by appending ? to the type. For example, parrot: Bird will always be non-null, but pigeon: Bird? could be null - and is by default, if pigeon is never amended. This means if you try to coalesce a (non-nullable) typed variable, the result is always that variable’s value. As per our example parrot ?? pigeon == parrot always holds, but pigeon ?? parrot could either be pigeon or parrot, depending on whether pigeon was ever amended with a non-null value. The ?. (null propagation) operator provides null-safe access to a member whose receiver may be null. value?.member The above expression evaluates to value.member if value is non-null, and to null otherwise. Here are some examples: name = \"Pigeon\" nameLength = name?.length (1) nameUpper = name?.toUpperCase() (2) name2 = null name2Length = name2?.length (3) name2Upper = name2?.toUpperCase() (4) 1 result: 6 2 result: \"PIGEON\" 3 result: null 4 result: null The ?. operator is often combined with ??: name = null nameLength = name?.length ?? 0 (1) 1 result: 0 The ifNonNull() method is a generalization of the null propagation operator. name.ifNonNull((it) -> doSomethingWith(it)) The above expression evaluates to doSomethingWith(name) if name is non-null, and to null otherwise. Here are some examples: name = \"Pigeon\" nameWithTitle = name.ifNonNull((it) -> \"Dr.\" + it) (1) name2 = null name2WithTitle = name2.ifNonNull((it) -> \"Dr.\" + it) (2) 1 result: \"Dr. Pigeon\" 2 result: null To express that a property can have any type except Null, use the NonNull type alias: x: NonNull An if expression serves the same role as the ternary operator (? :) in other languages. Every if expression must have an else branch. num = if (2 + 2 == 5) 1984 else 42 (1) 1 result: 42 Pkl programs can read external resources, such as environment variables or text files. To read a resource, use a read expression: path = read(\"env:PATH\") By default, the following resource URI schemes are supported: env: Reads an environment variable. Result type is String. prop: Reads an external property set via the -p name=value CLI option. Result type is String. file: Reads a file from the file system. Result type is Resource. http(s): Reads an HTTP(S) resource. Result type is Resource. modulepath: Reads a resource from the module path (--module-path) or JVM class path. Result type is Resource. See Module Path URI for further information. package: Reads a resource from a package. Result type is Resource. See Package asset URI: for further information. Relative resource URIs are resolved against the enclosing module’s URI. Resources are cached in memory on the first read. Therefore, subsequent reads are guaranteed to return the same result. If a resource does not exist or cannot be read, read() fails with an error. To recover from the absence of a resource, use read?() instead, which returns null for absent resources: port = read?(\"env:PORT\")?.toInt() ?? 1234 Multiple resources may be read at the same time with read*(). When reading multiple resources, a glob pattern is used to match against existing resources. A globbed read returns a Mapping, where the keys are the expanded form of the glob, and values are read expressions on each individual resource. Assuming that a file system contains these files: . ├── birds/ │ ├── pigeon.pkl │ ├── parrot.pkl │ └── falcon.pkl └── index.pkl The following two snippets are logically identical: index.pkl birdFiles = read*(\"birds/*.pkl\") index.pkl birdFiles = new Mapping { [\"birds/pigeon.pkl\"] = read(\"birds/pigeon.pkl\") [\"birds/parrot.pkl\"] = read(\"birds/parrot.pkl\") [\"birds/falcon.pkl\"] = read(\"birds/falcon.pkl\") } By default, the following schemes support globbing: modulepath file env prop Globbing other resources results in an error. For details on how glob patterns work, reference Glob Patterns in the Advanced Topics section. When globbing files, symbolic links are not followed. Additionally, the . and .. entries are skipped. This behavior is similar to the behavior of Bash with shopt -s dotglob enabled. The env and prop schemes are considered opaque, as they do not have traditional hierarchical elements like a host, path, or query string. While globbing is traditionally viewed as a way to match elements in a file system, a glob pattern is simply a way to match strings. Thus, environment variables and external properties can be globbed, where their names get matched according to the rules described by the glob pattern. To match all values within these schemes, use the ** wildcard. This has the effect of matching names that contain a forward slash too (/). For example, the expression read*(\"env:**\") will evaluate to a Mapping of all environment variables. When Pkl is embedded within another runtime, it can be extended to read other kinds of resources. When embedded into a JVM application, new resources may be read by implementing the ResourceReader SPI. When Pkl is embedded within Swift, new resources may be read by implementing the ResourceReader interface. When Pkl is embedded within Go, new resources may be read by implementing the ResourceReader interface. When attempting to read a resource, the resource URI is checked against the resource allowlist (--allowed-resources). In embedded mode, the allowlist is configured via an evaluator’s SecurityManager. The resource allowlist is a comma-separated list of regular expressions. For access to be granted, at least one regular expression must match a prefix of the resource URI. For example, the allowlist file:,https: grants access to any resource whose URI starts with file: or https:. By design, errors are fatal in Pkl — there is no way to recover from them. To raise an error, use a throw expression: myValue = throw(\"You won't be able to recover from this one!\") (1) 1 myValue never receives a value because the program exits. The error message is printed to the console, and the program exits. In embedded mode, a PklException is thrown. When debugging Pkl code, it can be useful to print the value of an expression. To do so, use a trace expression: num1 = 42 num2 = 16 res = trace(num1 * num2) Tracing an expression does not affect its result, but prints both its source code and result on standard error: pkl: TRACE: num1 * num2 = 672 (at file:///some/module.pkl, line 42) This section discusses language features that are generally more relevant to template and library authors than template consumers. Let Expressions Type Tests Type Casts Lists Sets Maps Regular Expressions Type Aliases Type Annotations Anonymous Functions Amending Null Values When Generators For Generators Spread Syntax Member Predicates ([[…​]]) Glob Patterns Doc Comments Name Resolution Grammar Definition Reserved Keywords Blank Identifiers Projects A let expression is Pkl’s version of an (immutable) local variable. Its syntax is: let ( = ) A let expression is evaluated as follows: is bound to , itself an expression. is evaluated, which can refer to by its (this is the point). The result of becomes the result of the overall expression. Here is an example: birdDiets = let (diets = List(\"Seeds\", \"Berries\", \"Mice\")) List(diets[2], diets[0]) (1) 1 result: List(\"Mice\", \"Seeds\") let expressions serve two purposes: They introduce a human-friendly name for a potentially complex expression. They evaluate a potentially expensive expression that is used in multiple places only once. let expressions can have type annotations: birdDiets = let (diets: List = List(\"Seeds\", \"Berries\", \"Mice\")) diets[2] + diets[0] (1) 1 result: List(\"Mice\", \"Seeds\") let expressions can be stacked: birdDiets = let (birds = List(\"Pigeon\", \"Barn owl\", \"Parrot\")) let (diet = List(\"Seeds\", \"Mice\", \"Berries\")) birds.zip(diet) (1) 1 result: List(Pair(\"Pigeon\", \"Seeds\"), Pair(\"Barn owl\", \"Mice\"), Pair(\"Parrot\", \"Berries\")) To test if a value conforms to a type, use the is operator. All the following tests hold: test1 = 42 is Int test2 = 42 is Number test3 = 42 is Any test4 = !(42 is String) open class Base class Derived extends Base base = new Base {} test5 = base is Base test6 = base is Any test7 = !(base is Derived) derived = new Derived {} test8 = derived is Derived test9 = derived is Base test10 = derived is Any A value can be tested against any type, not just a class: test1 = email is String(contains(\"@\")) (1) test2 = map is Map (2) test3 = name is \"Pigeon\"|\"Barn owl\"|\"Parrot\" (3) 1 email is tested for being a string that contains a @ sign 2 map is tested for being a map from Int to Base values 3 name is tested for being one of \"Pigeon\", \"Barn owl\", or \"Parrot\" The as (type cast) operator performs a runtime type check on its operand. If the type check succeeds, the operand is returned as-is; otherwise, an error is thrown. birds { new { name = \"Pigeon\" } new { name = \"Barn owl\" } } names = birds.toList().map((it) -> it.name) as List Although type casts are never mandatory in Pkl, they occasionally help humans and tools better understand an expression’s type. A value of type List is an ordered, indexed collection of elements. A list’s elements have zero-based indexes and are eagerly evaluated. When to use List vs. Listing When a collection of elements needs to be specified literally, use a listing. When a collection of elements needs to be transformed in a way that cannot be achieved by amending a listing, use a list. If in doubt, use a listing. Templates and schemas should almost always use listings instead of lists. Note that listings can be converted to lists when the need arises. Lists are constructed with the List() method[5]: list1 = List() (1) list2 = List(1, 2, 3) (2) list3 = List(1, \"x\", 5.min, List(1, 2, 3)) (3) 1 result: empty list 2 result: list of length 3 3 result: heterogenous list whose last element is another list To concatenate lists, use the + operator: List(1, 2) + List(3, 4) + List(5) To access a list element by index, use the [] (subscript) operator: list = List(1, 2, 3, 4) listElement = list[2] (1) 1 result: 3 Class List offers a rich API. Here are just a few examples: list = List(1, 2, 3, 4) res1 = list.contains(3) (1) res2 = list.first (2) res3 = list.rest (3) res4 = list.reverse() (4) res5 = list.drop(1).take(2) (5) res6 = list.map((n) -> n * 3) (6) 1 result: true 2 result: 1 3 result: List(2, 3, 4) 4 result: List(4, 3, 2, 1) 5 result: List(2, 3) 6 result: List(3, 6, 9, 12) A value of type Set is an ordered collection of unique elements. A set’s elements are eagerly evaluated. Sets are constructed with the Set() method[5]: res1 = Set() (1) res2 = Set(1, 2, 3) (2) res3 = Set(1, 2, 3, 1) (3) res4 = Set(1, \"x\", 5.min, List(1, 2, 3)) (4) 1 result: empty set 2 result: set of length 3 3 result: same set of length 3 4 result: heterogenous set that contains a list as its last element To compute the union of sets, use the + operator: Set(1, 2) + Set(2, 3) + Set(5, 3) (1) 1 result: Set(1, 2, 3, 5) Class Set offers a rich API. Here are just a few examples: set = Set(1, 2, 3, 4) res1 = set.contains(3) (1) res2 = set.drop(1).take(2) (2) res3 = set.map((n) -> n * 3) (3) res4 = set.intersect(Set(3, 9, 2)) (4) 1 result: true 2 result: Set(2, 3) 3 result: Set(3, 6, 9, 12) 4 result: Set(3, 2) A value of type Map is an ordered collection of values indexed by key. A map’s key–value pairs are called its entries. Keys and values are eagerly evaluated. When to use Map vs. Mapping When key–value style data needs to be specified literally, use a mapping. When key–value style data needs to be transformed in ways that cannot be achieved by amending a mapping, use a map. If in doubt, use a mapping. Templates and schemas should almost always use mappings instead of maps. (Note that mappings can be converted to maps when the need arises.) Maps are constructed by passing alternating keys and values to the Map() method[5]: map1 = Map() (1) map2 = Map(1, \"one\", 2, \"two\", 3, \"three\") (2) map3 = Map(1, \"x\", 2, 5.min, 3, Map(1, 2)) (3) 1 result: empty map 2 result: set of length 3 3 result: heterogeneous map whose last value is another map Any Pkl value can be used as map key: Map(new Dynamic { name = \"Pigeon\" }, 10.gb) To merge maps, use the + operator: combinedMaps = Map(1, \"one\") + Map(2, \"two\", 1, \"three\") + Map(4, \"four\") (1) 1 result: Map(1, \"three\", 2, \"two\", 4, \"four\") To access a value by key, use the [] (subscript) operator: map = Map(\"Pigeon\", 5.gb, \"Parrot\", 10.gb) parrotValue = map[\"Parrot\"] (1) 1 result: 10.gb Class Map offers a rich API. Here are just a few examples: map = Map(\"Pigeon\", 5.gb, \"Parrot\", 10.gb) res1 = map.containsKey(\"Parrot\") (1) res2 = map.containsValue(8.gb) (2) res3 = map.isEmpty (3) res4 = map.length (4) res5 = map.getOrNull(\"Falcon\") (5) 1 result: true 2 result: false 3 result: false 4 result: 2 5 result: null A value of type Regex is a regular expression with the same syntax and semantics as a Java regular expression. Regular expressions are constructed with the Regex() method: emailRegex = Regex(#\"([\\w\\.]+)@([\\w\\.]+)\"#) Notice the use of custom string delimiters #\" and \"#, which change the string’s escape character from \\ to \\#. As a consequence, the regular expression’s own backslash escape character no longer needs to be escaped. To test if a string fully matches a regular expression, use String.matches(): \"pigeon@example.com\".matches(emailRegex) Many String methods accept either a String or Regex argument. Here is an example: res1 = \"Pigeon\".contains(\"pigeon@example.com\") res2 = \"Pigeon\".contains(emailRegex) To find all matches of a regex in a string, use Regex.findMatchesIn(). The result is a list of RegexMatch objects containing details about each match: matches = emailRegex.findMatchesIn(\"pigeon@example.com / falcon@example.com / parrot@example.com\") list1 = matches.drop(1).map((it) -> it.start) (1) list2 = matches.drop(1).map((it) -> it.value) (2) list3 = matches.drop(1).map((it) -> it.groups[1].value) (3) 1 result: List(0, 19, 40) (the entire match, matches[0], was dropped) 2 result: List(\"pigeon@example.com\", \"falcon@example.com\", \"parrot@example.com\") 3 result: List(\"pigeon, falcon, parrot\") A type alias introduces a new name for a (potentially complicated) type: typealias EmailAddress = String(matches(Regex(#\".+@.+\"#))) Once a type alias has been defined, it can be used in type annotations: email: EmailAddress = \"pigeon@example.com\" emailList: List = List(\"pigeon@example.com\", \"parrot@example.com\") New type aliases can be defined in terms of existing ones: typealias EmailList = List emailList: EmailList = List(\"pigeon@example.com\", \"parrot@example.com\") Type aliases can have type parameters: typealias StringMap = Map map: StringMap = Map(\"Pigeon\", 42, \"Falcon\", 21) Code generators have different strategies for dealing with type aliases: the Java code generator inlines them the Kotlin code generator turns them into Kotlin type aliases. Type aliases for unions of String Literal Types are turned into enum classes by both code generators. The pkl.base module defines the following type aliases: Int8 (-128 to 127) Int16 (-32,768 to 32,767) Int32 (-2,147,483,648 to 2,147,483,647) UInt8 (0 to 255) UInt16 (0 to 65,535) UInt32 (0 to 4,294,967,295) UInt (0 to 9,223,372,036,854,775,807) Uri (any String value) Note that UInt has the same maximum value as Int, half of what would normally be expected. The main purpose of the provided integer aliases is to enforce the range of an integer: port: UInt16 = -1 This gives: Type constraint isBetween(0, 65535) violated. Value: -1 To restrict a number to a custom range, use the isBetween method: port: Int(isBetween(0, 1023)) = 443 Remember that numbers are always instances of Int or Float. Type aliases such as UInt16 only check that numbers are within a certain range. The Java and Kotlin code generators map predefined type aliases to the most suitable Java and Kotlin types. For example, UInt8 is mapped to java.lang.Byte and kotlin.Byte, and Uri is mapped to java.net.URI. Property and method definitions may optionally contain type annotations. Type annotations serve the following purposes: Documentation + Type annotations help documenting data models. They are included in generated documentation. Validation + Type annotations are validated at runtime. Defaults + Type-annotated properties have Default Values. Code Generation + Type annotations enable statically typed access to configuration data through code generation. Tooling + Type annotations enable advanced tooling features such as code completion in editors. Any class can be used as a type: class Bird { name: String (1) } bird: Bird (2) 1 Declares an instance property of type String. 2 Declares a module property of type Bird. Any module import can be used as type: bird.pkl name: String lifespan: Int birds.pkl import \"bird.pkl\" pigeon: bird (1) parrot: bird (1) 1 Guaranteed to amend bird.pkl. As a special case, the module keyword denotes the enclosing module’s type: bird.pkl name: String lifespan: Int friends: Listing pigeon.pkl amends \"bird.pkl\" name = \"Pigeon\" lifespan = 8 friends { import(\"falcon.pkl\") (1) } 1 falcon.pkl (not shown here) is guaranteed to amend bird.pkl. Any type alias can be used as a type: typealias EmailAddress = String(contains(\"@\")) email: EmailAddress (1) emailList: List (2) 1 equivalent to email: String(contains(\"@\")) for type checking purposes 2 equivalent to emailList: List for type checking purposes Class types such as Bird (see above) do not admit null values. To turn them into nullable types, append a question mark (?): bird: Bird = null (1) bird2: Bird? = null (2) 1 throws Type mismatch: Expected a value of type Bird, but got null 2 succeeds The only class types that admit null values despite not ending in ? are Any and Null. (Null is not very useful as a type because it only admits null values.) Any? and Null? are equivalent to Any and Null, respectively. The following class types are generic types: Pair Collection List Set Map Container A generic type has constituent types written in angle brackets (<>): pair: Pair (1) coll: Collection (2) list: List (3) set: Set (4) map: Map (5) cont: Mapping (6) 1 a pair with first element of type String and second element of type Bird 2 a collection of Bird elements 3 a list of Bird elements 4 a set of Bird elements 5 a map with String keys and Bird values 6 a container of Bird elements Omitting the constituent types is equivalent to declaring them as unknown: pair: Pair // equivalent to `Pair` coll: Collection // equivalent to `Collection` list: List // equivalent to `List` set: Set // equivalent to `Set` map: Map // equivalent to `Map` cont: Mapping // equivalent to `Mapping` The unknown type is both a top and a bottom type. When a static type analyzer encounters an expression of unknown type, it backs off and trusts the user that they know what they are doing. A value of type A | B, read \"A or B\", is either a value of type A or a value of type B. class Bird { name: String } bird1: String|Bird = \"Pigeon\" bird2: String|Bird = new Bird { name = \"Pigeon\" } More complex union types can be formed: foo: List|Bird Union types have no implicit default values, but an explicit type can be choosen using a * marker: foo: \"a\"|\"b\" // undefined. Will throw an error if not amended bar: \"a\"|*\"b\" // default value will be taken from type \"b\" baz: \"a\"|\"b\" = \"a\" // explicit value is given qux: String|*Int // default taken from Int, but Int has no default. Will throw if not amended Union types often come in handy when writing schemas for legacy JSON or YAML files. A string literal type admits a single string value: diet: \"Seeds\" While occasionally useful on their own, string literal types are often combined with Union Types to form enumerated types: diet: \"Seeds\"|\"Berries\"|\"Insects\" To reuse an enumerated type, introduce a type alias: typealias Diet = \"Seeds\"|\"Berries\"|\"Insects\" diet: Diet The Java and Kotlin code generators turn type aliases for enumerated types into enum classes. The nothing type is the bottom type of Pkl’s type system, the counterpart of top type Any. The bottom type is assignment-compatible with every other type, and no other type is assignment-compatible with it. Being assignment-compatible with every other type may sound too good to be true, but there is a catch — the nothing type has no values! Despite being a lonely type, nothing has practical applications. For example, it is used in the standard library’s TODO() method: function TODO(): nothing = throw(\"TODO\") A nothing return type indicates that a method never returns normally but always throws an error. The unknown type [6] is nothing's even stranger cousin: it is both a top and bottom type! This makes unknown assignment-compatible with every other type, and every other type assignment-compatible with unknown. When a static type analyzer encounters a value of unknown type, it backs off and trusts the code’s author to know what they are doing — for example, whether a method called on the value exists. In the spirit of progressive disclosure, type annotations are optional in Pkl. Omitting a type annotation is equivalent to specifying type unknown: lifespan = 42 (1) map: Map (2) function say(name) = name (3) 1 shorthand for lifespan: unknown = 42 (As a dynamically typed language, Pkl does not try to statically infer types.) 2 shorthand for map: Map = Map() 3 shorthand for function say(name: unknown): unknown = name Type-annotated properties have implicit \"empty\" default values depending on their type: class Bird coll: Collection // = List() (1) list: List // = List() (2) set: Set // = Set() (3) map: Map // = Map() (4) listing: Listing // = new Listing { default = (index) -> new Bird {} } (5) mapping: Mapping // = new Mapping { default = (key) -> new Bird {} } (6) obj: Bird // = new Bird {} (7) nullable: Bird? // = Null(new Bird {}) (8) union: *Bird|String // = new Bird {} (9) stringLiteral: \"Pigeon\" // = \"Pigeon\" (10) nullish: Null // = null (11) 1 Properties of type Collection default to the empty list. 2 Properties of type List default to the empty list. 3 Properties of type Set default to the empty set. 4 Properties of type Map default to the empty map. 5 Properties of type Listing default to an empty listing whose default element is the default for Y. 6 Properties of type Mapping default to an empty mapping whose default value is the default for Y. 7 Properties of non-external class type X default to new X {}. 8 Properties of type X? default to Null(x) where x is the default for X. 9 Properties with a union type have no default value. By prefixing one of the types in a union with a *, the default of that type is chosen as the default for the union. 10 Properties with a string literal type default to the type’s only value. 11 Properties of type Null default to null. See Amending Null Values for further information. Properties of the following types do not have implicit default values: abstract classes, including Any and NotNull Union types, unless an explicit default is given by prefixing one of the types with *. external (built-in) classes, including: String Boolean Int Float Duration DataSize Pair Regex Accessing a property that neither has an (implicit or explicit) default value nor has been overridden throws an error: name: String A type may be followed by a comma-separated list of type constraints enclosed in round brackets (()). A type constraint is a boolean expression that must hold for the annotated element. Type constraints enable advanced runtime validation that goes beyond the capabilities of static type checking. class Bird { name: String(length >= 3) // (1) parent: String(this != name) // (2) } pigeon: Bird = new { name = \"Pigeon\" parent = \"Pigeon Sr.\" (3) } 1 Restricts name to have at least three characters. 2 The name of the bird (this) should not be the same as the name of the parent. 3 Note how parent is different from name. If they were the same, we would be thrown a contraint error. In the following example, we define a Bird with a name of only two characters. pigeon: Bird = new { // fails the constraint because [name] is less than 3 characters name = \"Pi\" } Boolean expressions are convenient for ad-hoc type constraints. Alternatively, type constraints can be given as lambda expressions accepting a single argument, namely the value to be validated. This allows to abstract over and reuse type constraints. class Project { local emailAddress = (str) -> str.matches(Regex(#\".+@.+\"#)) email: String(emailAddress) } project: Project = new { email = \"projectPigeon@example.com\" } project: Project = new { // fails the constraint because `\"projectPigeon-example.com\"` doesn't match the regular expression. email = \"projectPigeon-example.com\" } A composite type can have type constraints for the overall type, its constituent types, or both. class Project { local emailAddress = (str) -> str.matches(Regex(#\".+@.+\"#)) // constrain the nullable type's element type type: String(contains(\"source\"))? // constrain the map type and its key/value types contacts: Map(length expr (1) (param) -> expr (2) (param1, param2, ..., paramN) -> expr (3) 1 Zero-parameter lambda expression 2 Single-parameter lambda expression 3 Multi-parameter lambda expression Here is an example: (n) -> n * 3 This anonymous function accepts a parameter named n, multiplies it by 3, and returns the result. Anonymous functions are values of type Function, more specifically Function0, Function1, Function2, Function3, Function4, or Function5. They cannot have more than five parameters. To invoke an anonymous function, call its apply method: ((n) -> n * 3).apply(4) // 12 Many standard library methods accept anonymous functions: List(1, 2, 3).map((n) -> n * 3) // List(3, 6, 9) Anonymous functions can be assigned to properties, thereby giving them a name: add = (a, b) -> a + b added = add.apply(2, 3) If an anonymous function is not intended to be passed as value, it is customary to declare a method instead: function add(a, b) = a + b added = add(2, 3) An anonymous function’s parameters can have type annotations: (a: Number, b: Number) -> a + b Applying this function to arguments not of type Number results in an error. Anonymous functions are closures: They can access members defined in a lexically enclosing scope, even after leaving that scope: a = 42 addToA = (b: Number) -> a + b list = List(1, 2, 3).map(addToA) // List(43, 44, 45) Single-parameter anonymous functions can also be applied with the |> (pipe) operator, which expects a function argument to the left and an anonymous function to the right. The pipe operator works especially well for chaining multiple functions: mul3 = (n) -> n * 3 add2 = (n) -> n + 2 num = 4 |> mul3 |> add2 |> mul3 (1) 1 result: 42 Like methods, anonymous functions can be recursive: factor = (n: Number(isPositive)) -> if (n { diet = \"Seeds\" } For properties with type annotation, the shorthand new { …​ } syntax can be used: withDietTyped: Mixin = new { diet = \"Seeds\" } To apply a mixin, use the |> (pipe) operator: pigeon { name = \"Pigeon\" } pigeonWithDiet = pigeon |> withDiet barnOwl { name = \"Barn owl\" } barnOwlWithDiet = barnOwl |> withDiet withDiet can be generalized by turning it into a factory method for mixins: function withDiet(_diet: String) = new Mixin { diet = _diet } seedPigeon = pigeon |> withDiet(\"Seeds\") MiceBarnOwl = barnOwl |> withDiet(\"Mice\") Mixins can themselves be modified with function amending. An anonymous function that returns an object can be amended with the same syntax as that object. The result is a new function that accepts the same number of parameters as the original function, applies the original function to them, and amends the returned object. Function amending is a special form of function composition. Thanks to function amending, Listing.default and Mapping.default can be treated as if they were objects, only gradually revealing their true (single-parameter function) nature: birds = new Mapping { default { (1) diet = \"Seeds\" } [\"Pigeon\"] { (2) lifespan = 8 } } 1 Amends the default function, which returns a default mapping value given a mapping key, and sets property diet. 2 Implicitly applies the amended default function and amends the returned object with property lifespan. The result is a mapping whose entry \"Pigeon\" has both diet and lifespan set. When amending an anonymous function, it is possible to access its parameters by declaring a comma-separated, arrow (→) terminated parameter list after the opening curly brace ({). Once again, this is especially useful to configure a listing’s or mapping’s default function: birds = new Mapping { default { key -> (1) name = key } [\"Pigeon\"] {} (2) [\"Barn owl\"] {} (3) } 1 Amends the default function and sets the name property to the mapping entry’s key. To access the default function’s key parameter, it is declared with key →. (Any other parameter name could be chosen, but key is customary for default functions.) 2 Defines a mapping entry with key \"Pigeon\" 3 Defines a mapping entry with key \"Barn owl\" The result is a mapping with two entries \"Pigeon\" and \"Barn owl\" whose name properties are set to their keys. Function amending can also be used to refine mixins. It’s time to lift a secret: The predefined null value is just one of potentially many values of type Null. First, here are the technical facts: Null values are constructed with pkl.base#Null(). Null(x) constructs a null value that is equivalent to x when amended. In other words, Null(x) { …​ } is equivalent to x { …​ }. All null values are equal according to ==. We say that Null(x) is a \"null value with default x\". But what is it useful for? Null values with default are used to define properties that are null (\"switched off\") by default but have a default value once amended (\"switched on\"). Here is an example: template.pkl // we don't have a pet yet, but already know that it is going to be a bird pet = Null(new Dynamic { animal = \"bird\" }) amends \"template.pkl\" // We got a pet, let's fill in its name pet { name = \"Parry the Parrot\" } A null value can be switched on without adding or overriding a property: amends \"template.pkl\" // We do not need to name anything if we have no pet yet pet {} The predefined null value is defined as Null(new Dynamic {}). In other words, amending null is equivalent to amending Dynamic {} (the empty dynamic object): pet = null pet { name = \"Parry the Parrot\" } In most cases, the Null() method is not used directly. Instead, it is used under the hood to create implicit defaults for properties with nullable type: template.pkl class Pet { name: String animal: String = \"bird\" } // defaults to `Null(Pet {})` pet: Pet? amends \"template.pkl\" pet { name = \"Perry the Parrot\" } The general rule is: A property with nullable type X? defaults to Null(x) if type X has default value x, and to null if X has no default value. when generators conditionally generate object members. They come in two variants: when () { } when () { } else { } The following code conditionally generates properties hobby and idol: isSinger = true parrot { lifespan = 20 when (isSinger) { hobby = \"singing\" idol = \"Frank Sinatra\" } } when generators can have an else part: isSinger = false parrot { lifespan = 20 when (isSinger) { hobby = \"singing\" idol = \"Aretha Franklin\" } else { hobby = \"whistling\" idol = \"Wolfgang Amadeus Mozart\" } } Besides properties, when generators can generate elements and entries: abilities { \"chirping\" when (isSinger) { \"singing\" (1) } \"whistling\" } abilitiesByBird { [\"Barn owl\"] = \"hooing\" when (isSinger) { [\"Parrot\"] = \"singing\" (2) } [\"Parrot\"] = \"whistling\" } 1 conditional element 2 conditional entry for generators generate object members in a loop. They come in two variants: for ( in ) { } for (, in ) { } The following code generates a birds object containing three elements. Each element is an object with properties name and lifespan. names = List(\"Pigeon\", \"Barn owl\", \"Parrot\") birds { for (_name in names) { new { name = _name lifespan = 42 } } } The following code generates a birdsByName object containing three entries. Each entry is an object with properties name and lifespan keyed by name. namesAndLifespans = Map(\"Pigeon\", 8, \"Barn owl\", 15, \"Parrot\", 20) birdsByName { for (_name, _lifespan in namesAndLifespans) { [_name] { name = _name lifespan = _lifespan } } } The following types are iterable: Type Key Value IntSeq element index (Int) element value (Int) List element index (Int) element value (Element) Set element index (Int) element value (Element) Map entry key (Key) entry value (Value) Listing element index (Int) element value (Element) Mapping entry key (Key) entry value (Value) Dynamic element index (Int) entry key property name (String) element value entry value property value Indices are zero based. Note that for generators can generate elements and entries but not properties.[7] Spread syntax generates object members from an iterable value. There are two variants of spread syntax, a non-nullable variant and a nullable variant. ... ...? Spreading an Object (one of Dynamic, Listing and Mapping) will unpack all of its members into the enclosing object [8]. Entries become entries, elements become elements, and properties become properties. entries1 { [\"Pigeon\"] = \"Piggy the Pigeon\" [\"Barn owl\"] = \"Barney the Barn owl\" } entries2 { ...entries1 (1) } elements1 { 1; 2 } elements2 { ...elements1 (2) } properties1 { name = \"Pigeon\" diet = \"Seeds\" } properties2 { ...properties1 (3) } 1 Spreads entries [\"Pigeon\"] = \"Piggy the Pigeon\" and [\"Barn owl\"] = \"Barney the Barn owl\" 2 Spreads elements 1 and 2 3 Spreads properties name = \"Pigeon\" and diet = \"Seeds\" Spreading all other iterable types generates members determined by the iterable. The following table describes how different iterables turn into object members: Iterable type Member type Map Entry List Element Set Element IntSeq Element These types can only be spread into enclosing objects that support that member type. For example, a List can be spread into a Listing, but cannot be spread into a Mapping. In some ways, spread syntax can be thought of as a shorthand for a for generator. One key difference is that spread syntax can generate properties, which is not possible with a for generator. Look out for duplicate key conflicts when using spreads. When spreading entries or properties, it is possible that a spread causes conflict due to an existing definition of a key. In the following code snippet, \"Pigeon\" is declared twice in the newPets object, and thus is an error. oldPets { [\"Pigeon\"] = \"Piggy the Pigeon\" [\"Parrot\"] = \"Perry the Parrot\" } newPets { ...cast [\"Pigeon\"] = \"Toby the Pigeon\" (1) } 1 Error: Duplicate definition of member \"Pigeon\". A non-nullable spread (...) will error if the value being spread is null. In contrast, a nullable spread (...?) is syntactic sugar for wrapping a spread in a when. The following two snippets are logically identical. result { ...?myValue } result { when (myValue != null) { ...myValue } } Occasionally it is useful to configure all object members matching a predicate. This is especially true when configuring elements, which—unlike entries—cannot be accessed by key: environmentVariables { (1) new { name = \"PIGEON\"; value = \"pigeon-value\" } new { name = \"PARROT\"; value = \"parrot-value\" } new { name = \"BARN OWL\"; value = \"barn-owl-value\" } } updated = (environmentVariables) { [[name == \"PARROT\"]] { (2) value = \"new-value\" (3) } } 1 a listing of environment variables 2 amend element(s) whose name equals \"PARROT\" (name is shorthand for this.name) 3 update value to \"new-value\" The predicate, enclosed in double brackets (\\[[…​]]), is matched against each member of the enclosing object. Within the predicate, this refers to the member that the predicate is matched against. Matching members are amended ({ …​ }) or overridden (= ). Resources and modules may be imported at the same time by globbing with the Globbed Imports and Globbed Reads features. Pkl’s glob patterns mostly follow the rules described by glob(7), with the following differences: * includes names that start with a dot (.). ** behaves like *, except it also matches directory boundary characters (/). Named character classes are not supported. Collating symbols are not supported. Equivalence class expressions are not supported. Support for sub-patterns (patterns within { and }) are added. Here is a full specification of how globs work: The following tokens denote wildcards: Wildcard Meaning * Match zero or more characters, until a directory boundary (/) is reached. ** Match zero or more characters, crossing directory boundaries. ? Match a single character. […​] Match a single character represented by this character class. Unlike globs within shells, the * wildcard includes names that start with a dot (.). Character classes are sequences delimited by the [ and ] characters, and represent a single character as described by the sequence within the enclosed brackets. For example, the pattern [abc] means \"a single character that is a, b, or c\". Character classes may be negated using !. For example, the pattern [!abc] means \"a single character that is not a, b, nor c\". Character classes may use the - character to denote a range. The pattern [a-f] is equivalent to [abcdef]. If the - character exists at the beginning or the end of a character class, it does not carry any special meaning. Within a character class, the characters {, }, \\, *, and ? do not have any special meaning. A character class is not allowed to be empty. Thus, if the first character within the character class is ], it treated literally and not as the closing delimiter of the character class. For example, the glob pattern []abc] matches a single character that is either ], a, b, or c. Sub-patterns are glob patterns delimited by the { and } characters, and separated by the , character. For example, the pattern {pigeon,parrot} will match either pigeon or parrot. Sub-patterns cannot be nested. The pattern {foo,{bar,baz}} is not a valid glob pattern, and an error will be thrown during evaluation. The escape character (\\) can be used to remove the special meaning of a character. The following escapes are valid: \\[ \\* \\? \\\\ \\{ All other escapes are considered a syntax error and an error is thrown. If incorporating escape characters into a glob pattern, use custom string delimiters to express the glob pattern. For example, import*(#\"\\{foo.pkl\"#). This way, the backslash is interpreted as a backslash and not a string escape. Pattern Description *.pc[lf] Anything suffixed by .pkl, or .pcf. **.y{a,}ml Anything suffixed by either yml or yaml, crossing directory boundaries. birds/{*.yml,*.json} Anything within the birds subdirectory that ends in .yml or .json. This pattern is equivalent to birds/*.{yml,json}. a?*.txt Anything starting with a and at least one more letter, and suffixed with .txt. modulepath:/**.pkl All Pkl files in the module path. An identifier is the name part of an entity in Pkl. Entities that are named by identifiers include classes, properties, typealiases, and modules. For example, class Bird has the identifier Bird. Normally, an identifier must conform to Unicode’s UAX31-R1-1 syntax, with the additions of _ and $ permitted as identifier start characters. Additionally, an identifier cannot clash with a keyword. To define an identifier that is otherwise illegal, enclose them in backticks. This is called a quoted identifier. `A Bird's First Flight Time` = 5.s Backticks are not part of a quoted identifier’s name, and surrounding an already legal identifier with backticks is redundant. `number` = 42 (1) res1 = `number` (2) res2 = number (3) 1 Equivalent to number = 42 2 References property `number` 3 Also references property `number` Doc comments are the user-facing documentation of a module and its members. They consist of one or more lines starting with a triple slash (///). Here is a doc comment for a module: /// An aviated animal going by the name of [bird](https://en.wikipedia.org/wiki/Bird). /// /// These animals live on the planet Earth. module com.animals.Birds Doc comments are written in Markdown. The following Markdown features are supported: all CommonMark features GitHub flavored Markdown tables Plaintext URLs are only rendered as links when enclosed in angle brackets: /// A link is *not* generated for https://example.com. /// A link *is* generated for . Doc comments are consumed by humans reading source code, the Pkldoc documentation generator, code generators, and editor/IDE plugins. They are programmatically accessible via the pkl.reflect Pkl API and ModuleSchema Java API. Doc Comment Style Guidelines Use proper spelling and grammar. Start each sentence on a new line and capitalize the first letter. End each sentence with a punctuation mark. The first paragraph of a doc comment is its summary. Keep the summary short (a single sentence is common) and insert an empty line (///) before the next paragraph. Doc comments can be attached to module, class, type alias, property, and method declarations. Here is a comprehensive example: Birds.pkl /// An aviated animal going by the name of [bird](https://en.wikipedia.org/wiki/Bird). /// /// These animals live on the planet Earth. module com.animals.Birds /// A bird living on Earth. /// /// Has [name] and [lifespan] properties and an [isOlderThan()] method. class Bird { /// The name of this bird. name: String /// The lifespan of this bird. lifespan: UInt8 /// Tells if this bird is older than [bird]. function isOlderThan(bird: Bird): Boolean = lifespan > bird.lifespan } /// An adult [Bird]. typealias Adult = Bird(lifespan >= 2) /// A common [Bird] found in large cities. pigeon: Bird = new { name = \"Pigeon\" lifespan = 8 } /// Creates a [Bird] with the given [_name] and lifespan `0`. function Infant(_name: String): Bird = new { name = _name; lifespan = 0 } To link to a member declaration, write the member’s name enclosed in square brackets ([]): /// A common [Bird] found in large cities. To customize the link text, insert the desired text, enclosed in square brackets, before the member name: /// A [common Bird] found in large cities. Custom link text can use markup: /// A [*common* Bird] found in large cities. The short link [Bird] is equivalent to [`Bird`][Bird]. Member links are resolved according to Pkl’s normal name resolution rules. The syntax for linking to the members of Birds.pkl (see above) is as follows: Module [module] (from same module) [Birds] (from a module that contains import \"Birds.pkl\") Class [Bird] (from same module) [Birds.Bird] (from a module that contains import \"Birds.pkl\") Type Alias [Adult] (from same module) [Birds.Adult] (from a module that contains import \"Birds.pkl\") Class Property [name] (from same class) [Bird.name] (from same module) [Birds.Bird.name] (from a module that contains import \"Birds.pkl\") Class Method [greet()] (from same class) [Bird.greet()] (from same module) [Birds.Bird.greet()] (from a module that contains import \"Birds.pkl\") Class Method Parameter [bird] (from same method) Module Property [pigeon] (from same module) [Birds.pigeon] (from a module that contains import \"Birds.pkl\") Module Method [isPigeon()] (from same module) [Birds.isPigeon()] (from a module that contains import \"Birds.pkl\") Module Method Parameter [bird] (from same method) Members of pkl.base can be linked to by their simple name: /// Returns a [String]. Module-level members can be prefixed with module. to resolve name conflicts: /// See [module.pigeon]. To exclude a member from documentation and code completion, annotate it with @Unlisted: @Unlisted pigeon: Bird The following member links are marked up as code but not rendered as links:[9] [null], [true], [false], [this], [unknown], [nothing] self-links subsequent links to the same member from the same doc comment links to a method’s own parameters Nevertheless, it is a good practice to use member links in the above cases. Consider this snippet of code buried deep inside a config file: a = x + 1 The call site’s \"variable\" syntax reveals that x refers to a LAMP (let binding, anonymous function parameter, method parameter, or property) definition. But which one? To answer this question, Pkl follows these steps: Search the lexically enclosing scopes of x, starting with the scope in which x occurs and continuing outwards up to and including the enclosing module’s top-level scope, for a LAMP definition named x. If a match is found, this is the answer. Search the pkl.base module for a top-level definition of property x. If a match is found, this is the answer. Search the prototype chain of this, from bottom to top, for a definition of property x. If a match is found, this is the answer. Throw a \"name x not found\" error. Pkl’s LAMP name resolution is inspired by Newspeak. The goal is for name resolution to be stable with regard to changes in external modules. This is why lexically enclosing scopes are searched before the prototype chain of this, and why the prototype chains of lexically enclosing scopes are not searched, which sometimes requires the use of outer. or module.. For name resolution to fully stabilize, the list of top-level properties defined in pkl.base needs to be freezed. This is tentatively planned for Pkl 1.0. Consider this snippet of code buried deep inside a config file: a = x(\"foo\") + 1 The call site’s method call syntax reveals that x refers to a method definition. But which one? To answer this question, Pkl follows these steps: Search the call sites' lexically enclosing scopes, starting with the scope in which the call site occurs and continuing outwards up to and including the enclosing module’s top-level scope, for a definition of method x. If a match is found, this is the answer. Search the pkl.base module for a top-level definition of method x. If a match is found, this is the answer. Seach the class inheritance chain of this, starting with the class of this and continuing upwards until and including class Any, for a method named x. If a match is found, this is the answer. Throw a \"method x not found\" error. Pkl does not support arity or type based method overloading. Hence, the argument list of a method call is irrelevant for method resolution. Pkl’s object model is based on prototypical inheritance. The prototype chain of object[10] x contains, from bottom to top: The chain of objects amended to create x, ending in x itself, in reverse order.[11] The prototype of the class of the top object in (1). If no amending took place, this is the class of x. The prototypes of the superclasses of (2). The prototype of class X is an instance of X that defines the defaults for properties defined in X. Its direct ancestor in the prototype chain is the prototype of the superclass of X. The prototype of class Any sits at the top of every prototype chain. To reduce the chance of naming collisions, Any does not define any property names.[12] Consider the following code: one = new Dynamic { name = \"Pigeon\" } two = (one) { lifespan = 8 } The prototype chain of object two contains, now listed from top to bottom: The prototype of class Any. The prototype of class Dynamic. one two Consider the following code: abstract class Named { name: String } class Bird extends Named { lifespan: Int = 42 } one = new Bird { name = \"Pigeon\" } two = (one) { lifespan = 8 } The prototype chain of object two contains, listed from top to bottom: The prototype of class Any. The prototype of class Typed. The prototype of class Named. The prototype of class Bird. one two The prototype chain of non-object value x contains, from bottom to top: The prototype of the class of x. The prototypes of the superclasses of (1). For example, the prototype chain of value 42 contains, now listed from top to bottom: The prototype of class Any. The prototype of class Number. The prototype of class Int. A prototype chain never contains a non-object value, such as 42. Pkl’s ANTLR 4 grammar is defined in PklLexer.g4 and PklParser.g4. The following keywords are reserved in the language. They cannot be used as a regular identifier, and currently do not have any meaning. protected override record delete match case switch vararg const To use these names in an identifier, surround them with backticks. Blank identifiers can be used in many places to ignore parameters and variables. _ is not a valid identifier. In order to use it as a parameter or variable name it needs to be enclosed in backticks: `_`. birds = List(\"Robin\", \"Swallow\", \"Eagle\", \"Falcon\") indexes = birds.mapIndexed((i, _) -> i) function constantly(_, second) = second birdColors = Map(\"Robin\", \"blue\", \"Eagle\", \"white\", \"Falcon\", \"red\") birds = new Listing { for (name, _ in birdColors) { name } } name = let (_ = trace(\"defining name\")) \"Eagle\" birds = new Dynamic { default { _ -> species = \"Bird\" } [\"Falcon\"] {} [\"Eagle\"] {} } A project is a directory of Pkl modules, and other resources. It is defined by the presence of a PklProject file, that amends standard library module pkl:Project. Defining a project serves the following purposes: It allows defining common evaluator settings for Pkl modules within a logical project. It helps with managing package dependencies for Pkl modules within a logical project. It enables packaging and sharing the contents of the project as a package. It allows importing packages via dependency notation. A project is useful for managing package dependencies. Within a PklProject file, dependencies can be defined: PklProject amends \"pkl:Project\" dependencies { [\"birds\"] { (1) uri = \"package://example.com/birds@1.0.0\" } } 1 Declare dependency on package://example.com/birds@1.0.0 with simple name \"birds\". These dependencies can then be imported by their simple name. This syntax is called dependency notation. Example: import \"@birds/Bird.pkl\" (1) pigeon: Bird = new { name = \"Pigeon\" } 1 Dependency notation; imports path /Bird.pkl within dependency package://example.com/birds@1.0.0 Internally, Pkl assigns URI scheme projectpackage to project dependencies imported using dependency notation. When the project gets published as a package, these names and URIs are preserved as the package’s dependencies. Dependencies that are declared in a PklProject file must be resolved via CLI command pkl project resolve. This builds a single dependency list, resolving all transitive dependencies and determines appropriate version for each package. It creates or updates a file called PklProject.deps.json in the project’s root directory with the list of resolved dependencies. When resolving version conflicts, the CLI will pick the latest semver minor version of each package. For example, if the project declares a dependency on package A at 1.2.0, and a package transitively declares a dependency on package A at 1.3.0, version 1.3.0 is selected. In short, the algorithm has the following steps: Gather a list of all dependencies, either directly declared or transitive. For each dependency, keep only the newest minor version. The resolve command is idempotent; given a PklProject file, it always produces the same set of resolved dependencies. This algorithm is adapted from Go’s minimum version selection. Projects enable the creation of a package. To create a package, the package section of a PklProject module must be defined. PklProject amends \"pkl:Project\" package { name = \"mypackage\" (1) baseUri = \"package://example.com/\\(name)\" (2) version = \"1.0.0\" (3) packageZipUrl = \"https://example.com/\\(name)/\\(name)@\\(version).zip\" (4) } 1 The display name of the package. For display purposes only. 2 The package URI, without the version part 3 The version of the package 4 The URL that the package’s ZIP file will available for download at. The package itself is created by command pkl project package. This command only prepares artifacts to be published. Once the artifacts are prepared, they are expected to be uploaded to an HTTPS server such that the ZIP asset can be downloaded at path packageZipUrl, and the metadata can be downloaded at https://. A project can depend on a local project as a dependency. This can be useful for: Structuring a monorepo that publishes multiple packages. Temporarily testing out library changes when used within another project. To specify a local dependency, import its PklProject file. The imported PklProject must have a package section defined. birds/PklProject amends \"pkl:Project\" dependencies { [\"fruit\"] = import(\"../fruit/PklProject\") (1) } package { name = \"birds\" baseUri = \"package://example.com/birds\" version = \"1.8.3\" packageZipUrl = \"https://example.com/birds@\\(version).zip } 1 Specify relative project ../fruit as a dependency. fruit/PklProject amends \"pkl:Project\" package { name = \"fruit\" baseUri = \"package://example.com/fruit\" version = \"1.5.0\" packageZipUrl = \"https://example.com/fruit@\\(version).zip } From the perspective of project birds, fruit is just another package. It can be imported using dependency notation, i.e. import \"@fruit/Pear.pkl\". At runtime, it will resolve to relative path ../fruit/Pear.pkl. When packaging projects with local dependencies, both the project and its dependent project must be passed to the pkl project package command. 1. Pkl’s string literals have fewer character escape sequences, have stricter rules for line indentation in multiline strings, and do not have a line continuation character. 2. By \"structure\" we mean a list of property names and (optionally) property types. 3. By \"Use typed objects\" we mean to define classes and build data models out of instances of these classes. 4. Not counting that every module is a typed object. 5. Strictly speaking, List, Set, and Map are currently soft keywords. The goal is to eventually turn them into regular standard library methods. 6. Also known as dynamic type. We do not use that term to avoid confusion with Dynamic, Pkl’s dynamic object type. 7. More precisely, they cannot generate properties with a non-constant name. 8. Values that are Typed are not iterable. 9. Only applies to links without custom link text. 10. An instance of Listing, Mapping, Dynamic, or (a subclass of) Typed. 11. All objects in this chain are instances of the same class, except when a direct conversion between listing, mapping, dynamic, and typed object has occurred. For example, Typed.toDynamic() returns a dynamic object that amends a typed object. 12. Method resolution searches the class inheritance rather than prototype chain.","title":"Language Reference","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/language-reference/index.html","titles":[{"text":"Comments","hash":"comments","id":1},{"text":"Numbers","hash":"numbers","id":2},{"text":"Integers","hash":"integers","id":3},{"text":"Floats","hash":"floats","id":4},{"text":"Booleans","hash":"booleans","id":5},{"text":"Strings","hash":"strings","id":6},{"text":"String Interpolation","hash":"string-interpolation","id":7},{"text":"Multiline Strings","hash":"multiline-strings","id":8},{"text":"Custom String Delimiters","hash":"custom-string-delimiters","id":9},{"text":"String API","hash":"string-api","id":10},{"text":"Durations","hash":"durations","id":11},{"text":"Data Sizes","hash":"data-sizes","id":12},{"text":"Objects","hash":"objects","id":13},{"text":"Defining Objects","hash":"defining-objects","id":14},{"text":"Amending Objects","hash":"amending-objects","id":15},{"text":"Late Binding","hash":"late-binding","id":16},{"text":"Transforming Objects","hash":"transforming-objects","id":17},{"text":"Typed Objects","hash":"typed-objects","id":18},{"text":"Property Modifiers","hash":"properties","id":19},{"text":"Hidden Properties","hash":"hidden-properties","id":20},{"text":"Local properties","hash":"local-properties","id":21},{"text":"Fixed properties","hash":"fixed-properties","id":22},{"text":"Const properties","hash":"const-properties","id":23},{"text":"Listings","hash":"listings","id":24},{"text":"Defining Listings","hash":"defining-listings","id":25},{"text":"Amending Listings","hash":"amending-listings","id":26},{"text":"Late Binding","hash":"late-binding-2","id":27},{"text":"Transforming Listings","hash":"transforming-listings","id":28},{"text":"Default Element","hash":"default-element","id":29},{"text":"Type Annotations","hash":"listing-type-annotations","id":30},{"text":"Distinct Elements","hash":"distinct-elements","id":31},{"text":"Mappings","hash":"mappings","id":32},{"text":"Defining Mappings","hash":"defining-mappings","id":33},{"text":"Amending Mappings","hash":"amending-mappings","id":34},{"text":"Late Binding","hash":"late-binding-3","id":35},{"text":"Transforming Mappings","hash":"transforming-mappings","id":36},{"text":"Default Value","hash":"default-value","id":37},{"text":"Type Annotations","hash":"mapping-type-annotations","id":38},{"text":"Classes","hash":"classes","id":39},{"text":"Class Inheritance","hash":"class-inheritance","id":40},{"text":"Methods","hash":"methods","id":41},{"text":"Modules","hash":"modules","id":42},{"text":"Introduction","hash":"introduction","id":43},{"text":"Module Names","hash":"module-names","id":44},{"text":"Module URIs","hash":"module-uris","id":45},{"text":"File URI:","hash":"file-uri","id":46},{"text":"HTTP(S) URI:","hash":"https-uri","id":47},{"text":"Module path URI:","hash":"module-path-uri","id":48},{"text":"Package asset URI:","hash":"package-asset-uri","id":49},{"text":"Standard Library URI","hash":"standard-library-uri","id":50},{"text":"Relative URIs","hash":"relative-uris","id":51},{"text":"Dependency notation URIs","hash":"dependency-notation-uris","id":52},{"text":"Extension points","hash":"extension-points","id":53},{"text":"Evaluation","hash":"evaluation","id":54},{"text":"Triple-dot Module URIs","hash":"triple-dot-module-uris","id":55},{"text":"Amending a Module","hash":"module-amend","id":56},{"text":"Extending a Module","hash":"module-extend","id":57},{"text":"Importing a Module","hash":"import-module","id":58},{"text":"Import Clauses","hash":"import-clause","id":59},{"text":"Import Expressions (import())","hash":"import-expression","id":60},{"text":"Globbed Imports","hash":"globbed-imports","id":61},{"text":"Security Checks","hash":"security-checks","id":62},{"text":"Module Output","hash":"module-output","id":63},{"text":"CLI","hash":"cli","id":64},{"text":"In-language","hash":"in-language","id":65},{"text":"Multiple File Output","hash":"multiple-file-output","id":66},{"text":"Aggregating Module Outputs","hash":"aggregating-module-outputs","id":67},{"text":"Null Values","hash":"null-values","id":68},{"text":"Non-Null Operator","hash":"non-null-operator","id":69},{"text":"Null Coalescing","hash":"null-coalescing","id":70},{"text":"Null Propagation","hash":"null-propagation","id":71},{"text":"ifNonNull Method","hash":"ifnonnull-method","id":72},{"text":"NonNull Type Alias","hash":"nonnull-type-alias","id":73},{"text":"If Expressions","hash":"if-expressions","id":74},{"text":"Resources","hash":"resources","id":75},{"text":"Nullable Reads","hash":"nullable-reads","id":76},{"text":"Globbed Reads","hash":"globbed-reads","id":77},{"text":"Extending resource readers","hash":"extending-resource-readers","id":78},{"text":"Resource Allowlist","hash":"resource-allowlist","id":79},{"text":"Errors","hash":"errors","id":80},{"text":"Debugging","hash":"debugging","id":81},{"text":"Advanced Topics","hash":"advanced-topics","id":82},{"text":"Let Expressions","hash":"let-expressions","id":83},{"text":"Type Tests","hash":"type-tests","id":84},{"text":"Type Casts","hash":"type-casts","id":85},{"text":"Lists","hash":"lists","id":86},{"text":"Sets","hash":"sets","id":87},{"text":"Maps","hash":"maps","id":88},{"text":"Regular Expressions","hash":"regular-expressions","id":89},{"text":"Type Aliases","hash":"type-aliases","id":90},{"text":"Predefined Type Aliases","hash":"predefined-type-aliases","id":91},{"text":"Type Annotations","hash":"type-annotations","id":92},{"text":"Class Types","hash":"class-types","id":93},{"text":"Module Types","hash":"module-types","id":94},{"text":"Type Aliases","hash":"type-aliases-2","id":95},{"text":"Nullable Types","hash":"nullable-types","id":96},{"text":"Generic Types","hash":"generic-types","id":97},{"text":"Union Types","hash":"union-types","id":98},{"text":"String Literal Types","hash":"string-literal-types","id":99},{"text":"Nothing Type","hash":"nothing-type","id":100},{"text":"Unknown Type","hash":"unknown-type","id":101},{"text":"Progressive Disclosure","hash":"progressive-disclosure","id":102},{"text":"Default Values","hash":"default-values","id":103},{"text":"Type Constraints","hash":"type-constraints","id":104},{"text":"Composite Type Constraints","hash":"composite-type-constraints","id":105},{"text":"Anonymous Functions","hash":"anonymous-functions","id":106},{"text":"Mixins","hash":"mixins","id":107},{"text":"Function Amending","hash":"function-amending","id":108},{"text":"Amending Null Values","hash":"amend-null","id":109},{"text":"When Generators","hash":"when-generators","id":110},{"text":"For Generators","hash":"for-generators","id":111},{"text":"Spread Syntax (...)","hash":"spread-syntax","id":112},{"text":"Nullable spread","hash":"nullable-spread","id":113},{"text":"Member Predicates ([[…​]])","hash":"member-predicates","id":114},{"text":"Glob Patterns","hash":"glob-patterns","id":115},{"text":"Wildcards","hash":"wildcards","id":116},{"text":"Character Classes","hash":"character-classes","id":117},{"text":"Sub-patterns","hash":"glob-sub-patterns","id":118},{"text":"Escapes","hash":"escapes","id":119},{"text":"Examples","hash":"examples","id":120},{"text":"Quoted Identifiers","hash":"quoted-identifiers","id":121},{"text":"Doc Comments","hash":"doc-comments","id":122},{"text":"Member Links","hash":"member-links","id":123},{"text":"Name Resolution","hash":"name-resolution","id":124},{"text":"Prototype Chain","hash":"prototype-chain","id":125},{"text":"Non-object Values","hash":"non-object-values","id":126},{"text":"Grammar Definition","hash":"grammar-definition","id":127},{"text":"Reserved keywords","hash":"reserved-keywords","id":128},{"text":"Blank Identifiers","hash":"blank-identifiers","id":129},{"text":"Functions and methods","hash":"functions-and-methods","id":130},{"text":"For generators","hash":"for-generators-2","id":131},{"text":"Let bindings","hash":"let-bindings","id":132},{"text":"Object bodies","hash":"object-bodies","id":133},{"text":"Projects","hash":"projects","id":134},{"text":"Dependencies","hash":"project-dependencies","id":135},{"text":"Resolving Dependencies","hash":"resolving-dependencies","id":136},{"text":"Creating a Package","hash":"creating-a-package","id":137},{"text":"Local dependencies","hash":"local-dependencies","id":138}]},"21":{"id":21,"text":"In this first part of the Pkl tutorial, you build familiarity with Pkl syntax and basic structure. You also learn different ways to invoke Pkl to produce different formats. Consider the following example Pkl file. intro.pkl name = \"Pkl: Configure your Systems in New Ways\" attendants = 100 isInteractive = true amountLearned = 13.37 Running Pkl on this file gives $ pkl eval /Users/me/tutorial/intro.pkl name = \"Pkl: Configure your Systems in New Ways\" attendants = 100 isInteractive = true amountLearned = 13.37 It may seem nothing happened. However, Pkl tells you that it accepts the input. In other words, you now know that intro.pkl does not contain any errors. You can ask Pkl to print this configuration in a different format, using the -f option. For example, JSON: $ pkl eval -f json /Users/me/tutorial/intro.pkl { \"name\": \"Pkl: Configure your Systems in New Ways\", \"attendants\": 100, \"isInteractive\": true, \"amountLearned\": 13.37 } Or PropertyList format: $ pkl eval -f plist /Users/me/tutorial/intro.pkl name Pkl: Configure your Systems in New Ways attendants 100 isInteractive amountLearned 13.37 Notice that Pkl generated , , and for the values in your configuration. This means it has both correctly derived the types of the literal values and translated those types to the corresponding elements in the PropertyList. Part III goes into types in more detail. A configuration often requires more than just basic values. Typically, you need some kind of (hierarchical) structure. Pkl provides immutable objects for this. Objects have three kinds of members: properties, elements and entries. First, look at the syntax for objects and their members. simpleObjectWithProperties.pkl bird { (1) name = \"Common wood pigeon\" (2) diet = \"Seeds\" taxonomy { (3) species = \"Columba palumbus\" } } 1 This defines bird to be an object 2 For primitive values, Pkl has the = syntax (more on this later). 3 Just like bird {, but to show that objects can be nested. This defines an object called bird with three named properties: name, diet, and taxonomy. The first two of these are strings, but taxonomy is another object. This means properties in an object can have different types and objects can be nested. Of course, you don’t always have names for every individual structure in your configuration. What if you want \"just a bunch of things\" without knowing how many? Pkl offers elements for this purpose. Elements are object members, just like properties. Where you index properties by their name, you index elements by an integer. You can think of an object that only contains elements as array. Much like arrays in many languages, you can use square brackets to access an element, for example, myObject[42]. You write an element, by writing only an expression. Pkl derives the index from the number of elements already in the object. For example: simpleObjectsWithElements.pkl exampleObjectWithJustIntElements { 100 (1) 42 } exampleObjectWithMixedElements { \"Bird Breeder Conference\" (2000 + 23) (2) exampleObjectWithJustIntElements (3) } 1 When you write only the value (without a name), you describe an element. 2 Elements don’t have to be literal values; they can be arbitrary expressions. 3 Elements can really be any value, not just primitive values. Objects can have one more kind of member; entries. Like a property, an entry is \"named\" (technically keyed). Unlike a property, the name does not need to be known at declaration time. Of course, we need a syntax to tell entries apart from properties. You write entry \"names\" by enclosing them in square brackets (\"names\" is quoted, because the names do not need to be strings; any value can index entries). simpleObjectsWithEntries.pkl pigeonShelter { [\"bird\"] { (1) name = \"Common wood pigeon\" diet = \"Seeds\" taxonomy { species = \"Columba palumbus\" } } [\"address\"] = \"355 Bird St.\" (2) } birdCount { [pigeonShelter] = 42 (3) } 1 The difference with properties is the notation of the key: []. 2 As with properties, entries can be primitive values or objects. 3 Any object can be used as a key for an entry. In the examples so far, you have seen objects with properties, object with elements and object with entries. These object members can be freely mixed. mixedObject.pkl mixedObject { name = \"Pigeon\" lifespan = 8 \"wing\" \"claw\" [\"wing\"] = \"Not related to the _element_ \\\"wing\\\"\" 42 extinct = false [false] { description = \"Construed object example\" } } Notice, how properties (name, lifespan and extinct), elements (\"wing\", \"claw\", 42) and entries (\"wing\", false) are mixed together in this one object. You don’t have to order them by kind, and you don’t require (other) special syntax. This free-for-all mixing of object members can become confusing. Also, target formats are often considerably more restrictive. In the following example, you see what happens when you try to produce JSON from mixedObject: $ pkl eval -f json /Users/me/tutorial/mixedObject.pkl –– Pkl Error –– Cannot render object with both properties/entries and elements as JSON. Object: \"Pigeon\" 89 | text = renderer.renderDocument(value) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ at pkl.base#Module.output.text (https://github.com/apple/pkl/blob/0.24.0/stdlib/base.pkl#L90) This is why Pkl has two special types of object, namely listings, which contain exclusively elements, and mappings, which contain exclusively entries. Both listings and mappings are \"just objects,\" so, they don’t require syntax besides that of objects: collections.pkl birds { (1) \"Pigeon\" \"Parrot\" \"Barn owl\" \"Falcon\" } habitats { (2) [\"Pigeon\"] = \"Streets\" [\"Parrot\"] = \"Parks\" [\"Barn owl\"] = \"Forests\" [\"Falcon\"] = \"Mountains\" } 1 A listing containing four elements. 2 A mapping containing four entries. Technically, the correct way to define birds and habitats is by using new Listing {…​} and new Mapping {…​} explicitly. You will see what these mean in part three of this tutorial. When you render this configuration as JSON, everything works: { \"birds\": [ \"Pigeon\", \"Parrot\", \"Barn owl\", \"Falcon\" ], \"habitats\": { \"Pigeon\": \"Streets\", \"Parrot\": \"Parks\", \"Barn owl\": \"Forests\", \"Falcon\": \"Mountains\" } } Notice particularly, that you rendered the listing as a JSON array. When you index the listing with an integer, you’re referring to the element inside the listing at the corresponding position (starting from 0). For example: indexedListing.pkl birds { \"Pigeon\" \"Parrot\" \"Barn owl\" \"Falcon\" } relatedToSnowOwl = birds[2] results in birds { \"Pigeon\" \"Parrot\" \"Barn owl\" \"Falcon\" } relatedToSnowOwl = \"Barn owl\" Given the following JSON snippet (taken from W3C examples), write the .pkl file that produces this JSON: { \"name\": \"Common wood pigeon\", \"lifespan\": 8, \"friends\": { \"bird1\": \"Parrot\", \"bird2\": \"Albatross\", \"bird3\": \"Falcon\" } } For some reason, we decide we no longer need the birdX names of the different birds; we just need them as an array. Change your solution to the previous question to produce the following JSON result: { \"name\": \"Common wood pigeon\", \"lifespan\": 8, \"birds\": [\"Parrot\", \"Barn owl\", \"Falcon\"] }","title":"Basic Configuration","component":"main","version":"0.25.0-dev","name":"01_basic_config","url":"/main/current/language-tutorial/01_basic_config.html","titles":[{"text":"Basic values","hash":"basic-values","id":1},{"text":"Structure: Classes, objects, modules","hash":"structure-classes-objects-modules","id":2},{"text":"Properties","hash":"properties","id":3},{"text":"Elements","hash":"elements","id":4},{"text":"Entries","hash":"entries","id":5},{"text":"Mixed members","hash":"mixed-members","id":6},{"text":"Collections","hash":"collections","id":7},{"text":"Exercises","hash":"exercises","id":8}]},"22":{"id":22,"text":"In this second part of the Pkl tutorial, you will learn how to write one (part of a) configuration in terms of another. You will also find and fill out an existing template. The central mechanism in Pkl for expressing one (part of a) configuration in terms of another is amending. Consider the following example. amendingObjects.pkl bird { name = \"Pigeon\" diet = \"Seeds\" taxonomy { kingdom = \"Animalia\" clade = \"Dinosauria\" order = \"Columbiformes\" } } parrot = (bird) { name = \"Parrot\" diet = \"Berries\" taxonomy { order = \"Psittaciformes\" } } Parrot and Pigeon have nearly identical properties. They only differ in their name and taxonomy, so if you have already written out bird, you can say that parrot is just like pigeon except name is \"Parrot\", diet is \"Berries\" the taxonomy.order is \"Psittaciformes\". When you run this, Pkl expands everything fully. bird { name = \"Common wood pigeon\" diet = \"Seeds\" taxonomy { kingdom = \"Animalia\" clade = \"Dinosauria\" order = \"Columbiformes\" } } parrot { name = \"Parrot\" diet = \"Berries\" taxonomy { kingdom = \"Animalia\" clade = \"Dinosauria\" order = \"Psittaciformes\" } } Amending does not allow us to add properties to the (typed) object we are amending. The next part of the tutorial discusses types in more detail. There, you see that amending never changes the type of the object. You can also amend nested objects. This allows you to only describe the difference with the outermost object for arbitrarily deeply nested structures. Consider the following example. nestedAmends.pkl woodPigeon { name = \"Common wood pigeon\" diet = \"Seeds\" taxonomy { species = \"Columba palumbus\" } } stockPigeon = (woodPigeon) { name = \"Stock pigeon\" taxonomy { (1) species = \"Columba oenas\" } } dodo = (stockPigeon) { (2) name = \"Dodo\" extinct = true (3) taxonomy { species = \"Raphus cucullatus\" } } 1 This amends species, as it occurs in stockPigeon. 2 Amended objects can, themselves, be amended. 3 New fields can be added to objects when amending. Notice how you only have to change taxonomy.species. In this example, bird.taxonomy has kingdom, clade, order and species. You are amending stockPigeon, to define woodPigeon. They have the same taxonomy, except for species. This notation says that everything in taxonomy should be what it is in the object you are amending (stockPigeon), except for species, which should be \"Columba palumbus\" . For the input above, Pkl produces the following output. woodPigeon { name = \"Common wood pigeon\" diet = \"Seeds\" taxonomy { species = \"Columba palumbus\" } } stockPigeon { name = \"Stock pigeon\" diet = \"Seeds\" taxonomy { species = \"Columba oenas\" } } dodo { name = \"Dodo\" diet = \"Seeds\" extinct = true taxonomy { species = \"Raphus cucullatus\" } } So far, you have only amended properties. Since you refer to them by name, it makes sense that you \"overwrite\" the value from the object you’re amending. What if you include elements or entries in an amends expression? amendElementsAndEntries.pkl favoriteFoods { \"red berries\" \"blue berries\" [\"Barn owl\"] { \"mice\" } } adultBirdFoods = (favoriteFoods) { [1] = \"pebbles\" (1) \"worms\" (2) [\"Falcon\"] { (3) \"insects\" \"amphibians\" } [\"Barn owl\"] { (4) \"fish\" } } 1 Explicitly amending by index replaces the element at that index. 2 Without explicit indices, Pkl can’t know which element to overwrite, so, instead, it adds an element to the object you’re amending. 3 When you write \"new\" entries (using a key that does not occur in the object you’re amending), Pkl also adds them. 4 When you write an entry using a key that exists, this notation amends its value. Pkl can’t know which of the favoriteFoods to overwrite only by their value. When you want to replace an element, you have to explicitly amend the element at a specific index. This is why a \"plain\" element in an amends expression is added to the object being amended. Result: favoriteFoods { [\"Barn owl\"] { \"mice\" } \"red berries\" \"blue berries\" } adultBirdFoods { [\"Barn owl\"] { \"mice\" \"fish\" } \"red berries\" \"pebbles\" [\"Falcon\"] { \"insects\" \"amphibians\" } \"worms\" } A .pkl file describes a module. Modules are objects that can be referred to from other modules. Going back to the example above, you can write parrot as a separate module. pigeon.pkl name = \"Common wood pigeon\" diet = \"Seeds\" taxonomy { species = \"Columba palumbus\" } You can import this module and express parrot like you did before. parrot.pkl import \"pigeon.pkl\" (1) parrot = (pigeon) { name = \"Great green macaw\" diet = \"Berries\" species { species = \"Ara ambiguus\" } } 1 Importing foo.pkl creates the object foo, so you can refer to pigeon in this code, like you did before. If you run Pkl on both, you will see that it works. Looking at the result, however, you see a (possibly) unexpected difference. $ pkl eval /Users/me/tutorial/pigeon.pkl name = \"Common wood pigeon\"\" diet = \"Seeds\" taxonomy { species = \"Columba palumbus\" } $ pkl eval /Users/me/tutorial/parrot.pkl parrot { name = \"Great green macaw\" diet = \"Berries\" taxonomy { species = \"Ara ambiguus\" } } The object pigeon is \"spread\" in the top-level, while parrot is a nested and named object. This is because writing parrot {…​} defines an object property in the \"current\" module. In order to say that \"this module is an object, amended from the pigeon module,\" you use an amends clause. parrot.pkl amends \"pigeon.pkl\" (1) name = \"Great green macaw\" 1 \"This\" module is the same as \"pigeon.pkl\", except for what is in the remainder of the file. As a first intuition, think of \"amending a module\" as \"filling out a form.\" A Pkl file can be either a template or a \"normal\" module. This terminology describes the intended use of the module and doesn’t imply anything about its structure. In other words: just by looking at Pkl code, you can’t tell whether it is a template or a \"normal\" module. acmecicd.pkl module acmecicd class Pipeline { name: String(nameRequiresBranchName)? hidden nameRequiresBranchName = (_) -> if (branchName == null) throw(\"Pipelines that set a 'name' must also set a 'branchName'.\") else true branchName: String? } timeout: Int(this >= 3) pipelines: Listing output { renderer = new YamlRenderer {} } Remember that amending is like filling out a form. That’s exactly what you’re doing here; you’re filling out \"work order forms\". Next, add a time-out of one minute for your job. cicd.pkl amends \"acmecicd.pkl\" timeout = 1 Unfortunately, Pkl does not accept this configuration and provides a rather elaborate error message: –– Pkl Error –– (1) Type constraint `this >= 3` violated. (2) Value: 1 (3) 225 | timeout: Int(this >= 3)? (4) ^^^^^^^^^ at acmecicd#timeout (file:///Users/me/tutorial/acmecicd.pkl, line 8) 3 | timeout = 1 (5) ^ at cicd#timeout (file:///Users/me/tutorial/cicd.pkl, line 3) 90 | text = renderer.renderDocument(value) (6) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ at pkl.base#Module.output.text (https://github.com/apple/pkl/blob/e4d8c882d/stdlib/base.pkl#L90) 1 Pkl found an error. 2 Which error Pkl found. 3 What the offending value is. 4 Where Pkl found its expectation (line 8 of the amended module). 5 Where Pkl found the offending value (line 3 of the input module). 6 What Pkl evaluated to discover the error. When Pkl prints source locations, it also prints clickable links for easy access. For local files, it generates a link for your development environment (configurable in ~/.pkl/settings.pkl). For packages imported from elsewhere, if available, Pkl produces https:// links to their repository. Pkl complains about a type constraint. Pkl’s type system doesn’t just protect you from providing a String where you expected an Int, it even checks which values are allowed. In this case, the minimum time-out is three minutes. If you change the value to 3, Pkl accepts your configuration. $ pkl eval cicd.pkl timeout: 3 pipelines: [] You can now define a pipeline. Start off by specifying the name of the pipeline and nothing else. cicd.pkl amends \"acmecicd.pkl\" timeout = 3 pipelines { new { (1) name = \"prb\" } } 1 There is no pipeline object to amend. The new keyword gives you an object to amend. So far, you’ve defined objects the same way you amended them. When the name foo didn’t occur before, foo { …​ } creates a property called foo and assigns to it the object specified on the …​. If foo is an existing object, this notation is an amend expression; resulting in a new object (value), but not a new (named) property. Since pipelines is a listing, you can add elements by writing expressions in an amend expression. In this case, though, there is no object to amend. Writing myNewPipeline { …​ } defines a property, but listings may only include elements. This is where you can use the keyword new. new gives you an object to amend. Pkl derives from the context in which new is used and what the object to amend should look like. This is called the default value for the context. The next part goes into detail about how Pkl does this. Running Pkl on your new configuration produces a verbose error. cicd.pkl –– Pkl Error –– Pipelines that set a 'name' must also set a 'branchName'. 8 | throw(\"Pipelines that set a 'name' must also set a 'branchName'.\") ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ at acmecicd#Pipeline.nameRequiresBranchName. (file:///Users/me/tutorial/acmecicd.pkl, line 8) 6 | name = \"prb\" ^^^^^ at cicd#pipelines[#1].name (file:///Users/me/tutorial/cicd.pkl, line 6) 90 | text = renderer.renderDocument(value) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ at pkl.base#Module.output.text (https://github.com/apple/pkl/blob/e4d8c882d/stdlib/base.pkl#L90) You have hit another type constraint, like timeout: Int(this >= 3) before. In this case, the error message consists of an English language sentence, instead of Pkl code. When constraints are complicated or very application specific, template authors can throw a more descriptive error message like this. The message is quite instructive, so you can fix the error by adding a branchName. cicd.pkl amends \"acmecicd.pkl\" timeout = 3 pipelines { new { name = \"prb\" branchName = \"main\" } } and indeed $ pkl eval -f yml /Users/me/tutorial/cicd.pkl timeout: 3 pipelines: - name: prb branchName: main","title":"Filling out a Template","component":"main","version":"0.25.0-dev","name":"02_filling_out_a_template","url":"/main/current/language-tutorial/02_filling_out_a_template.html","titles":[{"text":"Composing configurations","hash":"composing-configurations","id":1},{"text":"Amending","hash":"amending","id":2},{"text":"Modules","hash":"modules","id":3},{"text":"Amending templates","hash":"amending-templates","id":4}]},"23":{"id":23,"text":"In parts one and two, you saw that Pkl provides validation of our configurations. It checks syntax, types and constraints. As you saw in the acmecicd example here, the template can provide informative error messages when an amending module violates a type constraint. In this final part, you will see some of Pkl’s techniques that are particularly relevant for writing a template. Pkl always checks the syntax of its input. As it evaluates your configuration, it also checks types. You’ve seen objects, listings, and mappings already. These provide ways to write structured configuration. Before you can write types for them, you need to know how to write the types for the simplest (unstructured) values. These are all Pkl’s basic types: pklTutorialPart3.pkl name: String = \"Writing a Template\" part: Int = 3 hasExercises: Boolean = true amountLearned: Float = 13.37 duration: Duration = 30.min bandwidthRequirementPerSecond: DataSize = 50.mb In the above, you’ve explicitly annotated the code with type signatures. The default output of Pkl is actually pcf, which is a subset of Pkl. Since pcf does not have type signatures, running Pkl on this example removes them. $ pkl eval pklTutorialPart3.pkl name = \"Writing a Template\" part = 3 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mb Note how Duration and DataSize help you prevent unit errors in these common (for configuration) domains. Having a notation for basic types, you can now write typed objects. simpleClass.pkl class Language { (1) name: String } bestForConfig: Language = new { (2) name = \"Pkl\" } 1 A class definition. 2 A property definition, using the Language class. Although not required (or enforced), it’s customary to name properties starting with a lower-case letter. Class names, by that same convention, start with an upper-case letter. You can type objects with classes. In this example, you define a class called Language. You can now be certain that every instance of Language has a property name with type String. Types and values are different things in Pkl. Pkl does not render types in its output,[1] so when you run Pkl on this, you don’t see the class definition at all. $ pkl eval simpleClass.pkl bestForConfig { name = \"Pkl\" } Did you notice that the output doesn’t just omit the type signature, but also the = new? We will discuss this further in the next section. When your configuration describes a few different parts like this, you can define one instance and amend it for every other instance. For example: pklTutorialParts.pkl class TutorialPart { name: String part: Int hasExercises: Boolean amountLearned: Float duration: Duration bandwidthRequirementPerSecond: DataSize } pklTutorialPart1: TutorialPart = new { name = \"Basic Configuration\" part = 1 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mib.toUnit(\"mb\") } pklTutorialPart2: TutorialPart = (pklTutorialPart1) { name = \"Filling out a Template\" part = 2 } pklTutorialPart3: TutorialPart = (pklTutorialPart1) { name = \"Writing a Template\" part = 3 } You can read this as saying \"pklTutorialPart2 & pklTutorialPart3 are exactly like pklTutorialPart1, except for their name and part.\" Running Pkl confirms this: $ pkl eval pklTutorialParts.pkl pklTutorialPart1 { name = \"Basic Configuration\" part = 1 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mb } pklTutorialPart2 { name = \"Filling out a Template\" part = 2 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mb } pklTutorialPart3 { name = \"Writing a Template\" part = 3 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mb } Sadly, pklTutorialParts.pkl is a rewrite of pklTutorial.pkl. It creates a separate class TutorialPart and instantiates three properties with it (pklTutorialPart1, pklTutorialPart2 and pklTutorialPart3). In doing so, it implicitly moves everything \"down\" one level (pklTutorialPart3 is now a property in the module pklTutorialParts, whereas above, in pklTutorialPart3.pkl it was its own module). This is not very DRY. As a matter of fact, you don’t need this rewrite. Any .pkl file defines a module in Pkl. Any module is represented by a module class, which is an actual Pkl class. A module is not quite the same as any other class, because Pkl never renders class definitions on the output. However, when you ran Pkl on pklTutorialPart3.pkl, it did produce an output. This is because a module also defines an instance of the module class. The values given to properties in a module (or in any \"normal\" class) are called default values. When you instantiate a class, all the properties for which you don’t provide a value are populated from the class' default values. In our examples of tutorial parts, only the name and part varied across instances. You can express this by adding default values to the (module) class definition. Instead of starting from a particular tutorial part, you can define the module tutorialPart as follows: TutorialPart.pkl name: String (1) part: Int (1) hasExercises: Boolean = true (2) amountLearned: Float = 13.37 (2) duration: Duration = 30.min (2) bandwidthRequirementPerSecond: DataSize = 50.mb (2) 1 No default value given. 2 Default value given. Running this through Pkl gives an error, or course, because of the missing values: $ pkl eval TutorialPart.pkl –– Pkl Error –– Tried to read property `name` but its value is undefined. 1 | name: String ^^^^ ... An individual part now only has to fill in the missing fields, so you can change pklTutorialPart3.pkl to amend this: pklTutorialPart3.pkl amends \"TutorialPart.pkl\" name = \"Writing a Template\" part = 3 This results in $ pkl eval pklTutorialPart3.pkl name = \"Writing a Template\" part = 3 hasExercises = true amountLearned = 13.37 duration = 30.min bandwidthRequirementPerSecond = 50.mb This now behaves exactly like our pklTutorialPart3: TutorialPart = (pklTutorialPart1) {…​ before. pklTutorialPart3 is now defined as the value we get by amending tutorialPart and giving it a name and a part. Amending anything never changes its type. When we amend an object of type Foo, the result will always be precisely of type Foo. By \"precisely\" we mean, that amending an object also can’t \"turn it into\" an instance of a sub-class of the class of the object being amended. Now that you know about types, you can start writing your first template. So far, you’ve written configurations with Pkl, either without a template, or using a template on Pkl Hub. It is often easiest to first write a (typical) configuration for which you want to create a template. Suppose you want to define what a live workshop for this tutorial looks like. Consider this example: workshop2023.pkl title = \"Pkl: Configure your Systems in New Ways\" interactive = true seats = 100 occupancy = 0.85 duration = 1.5.h `abstract` = \"\"\" With more systems to configure, the software industry is drowning in repetitive and brittle configuration files. YAML and other configuration formats have been turned into programming languages against their will. Unsurprisingly, they don’t live up to the task. Pkl puts you back in control. \"\"\" event { name = \"Migrating Birds between hemispheres\" year = 2023 } instructors { \"Kate Sparrow\" \"Jerome Owl\" } sessions { new { date = \"8/14/2023\" time = 30.min } new { date = \"8/15/2023\" time = 30.min } } assistants { [\"kevin\"] = \"Kevin Parrot\" [\"betty\"] = \"Betty Harrier\" } agenda { [\"beginners\"] { title = \"Basic Configuration\" part = 1 duration = 45.min } [\"intermediates\"] { title = \"Filling out a Template\" part = 2 duration = 45.min } [\"experts\"] { title = \"Writing a Template\" part = 3 duration = 45.min } } Call your new template Workshop.pkl. Although not required, it’s good practice to always name your template with a module-clause. Defining the first few properties are like you saw in the previous section: module Workshop title: String interactive: Boolean seats: Int occupancy: Float duration: Duration `abstract`: String Unlike these first few properties, event is an object with multiple properties. To be able to type event, you need a class. You’ve seen before how to define this: class Event { name: String year: Int } event: Event Next, instructors isn’t an object with properties, but a list of unnamed values. Pkl offers the Listing type for this: instructors: Listing sessions is a Listing of objects, so you need a Session class. class Session { time: Duration date: String } sessions: Listing assistants has a structure like an object, in that all the values are named, but the set of names is not fixed for all possible workshops (and some workshops may have more assistants than others). The Pkl type for this is a Mapping: assistants: Mapping Finally, for every workshop session, there is an agenda, which describes which TutorialParts are covered. You already defined TutorialPart.pkl as its own module, so you should not define a separate class, but rather import that module and reuse it here: import \"TutorialPart.pkl\" (1) agenda: Mapping 1 This import clause brings the name TutorialPart into scope, which is the module class as discussed above. Note that import clauses must appear before property definitions. Putting it all together, your Workshop.pkl template looks like this: Workshop.pkl module Workshop import \"TutorialPart.pkl\" title: String interactive: Boolean seats: Int occupancy: Float duration: Duration `abstract`: String class Event { name: String year: Int } event: Event instructors: Listing class Session { time: Duration date: String } sessions: Listing assistants: Mapping agenda: Mapping 1. Although, some output formats can contain their own form of type annotation. This may be derived from the Pkl type. Type definitions (class and typealias) themselves are never rendered.","title":"Writing a Template","component":"main","version":"0.25.0-dev","name":"03_writing_a_template","url":"/main/current/language-tutorial/03_writing_a_template.html","titles":[{"text":"Basic types","hash":"basic-types","id":1},{"text":"Typed objects, properties and amending","hash":"typed-objects-properties-and-amending","id":2},{"text":"A new template","hash":"a-new-template","id":3}]},"24":{"id":24,"text":"Welcome to the Pkl language tutorial. We will get you up and running quickly! If you are new to Pkl, we recommend that you follow along with the code examples. This tutorial describes interactions with the REPL. For an even more interactive experience, we highly recommend you use our plugin for IntelliJ-family IDEs. For more comprehensive documentation, see Language Reference. For ready-to-go examples with full source code, see Examples. For API documentation, see Standard Library. Pick a tutorial by topic: Basic Configuration Filling out a Template Writing a Template","title":"Language Tutorial","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/language-tutorial/index.html","titles":[]},"25":{"id":25,"text":"The pkl command-line interface (CLI) evaluates Pkl modules and writes their output to the console or a file. For interactive development, the CLI includes a Read-Eval-Print Loop (REPL). The CLI comes in multiple flavors: Native macOS executable for amd64 (tested on macOS 10.15) Native Linux executable for amd64 (tested on Oracle Linux 8) Native Linux executable for aarch64 (tested on Oracle Linux 8) Native Alpine Linux executable for amd64 (cross-compiled and tested on Oracle Linux 8) Java executable (tested with Java 8/11/14 on macOS and Oracle Linux) On macOS and Linux, we recommend using the native executables. They are self-contained, start up instantly, and run complex Pkl code much faster than the Java executable. What is the Difference Between the Linux and Alpine Linux Executables? The Linux executable is dynamically linked against glibc and libstdc++, whereas, the Alpine Linux executable is statically linked against musl libc and libstdc++. The Java executable works on multiple platforms and has a smaller binary size than the native executables. However, it requires a Java 8 (or higher) runtime on the system path, has a noticeable startup delay, and runs complex Pkl code slower than the native executables. All flavors are built from the same codebase and undergo the same automated testing. Except where noted otherwise, the rest of this page discusses the native executables. Development and release versions can be downloaded and installed manually. curl -o pkl https://github.com/apple/pkl/releases/download/0.25.0-SNAPSHOT/pkl-cli-macos-0.25.0-SNAPSHOT.bin chmod +x pkl ./pkl --version This should print something similar to: Pkl 0.25.0-dev (macOS, native) The Linux executable is dynamically linked against glibc and libstdc++ for the amd64 and aarch64 architectures. For a statically linked executable, see Alpine Linux Executable. On amd64: # on amd64 curl -o pkl https://github.com/apple/pkl/releases/download/0.25.0-SNAPSHOT/pkl-cli-linux-amd64-0.25.0-SNAPSHOT.bin chmod +x pkl ./pkl --version On aarch64: curl -o pkl https://github.com/apple/pkl/releases/download/0.25.0-SNAPSHOT/pkl-cli-linux-aarch64-0.25.0-SNAPSHOT.bin chmod +x pkl ./pkl --version This should print something similar to: Pkl 0.25.0-dev (Linux, native) The Alpine Linux executable is statically linked against musl libc and libstdc++. For a dynamically linked executable, see Linux Executable. curl -o pkl https://github.com/apple/pkl/releases/download/0.25.0-SNAPSHOT/pkl-cli-alpine-amd64-0.25.0-SNAPSHOT.bin chmod +x pkl ./pkl --version This should print something similar to: Pkl 0.25.0-dev (Linux, native) We currently do not support the aarch64 architecture for Alpine Linux. curl -o jpkl https://github.com/apple/pkl/releases/download/0.25.0-SNAPSHOT/pkl-cli-java-0.25.0-SNAPSHOT.jar chmod +x jpkl ./jpkl --version This should print something similar to: Pkl 0.25.0-dev (macOS 10.16, Java 11.0.9) Synopsis: pkl [] [] For a brief description of available options, run pkl -h. The Java executable is named jpkl. Synopsis: pkl eval [] [] Evaluate the given Pkl and produce their rendering results. The absolute or relative URIs of the modules to evaluate. Relative URIs are resolved against the working directory. -f, --format Default: (none) Example: yaml The output format to generate. The default output renderer for a module supports the following formats: json jsonnet pcf plist properties textproto xml yaml If no format is set, the default renderer chooses pcf. -o, --output-path Default: (none) Example: \"config.yaml\" The file path where the output file is placed. Relative paths are resolved against the project directory. This option is mutually exclusive with --multiple-file-output-path. If neither option is set, each module’s output.text is written to standard output. If multiple source modules are given, placeholders can be used to map them to different output files. The following placeholders are supported: %{moduleDir} The directory path of the module, relative to the working directory. Only available when evaluating file-based modules. %{moduleName} The simple module name as inferred from the module URI. For hierarchical URIs such as file:///foo/bar/baz.pkl, this is the last path segment without file extension. %{outputFormat} The requested output format. Only available if --format is set. If multiple source modules are mapped to the same output file, their outputs are concatenated. By default, module outputs are separated with ---, as in a YAML stream. The separator can be customized using the --module-output-separator option. --module-output-separator Default: --- (as in a YAML stream) The separator to use when multiple module outputs are written to the same file, or to standard output. -m, --multiple-file-output-path Default: (none) Example: \"output/\" The directory where a module’s output files are placed. Setting this option causes Pkl to evaluate a module’s output.files property and write the files specified therein. Within output.files, a key determines a file’s path relative to --multiple-file-output-path, and a value determines the file’s contents. This option cannot be used together with any of the following: --output-path --expression This option supports the same placeholders as --output-path. Examples: # Write files to `output/` pkl eval -m output/ myFiles.pkl # Write files to the current working directory pkl eval -m . myFiles.pkl # Write foo.pkl's files to the `foo` directory, and bar.pkl's files # to the `bar` directory pkl eval -m \"%{moduleName}\" foo.pkl bar.pkl For additional details, see Multiple File Output in the language reference. -x, --expression Default: (none) The expression to be evaluated within the module. This option causes Pkl to evaluate the provided expression instead of the module’s output.text or output.files properties. The resulting value is then stringified, and written to either standard out, or the designated output file. For example, consider the following Pkl module: pigeon.pkl metadata { species = \"Pigeon\" } The following command prints Pigeon to the console: pkl -x metadata.name pigeon.pkl # => Pigeon Setting an --expression flag can be thought of as substituting the expression in place of a module’s output.text property. Running the previous command is conceptually the same as if the below module were evaluated without the --expression flag: metadata { species = \"Pigeon\" } output { text = metadata.name.toString() } This command also takes common options. Synopsys: pkl server Run as a server that communicates over standard input/output. This option is used for embedding Pkl in an external client, such as pkl-swift or pkl-go. Synopsys: pkl test [] [] Evaluate the given as tests, producing a test report and appropriate exit code. Renderers defined in test files will be ignored by the test command. The absolute or relative URIs of the modules to test. Relative URIs are resolved against the working directory. --junit-reports Default: (none) Example: ./build/test-results Directory where to store JUnit reports. No JUnit reports will be generated if this option is not present. --overwrite Force generation of expected examples. The old expected files will be deleted if present. This command also takes common options. Synopsys: pkl repl [] Start a REPL session. This command takes common options. Synopsis: pkl project package This command prepares a project to be published as a package. Given a project directory, it creates the following artifacts: @ - the package metadata file @.sha256 - the dependency metadata file’s SHA-256 checksum @.zip - the package archive @.zip.sha256 - the package archive’s SHA-256 checksum These artifacts are expected to be published to an HTTPS server, such that the metadata and zip files can be fetched at their expected locations. The package ZIP should be available at the packageZipUrl location specified in the PklProject file The package metadata should be available at the package URI’s derived HTTPS URL. For example, given package package://example.com/mypackage@1.0.0, the metadata file should be published to https://example.com/mypackage@1.0.0. During packaging, this command runs these additional steps: Run the package’s API tests, if any are defined. Validates that if the package has already been published, that the package’s metadata is identical. This step can be skipped using the --skip-publish-check flag. Examples: # Search the current working directory for a project, and package it. pkl project package # Package all projects within the `packages/` directory to `.out`, writing each package's artifacts to its own directory. pkl project package --output-path \".out/%{name}@%{version}/\" packages/*/ --output-path Default: .out The directory to write artifacts to. Accepts the following placeholders: %{name} The name of the package %{version} The version of the package --skip-publish-check Skips checking whether a package has already been published with different contents. By default, the packager will check whether a package at the same version has already been published. If the package has been published, it validates that the package’s metadata is identical to the locally generated metadata. --junit-reports Default: (none) Example: ./build/test-results Directory where to store JUnit reports. No JUnit reports will be generated if this option is not present. --overwrite Force generation of expected examples. The old expected files will be deleted if present. This command also takes common options. Synopsis: pkl project resolve This command takes the dependencies of a project, and writes the resolved versions a file at path PklProject.deps.json. It builds a dependency list, taking the latest minor version in case of version conflicts. For more details, see the resolving dependencies section of the language reference. Examples: # Search the current working directory for a project, and resolve its dependencies. pkl project resolve # Resolve dependencies for all projects within the `packages/` directory. pkl project resolve packages/*/ This command accepts common options. Synopsis: pkl download-package This command downloads the specified packages to the cache directory. If the package already exists in the cache directory, this command is a no-op. This command accepts common options. The pkl eval, pkl test, pkl repl, pkl project resolve, pkl project package, and pkl download-package commands support the following common options: --allowed-modules Default: pkl:,file:,modulepath:,https:,repl:,package:,projectpackage: Comma-separated list of URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. --allowed-resources Default: env:,prop:,package:,projectpackage: Comma-separated list of URI patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URIs. At least one pattern needs to match for a resource to be readable. --cache-dir Default: ~/.pkl/cache Example: /path/to/module/cache/ The cache directory for storing packages. --no-cache Disable cacheing of packages. -e, --env-var Default: OS environment variables for the current process Example: MY_VAR=myValue Sets an environment variable that can be read by Pkl code with read(\"env:\"). Repeat this option to set multiple environment variables. -h, --help Display help information. --module-path Default: (empty) Example: dir1:zip1.zip:jar1.jar Directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Paths are separated by the platform-specific path separator (: on *nix, ; on Windows). Relative paths are resolved against the working directory. -p, --property Default: (none) Example: myProp=myValue Sets an external property that can be read by Pkl code with read(\"prop:\"). Repeat this option to set multiple external properties. --root-dir Default: (none) Example: /some/path Root directory for file: modules and resources. If set, access to file-based modules and resources is restricted to those located under the specified root directory. Any symlinks are resolved before this check is performed. --settings Default: (none) Example: mySettings.pkl File path of the Pkl settings file to use. If not set, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. -t, --timeout Default: (none) Example: 30 Duration, in seconds, after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. -v, --version Display version information. -w, --working-dir Base path that relative module paths passed as command-line arguments are resolved against. Defaults to the current working directory. --ca-certificates Default: (none) Example: /some/path/certificates.pem Path to a file containing CA certificates to be used for TLS connections. Setting this option replaces the existing set of CA certificates bundled into the CLI. Certificates need to be X.509 certificates in PEM format. For other methods of configuring certificates, see CA Certificates. The pkl eval, pkl test, pkl repl, and pkl download-package commands also take the following options: --project-dir Default: (none) Example: /some/path Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If omitted, this is determined by searching up from the working directory for a directory that contains a PklProject file, until --root-dir or the file system root is reached. --omit-project-settings Disables loading evaluator settings from the PklProject file. --no-project Disables all behavior related to projects. Say we have the following module: config.pkl bird { species = \"Pigeon\" diet = \"Seeds\" } parrot = (bird) { species = \"Parrot\" diet = \"Berries\" } To evaluate this module and write its output to standard output, run: pkl eval config.pkl You should see the following output: bird { species = \"Pigeon\" diet = \"Seeds\" } parrot { species = \"Parrot\" diet = \"Berries\" } To render output as JSON, YAML, XML property list, or Java properties, use --format json, --format yaml, --format plist, or --format properties, respectively. To control the output format from within Pkl code, see Module Output. To read a source module from standard input rather than a file, use - as a module name: echo mod2.pkl | pkl eval mod1.pkl - mod3.pkl This is especially useful in environments that don’t support /dev/stdin. To write output to a file rather than standard output, use --output-path some/file.ext. Multiple modules can be evaluated at once: pkl eval config1.pkl config2.pkl config3.pkl To write module outputs to separate output files, --output-path supports the following placeholders: %{moduleDir} the directory path of the source module, relative to the working directory (only available for file based modules) %{moduleName} the last path segment of the module URI, without file extension %{outputFormat} the target format (only available if --format is set) The following run produces three JSON files placed next to the given source modules: pkl eval --format=json --output-path=%{moduleDir}/%{moduleName}.json config1.pkl config2.pkl config3.pkl If multiple module outputs are written to the same file, or to standard output, their outputs are concatenated. By default, module outputs are separated with ---, as in a YAML stream. The separator can be customized using the --module-output-separator option. To start a REPL session, run pkl repl: $ pkl repl Welcome to Pkl 0.25.0-dev. Type an expression to have it evaluated. Type :help or :examples for more information. pkl> The Java executable is named jpkl. To load config.pkl into the REPL, run: pkl> :load config.pkl To evaluate the bird.name property, run: pkl> bird.name \"Pigeon\" To evaluate the entire module, force-evaluate this: pkl> :force this Commands start with : and can be tab-completed: pkl> :Tab clear examples force help load quit reset pkl> :qTab pkl> :quitReturn $ Commands can be abbreviated with any unique name prefix: pkl> :qReturn $ To learn more about each command, run the :help command. Some commands support further command-specific tab completion. For example, the :load command supports completing file paths. With commands out of the way, let’s move on to evaluating code. To evaluate an expression, type the expression and hit Return. pkl> 2 + 4 6 Apart from expressions, the REPL also accepts property, function, and class definitions. (See the Language Reference to learn more about these language concepts.) pkl> hello = \"Hello, World!\" pkl> hello \"Hello, World!\" pkl> function double(n) = 2 * n pkl> double(5) 10 pkl> class Bird { name: String } pkl> new Bird { species = \"Pigeon\" } { name = ? } Top-level expressions are only supported in the REPL. In a regular module, every expression is contained in a definition, and only definitions exist at the top level. Existing members can be redefined: pkl> species = \"Pigeon\" pkl> species \"Pigeon\" pkl> species = \"Barn\" pkl> species \"Barn\" pkl> species += \" Owl\" pkl> species \"Barn owl\" Due to Pkl’s late binding semantics, redefining a member affects dependent members: pkl> name = \"Barn\" pkl> species = \"$name Owl\" pkl> species \"Barn owl\" pkl> name = \"Elf\" pkl> species \"Elf Owl\" Redefining members is only supported in the REPL. Under the hood, it works as follows: The REPL environment is represented as a synthetic Pkl module. When a new member is defined, it is added to the current REPL module. When an existing member is redefined, it is added to a new REPL module that amends the previous REPL module. The Pkl settings file allows to customize the CLI experience. A settings file is a Pkl module amending the pkl.settings standard library module. Its default location is ~/.pkl/settings.pkl. To use a different settings file, set the --settings command line option, for example --settings mysettings.pkl. To enforce default settings, use --settings pkl:settings. The settings file is also honored by (and configurable through) the Gradle plugin and CliEvaluator API. Here is a typical settings file: ~/.pkl/settings.pkl amends \"pkl:settings\" (1) editor = Idea (2) 1 A settings file should amend the pkl.settings standard library module. 2 Configures IntelliJ IDEA as the preferred editor. Other supported values are System, GoLand, TextMate, Sublime, Atom, and VsCode. With the above settings file in place, Cmd+Double-clicking a source code link in a stack trace opens the corresponding file in IntelliJ IDEA at the correct location. To learn more about available settings, see pkl.settings. When making TLS requests, Pkl comes with its own set of CA certificates. These certificates can be overridden via either of the two options: Set them directly via the CLI option --ca-certificates . Add them to a directory at path ~/.pkl/cacerts/. Both these options will replace the default CA certificates bundled with Pkl. The CLI option takes precedence over the certificates in ~/.pkl/cacerts/. Certificates need to be X.509 certificates in PEM format.","title":"CLI","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/pkl-cli/index.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Download","hash":"download","id":2},{"text":"macOS Executable","hash":"macos-executable","id":3},{"text":"Linux Executable","hash":"linux-executable","id":4},{"text":"Alpine Linux Executable","hash":"alpine-linux-executable","id":5},{"text":"Java Executable","hash":"java-executable","id":6},{"text":"Usage","hash":"usage","id":7},{"text":"pkl eval","hash":"command-eval","id":8},{"text":"Options","hash":"options","id":9},{"text":"pkl server","hash":"command-server","id":10},{"text":"pkl test","hash":"command-test","id":11},{"text":"Options","hash":"options-2","id":12},{"text":"pkl repl","hash":"command-repl","id":13},{"text":"pkl project package","hash":"command-project-package","id":14},{"text":"Options","hash":"options-3","id":15},{"text":"pkl project resolve","hash":"command-project-resolve","id":16},{"text":"Options","hash":"options-4","id":17},{"text":"pkl download-package","hash":"command-download-package","id":18},{"text":"Options","hash":"options-5","id":19},{"text":"Common options","hash":"common-options","id":20},{"text":"Evaluating Modules","hash":"evaluating-modules","id":21},{"text":"Batch Evaluation","hash":"batch-evaluation","id":22},{"text":"Working with the REPL","hash":"repl","id":23},{"text":"Loading Modules","hash":"loading-modules","id":24},{"text":"REPL Commands","hash":"repl-commands","id":25},{"text":"Evaluating Code","hash":"evaluating-code","id":26},{"text":"Redefining Members","hash":"redefining-members","id":27},{"text":"Settings File","hash":"settings-file","id":28},{"text":"CA Certificates","hash":"ca-certs","id":29}]},"26":{"id":26,"text":"The pkl-core library contains the Pkl parser, evaluator, REPL server, and Standard Library. It is the foundation for most of Pkl’s other libraries and tools. The library can also be used to embed Pkl in Java libraries and applications. The pkl-core library is available from Maven Central. It requires Java 11 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { compile \"org.pkl-lang:pkl-core:0.25.0-SNAPSHOT\" } To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-core 0.25.0-SNAPSHOT Evaluator is the core evaluator that exposes multiple methods of evaluation. The main evaluation method is evaluate, which returns a Java representation of the Pkl module object. If evaluation succeeds, a PModule object representing the fully evaluated module is returned. Otherwise, an PklException with error details is thrown. Let’s look at an example: PModule module; try (var evaluator = Evaluator.preconfigured()) { (1) module = evaluator.evaluate( ModuleSource.text(\"pigeon { age = 30; hobbies = List(\\\"swimming\\\", \\\"surfing\\\") }\")); (2) } var pigeon = (PObject) module.get(\"pigeon\"); (3) var className = pigeon.getClassInfo().getQualifiedName(); (4) var hobbies = (List) pigeon.get(\"hobbies\"); (5) 1 Build an Evaluator with default configuration. The evaluator should be closed once it is no longer needed. In this example, this is done with a try-with-resources statement. Note that objects returned by the evaluator remain valid after calling close(). 2 Build a ModuleSource using the given text as the module’s contents. Evaluate the given module source. Alternatively, it’s possible to build a ModuleSource from a file, path, uri, and other sources. 3 Get the module’s \"pigeon\" property, which is represented as PObject in Java. 4 Get the class name for this object. In this example, the class name is pkl.base#Dynamic. 5 Get pigeon’s \"diet\" property, which is represented as List in Java. Often, ValueVisitor is a better way to process a module. See PcfRenderer, JsonRenderer, YamlRenderer and PListRenderer for examples. The (Pkl, not Java) security manager can be configured and customized using SecurityManagers and related classes. Module loaders can be configured and customized using ModuleKeyFactories and related classes. Refer to the Javadoc and sources published with the library, or browse the library’s main and test sources.","title":"pkl-core Library","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/pkl-core/index.html","titles":[{"text":"Installation","hash":"pkl-core-installation","id":1},{"text":"Gradle","hash":"gradle","id":2},{"text":"Maven","hash":"maven","id":3},{"text":"Usage","hash":"usage","id":4},{"text":"Further Information","hash":"further-information","id":5}]},"27":{"id":27,"text":"Pkldoc is a documentation website generator that produces navigable and searchable API documentation for Pkl modules. Pkldoc’s look and feel is inspired by Scaladoc. To get a first impression, browse the Standard Library API Docs. Pkldoc offers the following features: Code navigation Easily navigate between hyperlinked modules, classes, functions, and properties. Member search Search the entire documentation by member name. See the next section for details. Comment folding Expand and collapse multi-paragraph doc comments. Markdown support Write doc comments in Markdown. See Doc Comments for details. Member links Link to other members from your doc comments. See Member Links for details. Member anchors Get a member’s deep link by clicking its anchor symbol and copying the URL in the address bar. Cross-site links Enable cross-site member links simply by providing the URLs of other Pkldoc websites such as the standard library docs. To get a first impression of Pkldoc’s member search, let’s try and find property MinFiniteFloat in the standard library docs: Figure 1. Searching the standard library docs. To start a search, press s. Search results are displayed as you type. To limit the search to a particular kind of member, prefix the search term with m: for modules, c: for classes, f: for functions, or p: for properties. For example, search term p:min finds property MinFiniteFloat but not function min(). Camel case matching is always enabled and does not require capitalizing the search term. For example, search term mff matches properties MinFiniteFloat and MaxFiniteFloat. Both search terms and member names may contain non-ASCII Unicode characters. As characters are normalized to their base form, search term res matches Réseau. The @AlsoKnownAs annotation, defined and used throughout the pkl.base module, documents alternative names for a member used in other programming languages or earlier versions of a module. Pkldoc’s search takes these alternative names into account. For example, searching the standard library docs for count or size finds property String.length. Feel free to use @AlsoKnownAs in your own modules. Search results are categorized into exact and other (partial) matches. On module and class pages, additional categories show matches in the same module and class. Within a category, results are ranked by similarity with the search term. To navigate to a search result, either click the result or select it with the up/down arrow keys and press Enter. Pkldoc is offered as Gradle plugin, Java library, and CLI. See Installation in the Gradle Plugin chapter. The pkl-doc library is available from Maven Central. It requires Java 11 or higher. To use the library in a Gradle project, declare the following dependency: build.gradle dependencies { compile \"org.pkl-lang:pkl-doc:0.25.0-SNAPSHOT\" } To use the library in a Maven project, declare the following dependency: pom.xml org.pkl-lang pkl-doc 0.25.0-SNAPSHOT The CLI is bundled with the library and does not currently ship as a native executable or a self-contained Jar. We recommend to provision it with a Maven compatible build tool as shown in Library Installation. The Pkldoc tool is offered as Gradle plugin, Java library, and CLI. It can generate documentation either for modules directly, or generate documentation for package uris. The tool requires an argument of a module named _docsite-info.pkl, that amends pkl.DocsiteInfo. Modules can be passed directly to Pkldoc for documentation generation. When generating documentation for these modules, there must also be a module named doc-package-info.pkl that amends pkl.DocPackageInfo. The doc-package-info.pkl module defines a doc package, which describes how modules are grouped and versioned together. When generating documentation for modules, each such module must declare a module name that starts with a package name declared in a doc-package-info.pkl module. For example, the following are valid module declarations for package com.example: module com.example.Birds module com.example.Birds.Parrot The part of the module name that comes after the package name must match the module’s relative path in its source code repository. For example, module com.example.Bird.Parrot is expected to be found at $sourceCode/Bird/Parrot.pkl, where sourceCode is configured in doc-package-info.pkl. Pkldoc can alternatively generate documentation for a package. When generating documentation for a package, the URI of the package must be passed as an argument to Pkldoc. These packages must already be published and downloadable. When generating documentation for packages, modules within a package must declare a module name that is prefixed by the package’s name declared in the Package.name property of its PklProject file. For example, the following are valid module declarations for package com.example: module com.example.Birds module com.example.Birds.Parrot The part of the module name that comes after the package name must match the module’s relative path in its source code repository. For example, module com.example.Bird.Parrot is expected to be found at $sourceCode/Bird/Parrot.pkl, where sourceCode is configured in the Package.sourceCode property of its PklProject file. See Pkldoc Generation in the Gradle Plugin chapter. The Java library offers two APIs: A high-level CliDocGenerator API whose feature set corresponds to the CLI. A low-level DocGenerator API that offers additional features and control. For more information, refer to the Javadoc documentation. As mentioned in CLI Installation, the CLI is bundled with the library. To run the CLI, execute the library Jar or its org.pkl.doc.Main class. Synopsis: java -cp -jar pkl-doc.jar [] The absolute or relative URIs of docsite descriptors, package descriptors, and the modules for which to generate documentation. Relative URIs are resolved against the working directory. -o, --output-dir Default: (none) Example: pkldoc The directory where generated documentation is placed. Common CLI options: --allowed-modules Default: pkl:,file:,modulepath:,https:,repl:,package:,projectpackage: Comma-separated list of URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. --allowed-resources Default: env:,prop:,package:,projectpackage: Comma-separated list of URI patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URIs. At least one pattern needs to match for a resource to be readable. --cache-dir Default: ~/.pkl/cache Example: /path/to/module/cache/ The cache directory for storing packages. --no-cache Disable cacheing of packages. -e, --env-var Default: OS environment variables for the current process Example: MY_VAR=myValue Sets an environment variable that can be read by Pkl code with read(\"env:\"). Repeat this option to set multiple environment variables. -h, --help Display help information. --module-path Default: (empty) Example: dir1:zip1.zip:jar1.jar Directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Paths are separated by the platform-specific path separator (: on *nix, ; on Windows). Relative paths are resolved against the working directory. -p, --property Default: (none) Example: myProp=myValue Sets an external property that can be read by Pkl code with read(\"prop:\"). Repeat this option to set multiple external properties. --root-dir Default: (none) Example: /some/path Root directory for file: modules and resources. If set, access to file-based modules and resources is restricted to those located under the specified root directory. Any symlinks are resolved before this check is performed. --settings Default: (none) Example: mySettings.pkl File path of the Pkl settings file to use. If not set, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. -t, --timeout Default: (none) Example: 30 Duration, in seconds, after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. -v, --version Display version information. -w, --working-dir Base path that relative module paths passed as command-line arguments are resolved against. Defaults to the current working directory. --ca-certificates Default: (none) Example: /some/path/certificates.pem Path to a file containing CA certificates to be used for TLS connections. Setting this option replaces the existing set of CA certificates bundled into the CLI. Certificates need to be X.509 certificates in PEM format. For other methods of configuring certificates, see CA Certificates. For a ready-to-go example with full source code and detailed walkthrough, see pkldoc in the pkl/pkl-examples repository.","title":"Pkldoc","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/pkl-doc/index.html","titles":[{"text":"Features","hash":"features","id":1},{"text":"Member Search","hash":"member-search","id":2},{"text":"Installation","hash":"installation","id":3},{"text":"Gradle Plugin","hash":"gradle-plugin","id":4},{"text":"Java Library","hash":"install-library","id":5},{"text":"Gradle","hash":"gradle","id":6},{"text":"Maven","hash":"maven","id":7},{"text":"CLI","hash":"install-cli","id":8},{"text":"Usage","hash":"usage","id":9},{"text":"Generating documentation for modules directly","hash":"generating-documentation-for-modules-directly","id":10},{"text":"Generating documentation for a package","hash":"generating-documentation-for-a-package","id":11},{"text":"Gradle Plugin","hash":"gradle-plugin-2","id":12},{"text":"Java Library","hash":"java-library","id":13},{"text":"CLI","hash":"cli","id":14},{"text":"Options","hash":"options","id":15},{"text":"Full Example","hash":"full-example","id":16}]},"28":{"id":28,"text":"The Gradle plugin offers the following features: Module evaluation Java code generation Kotlin code generation Pkldoc generation Plugin versions coincide with Pkl versions. That is, plugin version x.y.z uses Pkl version x.y.z. The Gradle plugin is available from Maven Central. It requires Java 11 or higher and Gradle 6.8 or higher. Earlier Gradle versions are not supported. The plugin is applied as follows: build.gradle plugins { id \"org.pkl-lang\" version \"0.25.0-SNAPSHOT\" } build.gradle.kts plugins { id(\"org.pkl-lang\") version \"0.25.0-SNAPSHOT\" } This feature integrates the Pkl evaluator into Gradle builds. To add an evaluator to the build, add a named configuration block inside pkl.evaluators: build.gradle pkl { evaluators { evalPkl { sourceModules.add(file(\"module1.pkl\")) transitiveModules.from file(\"module2.pkl\") outputFile = layout.buildDirectory.file(\"module1.yaml\") outputFormat = \"yaml\" } } } build.gradle.kts pkl { evaluators { register(\"evalPkl\") { sourceModules.add(file(\"module1.pkl\")) transitiveModules.from(file(\"module2.pkl\")) outputFile.set(layout.buildDirectory.file(\"module1.yaml\")) outputFormat.set(\"yaml\") } } } To guarantee correct Gradle up-to-date behavior, transitiveModules needs to contain all module files transitively referenced by sourceModules. For each declared evaluator, the Pkl plugin creates an equally named task. Hence the above evaluator can be run with: $ ./gradlew evalPkl For a ready-to-go example with full source code, see codegen-java in the pkl/pkl-examples repository. outputFormat: Property Default: \"pcf\" Example: outputFormat = \"yaml\" The output format to generate. The default output renderer for a module supports the following formats: \"json\" \"jsonnet\" \"pcf\" \"plist\" \"properties\" \"textproto\" \"xml\" \"yaml\" outputFile: RegularFileProperty Default: file(\"%{moduleDir}/%{moduleName}.%{outputFormat}\") (places output files next to the source modules) Example: outputFile = layout.projectDirectory.file(\"config.yaml\") The file path where the output file is placed. Relative paths are resolved against the project directory. If multiple source modules are given, placeholders can be used to map them to different output files. The following placeholders are supported: %{moduleDir} The directory path of the module, relative to the working directory. Only available when evaluating file-based modules. %{moduleName} The simple module name as inferred from the module URI. For hierarchical module URIs such as file:///foo/bar/baz.pkl, this is the last path segment without file extension. %{outputFormat} The requested output format. Only available if outputFormat is set. If multiple sources modules are mapped to the same output file, their outputs are concatenated. By default, module outputs are separated with ---, as in a YAML stream. The separator can be customized using the moduleOutputSeparator option. multipleFileOutputDir: DirectoryProperty Example 1: multipleFileOutputDir = layout.projectDirectory.dir(\"output\") Example 2: multipleFileOutputDir = layout.projectDirectory.file(\"%{moduleDir}/output\") The directory where a module’s output files are placed. Setting this option causes Pkl to evaluate a module’s output.files property and write the files specified therein. Within output.files, a key determines a file’s path relative to multipleFileOutputDir, and a value determines the file’s contents. This option cannot be used together with any of the following: outputFile expression This option supports the same placeholders as outputFile. For additional details, see Multiple File Output in the language reference. moduleOutputSeparator: Property Default: \"---\" (as in a YAML stream) The separator to use when multiple module outputs are written to the same file. expression: Property Default: (none) Example: expression = \"topLevelProperty.subValue\" The expression to be evaluated within the module. This option causes Pkl to evaluate the provided expression instead of the module’s output.text or output.files properties. The resulting value is then stringified, and written to the designated output file. For example, consider the following Pkl module: my-pod.pkl metadata { name = \"my-pod\" } The expression metadata.name evaluates to text my-pod. Common properties: sourceModules: ListProperty Default: [] Example 1: sourceModules = [\"module1.pkl\", \"module2.pkl\"] Example 2: sourceModules = fileTree(\"config\").include(\"**/*.pkl\") List of Pkl modules which are used for this operation. This property accepts the following types to represent a module: java.net.URI java.io.File java.nio.file.Path java.net.URL java.lang.CharSequence - if the represented string looks like a URI (it contains a scheme), the input is treated as a URI. Otherwise, it is treated as a path. Relative paths are resolved against the project directory. org.gradle.api.file.FileSystemLocation transitiveModules: ConfigurableFileCollection Default: files() (empty collection) Example 1: transitiveModules.from files(\"module1.pkl\", \"module2.pkl\") Example 2: transitiveModules.from fileTree(\"config\").include(\"**/*.pkl\") File paths of modules that are directly or indirectly used by source modules. Setting this option enables correct Gradle up-to-date checks, which ensures that your Pkl tasks are executed if any of the transitive files are modified; it does not affect evaluation otherwise. Including source modules in transitiveModules is permitted but not required. Relative paths are resolved against the project directory. projectDir: DirectoryProperty Default: null Example 1: projectDir = layout.projectDirectory.dir(\"pkl\") Example 2: projectDir.fileValue file(\"/some/absolute/path\") Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If null, this is determined by searching up from the working directory for a directory that contains a PklProject file, until evalRootDir or the file system root is reached. omitProjectSettings: Property Disables loading evaluator settings from the PklProject file. noProject: Property Disables all behavior related to projects. settingsModule: Property Default: null Example: settingsModule = layout.projectDirectory.file(\"mySettings.pkl\") The Pkl settings module to use. This property accepts the same input types as the sourceModules property. If null, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This feature integrates the Pkl test evaluator into Gradle builds. To add tests to the build, add a named configuration block inside pkl.tests: build.gradle pkl { tests { testPkl { sourceModules.add(files(\"module1_test.pkl\", \"module2_test.pkl\")) junitReportsDir = layout.buildDirectory.dir(\"reports\") overwrite = false } } } build.gradle.kts pkl { tests { register(\"testPkl\") { sourceModules.addAll(files(\"module1_test.pkl\", \"module2_test.pkl\")) junitReportsDir.set(layout.buildDirectory.dir(\"reports\")) overwrite.set(false) } } } junitReportsDir: DirectoryProperty Default: null Example: junitReportsDir = layout.buildDirectory.dir(\"reports\") Whether and where to generate JUnit XML reports. overwrite: Property Default: false Whether to ignore expected example files and generate them again. Common properties: sourceModules: ListProperty Default: [] Example 1: sourceModules = [\"module1.pkl\", \"module2.pkl\"] Example 2: sourceModules = fileTree(\"config\").include(\"**/*.pkl\") List of Pkl modules which are used for this operation. This property accepts the following types to represent a module: java.net.URI java.io.File java.nio.file.Path java.net.URL java.lang.CharSequence - if the represented string looks like a URI (it contains a scheme), the input is treated as a URI. Otherwise, it is treated as a path. Relative paths are resolved against the project directory. org.gradle.api.file.FileSystemLocation transitiveModules: ConfigurableFileCollection Default: files() (empty collection) Example 1: transitiveModules.from files(\"module1.pkl\", \"module2.pkl\") Example 2: transitiveModules.from fileTree(\"config\").include(\"**/*.pkl\") File paths of modules that are directly or indirectly used by source modules. Setting this option enables correct Gradle up-to-date checks, which ensures that your Pkl tasks are executed if any of the transitive files are modified; it does not affect evaluation otherwise. Including source modules in transitiveModules is permitted but not required. Relative paths are resolved against the project directory. projectDir: DirectoryProperty Default: null Example 1: projectDir = layout.projectDirectory.dir(\"pkl\") Example 2: projectDir.fileValue file(\"/some/absolute/path\") Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If null, this is determined by searching up from the working directory for a directory that contains a PklProject file, until evalRootDir or the file system root is reached. omitProjectSettings: Property Disables loading evaluator settings from the PklProject file. noProject: Property Disables all behavior related to projects. settingsModule: Property Default: null Example: settingsModule = layout.projectDirectory.file(\"mySettings.pkl\") The Pkl settings module to use. This property accepts the same input types as the sourceModules property. If null, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This feature integrates the Java code generator into Gradle builds. To add a Java code generator to the build, add a named configuration block inside pkl.javaCodeGenerators: build.gradle pkl { javaCodeGenerators { genJava { sourceModules.addAll(files(\"Template1.pkl\", \"Template2.pkl\")) } } } build.gradle.kts pkl { javaCodeGenerators { register(\"genJava\") { sourceModules.addAll(files(\"Template1.pkl\", \"Template2.pkl\")) } } } To compile generated classes together with test code rather than main code, use sourceSet = sourceSets.test. To generate getter methods instead of public final fields, use generateGetters = true. For each declared Java code generator, the Pkl plugin creates an equally named task. Hence, the above generator can be run with: $ ./gradlew genJava For a ready-to-go example with full source code, see codegen-java in the pkl/pkl-examples repository. generateGetters: Property Default: false Example: generateGetters = true Whether to generate private final fields and public getter methods rather than public final fields. preferJavaxInjectAnnotation: Boolean Default: false Example: preferJavaxInjectAnnotation = true Whether to annotate constructor parameters with @javax.inject.Named instead of @org.pkl.config.java.mapper.Named. If true, the generated code will have a compile dependency on javax.inject:javax.inject:1. Common code generation properties: indent: Property Default: \" \" (two spaces) Example: indent = \"\\t\" (one tab) The characters to use for indenting generated source code. outputDir: DirectoryProperty Default: layout.buildDirectory.dir(\"generated/pkl/\") Example: outputDir = layout.projectDirectory.dir(\"src/main/pkl\") The directory where generated classes are placed. The default places generated sources within the build directory of the project, to avoid sources from being committed into the repository on accident. sourceSet: Property Default: sourceSets.main (if it exists; no default otherwise) Example: sourceSet = sourceSets.test The Gradle source set that generated code is compiled together with. For the codegen tasks, the modulePath property defaults to the compilation classpath of this source set, as well as all of the source directories of the resource source directory set of this source set. This setup makes it possible to rely on modules defined in classpath dependencies of your project or in the resources of your project. For projects which apply the idea plugin and are opened in IntelliJ IDEA, this option determines whether generated sources are marked as test sources (if the source set’s name contains the word \"test\") or regular sources (otherwise). generateSpringBootConfig: Property Default: false Example: generateSpringBootConfig = true Whether to generate config classes for use with Spring Boot. Common properties: sourceModules: ListProperty Default: [] Example 1: sourceModules = [\"module1.pkl\", \"module2.pkl\"] Example 2: sourceModules = fileTree(\"config\").include(\"**/*.pkl\") List of Pkl modules which are used for this operation. This property accepts the following types to represent a module: java.net.URI java.io.File java.nio.file.Path java.net.URL java.lang.CharSequence - if the represented string looks like a URI (it contains a scheme), the input is treated as a URI. Otherwise, it is treated as a path. Relative paths are resolved against the project directory. org.gradle.api.file.FileSystemLocation transitiveModules: ConfigurableFileCollection Default: files() (empty collection) Example 1: transitiveModules.from files(\"module1.pkl\", \"module2.pkl\") Example 2: transitiveModules.from fileTree(\"config\").include(\"**/*.pkl\") File paths of modules that are directly or indirectly used by source modules. Setting this option enables correct Gradle up-to-date checks, which ensures that your Pkl tasks are executed if any of the transitive files are modified; it does not affect evaluation otherwise. Including source modules in transitiveModules is permitted but not required. Relative paths are resolved against the project directory. projectDir: DirectoryProperty Default: null Example 1: projectDir = layout.projectDirectory.dir(\"pkl\") Example 2: projectDir.fileValue file(\"/some/absolute/path\") Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If null, this is determined by searching up from the working directory for a directory that contains a PklProject file, until evalRootDir or the file system root is reached. omitProjectSettings: Property Disables loading evaluator settings from the PklProject file. noProject: Property Disables all behavior related to projects. settingsModule: Property Default: null Example: settingsModule = layout.projectDirectory.file(\"mySettings.pkl\") The Pkl settings module to use. This property accepts the same input types as the sourceModules property. If null, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This feature integrates the Kotlin code generator into Gradle builds. To add a Kotlin code generator to the build, add a named configuration block inside pkl.kotlinCodeGenerators: build.gradle pkl { kotlinCodeGenerators { genKotlin { sourceModules.addAll(files(\"Template1.pkl\", \"Template2.pkl\")) } } } build.gradle.kts pkl { kotlinCodeGenerators { register(\"genKotlin\") { sourceModules.addAll(files(\"Template1.pkl\", \"Template2.pkl\")) } } } To compile generated classes together with test code rather than main code, use sourceSet = sourceSets.test. For each declared Kotlin code generator, the Pkl plugin creates an equally named task. Hence the above generator can be run with: $ ./gradlew genKotlin For a ready-to-go example with full source code, see codegen-kotlin in the pkl/pkl-examples repository. (None) Common code generation properties: indent: Property Default: \" \" (two spaces) Example: indent = \"\\t\" (one tab) The characters to use for indenting generated source code. outputDir: DirectoryProperty Default: layout.buildDirectory.dir(\"generated/pkl/\") Example: outputDir = layout.projectDirectory.dir(\"src/main/pkl\") The directory where generated classes are placed. The default places generated sources within the build directory of the project, to avoid sources from being committed into the repository on accident. sourceSet: Property Default: sourceSets.main (if it exists; no default otherwise) Example: sourceSet = sourceSets.test The Gradle source set that generated code is compiled together with. For the codegen tasks, the modulePath property defaults to the compilation classpath of this source set, as well as all of the source directories of the resource source directory set of this source set. This setup makes it possible to rely on modules defined in classpath dependencies of your project or in the resources of your project. For projects which apply the idea plugin and are opened in IntelliJ IDEA, this option determines whether generated sources are marked as test sources (if the source set’s name contains the word \"test\") or regular sources (otherwise). generateSpringBootConfig: Property Default: false Example: generateSpringBootConfig = true Whether to generate config classes for use with Spring Boot. Common properties: sourceModules: ListProperty Default: [] Example 1: sourceModules = [\"module1.pkl\", \"module2.pkl\"] Example 2: sourceModules = fileTree(\"config\").include(\"**/*.pkl\") List of Pkl modules which are used for this operation. This property accepts the following types to represent a module: java.net.URI java.io.File java.nio.file.Path java.net.URL java.lang.CharSequence - if the represented string looks like a URI (it contains a scheme), the input is treated as a URI. Otherwise, it is treated as a path. Relative paths are resolved against the project directory. org.gradle.api.file.FileSystemLocation transitiveModules: ConfigurableFileCollection Default: files() (empty collection) Example 1: transitiveModules.from files(\"module1.pkl\", \"module2.pkl\") Example 2: transitiveModules.from fileTree(\"config\").include(\"**/*.pkl\") File paths of modules that are directly or indirectly used by source modules. Setting this option enables correct Gradle up-to-date checks, which ensures that your Pkl tasks are executed if any of the transitive files are modified; it does not affect evaluation otherwise. Including source modules in transitiveModules is permitted but not required. Relative paths are resolved against the project directory. projectDir: DirectoryProperty Default: null Example 1: projectDir = layout.projectDirectory.dir(\"pkl\") Example 2: projectDir.fileValue file(\"/some/absolute/path\") Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If null, this is determined by searching up from the working directory for a directory that contains a PklProject file, until evalRootDir or the file system root is reached. omitProjectSettings: Property Disables loading evaluator settings from the PklProject file. noProject: Property Disables all behavior related to projects. settingsModule: Property Default: null Example: settingsModule = layout.projectDirectory.file(\"mySettings.pkl\") The Pkl settings module to use. This property accepts the same input types as the sourceModules property. If null, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This features integrates the Pkldoc generator into Gradle builds. To add a Pkldoc generator to the build, add a named configuration block inside pkl.pkldocGenerators: build.gradle pkl { pkldocGenerators { pkldoc { sourceModules.addAll(files(\"doc-package-info.pkl\", \"Template1.pkl\", \"Template2.pkl\")) } } } build.gradle.kts pkl { pkldocGenerators { register(\"pkldoc\") { sourceModules.addAll(files(\"doc-package-info.pkl\",\"Template1.pkl\", \"Template2.pkl\")) } } } For each declared Pkldoc generator, the Pkl plugin creates an equally named task. Hence, the above generator can be run with: $ ./gradlew pkldoc For a ready-to-go example with full source code, see pkldoc in the pkl/pkl-examples repository. The following properties can be configured inside a Pkldoc generator’s configuration block: outputDir: DirectoryProperty Default: layout.buildDirectory.dir(\"pkldoc/\") Example: outputDir = layout.projectDirectory.dir(\"pkl-docs\") The directory where generated documentation is placed. Common properties: sourceModules: ListProperty Default: [] Example 1: sourceModules = [\"module1.pkl\", \"module2.pkl\"] Example 2: sourceModules = fileTree(\"config\").include(\"**/*.pkl\") List of Pkl modules which are used for this operation. This property accepts the following types to represent a module: java.net.URI java.io.File java.nio.file.Path java.net.URL java.lang.CharSequence - if the represented string looks like a URI (it contains a scheme), the input is treated as a URI. Otherwise, it is treated as a path. Relative paths are resolved against the project directory. org.gradle.api.file.FileSystemLocation transitiveModules: ConfigurableFileCollection Default: files() (empty collection) Example 1: transitiveModules.from files(\"module1.pkl\", \"module2.pkl\") Example 2: transitiveModules.from fileTree(\"config\").include(\"**/*.pkl\") File paths of modules that are directly or indirectly used by source modules. Setting this option enables correct Gradle up-to-date checks, which ensures that your Pkl tasks are executed if any of the transitive files are modified; it does not affect evaluation otherwise. Including source modules in transitiveModules is permitted but not required. Relative paths are resolved against the project directory. projectDir: DirectoryProperty Default: null Example 1: projectDir = layout.projectDirectory.dir(\"pkl\") Example 2: projectDir.fileValue file(\"/some/absolute/path\") Directory where the project lives. A project is a directory that contains a PklProject file, which is used to declare package dependencies, as well as common evaluator settings to be applied in the project. If null, this is determined by searching up from the working directory for a directory that contains a PklProject file, until evalRootDir or the file system root is reached. omitProjectSettings: Property Disables loading evaluator settings from the PklProject file. noProject: Property Disables all behavior related to projects. settingsModule: Property Default: null Example: settingsModule = layout.projectDirectory.file(\"mySettings.pkl\") The Pkl settings module to use. This property accepts the same input types as the sourceModules property. If null, ~/.pkl/settings.pkl or defaults specified in the pkl.settings standard library module are used. allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This feature is the Gradle analogy for the project package command in the CLI. It prepares package assets to be published from a project. There are two differences between this feature and the CLI: Input project directories are required (the CLI determines a project from the current working directory if arguments are omitted). Output directory defaults to a path within the build directory. build.gradle pkl { project { packagers { makePackages { projectDirectories.from(file(\"pkl-config/\")) } } } } build.gradle.kts pkl { project { packagers { register(\"makePackages\") { projectDirectories.from(file(\"./\")) } } } } For each declared packager, the Pkl plugin creates an equally named task. Hence, the above packager can be run with: $ ./gradlew makePackages projectDirectories: ConfigurableFileCollection Default: (none) Example: projectDirectories.from(file(\"pkl-config/\"\")) The project directories to create packages for. skipPublishCheck: Property Default: (false) Example: skipPublishCheck.set(true) Skips checking whether a package has already been published with different contents. By default, the packager will check whether a package at the same version has already been published. If the package has been published, it validates that the package’s metadata is identical to the locally generated metadata. outputPath: DirectoryProperty Default: project.getLayout().getBuildDirectory().dir(\"generated/pkl/packages\") The directory to write artifacts to. Accepts the following placeholders: %{name} The name of the package %{version} The version of the package junitReportsDir: DirectoryProperty Default: null Example: junitReportsDir = layout.buildDirectory.dir(\"reports\") Whether and where to generate JUnit XML reports. overwrite: Property Default: false Whether to ignore expected example files and generate them again. Common propeties: allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory. This feature is the Gradle analogy for the project resolve command in the CLI. It takes the dependencies of a project, and writes the resolved versions a file at path PklProject.deps.json, within the root directory of the project. build.gradle pkl { project { resolvers { resolvePklDeps { projectDirectories.from(file(\"pkl-config/\")) } } } } build.gradle.kts pkl { project { resolvers { register(\"resolvePklDeps\") { projectDirectories.from(file(\"./\")) } } } } For each declared resolver, the Pkl plugin creates an equally named task. Hence, the above resolver can be run with: $ ./gradlew resolvePklDeps projectDirectories: ConfigurableFileCollection Default: (none) Example: projectDirectories.from(file(\"pkl-config/\"\")) The project directories to create packages for. Common propeties: allowedModules: ListProperty Default: [\"pkl:\", \"file:\", \"modulepath:\", \"https:\", \"repl:\", \"package:\", \"projectpackage:\"] Example: allowedModules = [\"file:\"] URI patterns that determine which modules can be loaded and evaluated. Patterns are matched against the beginning of module URIs. (File paths have been converted to file: URLs at this stage.) At least one pattern needs to match for a module to be loadable. Both source modules and transitive modules are subject to this check. allowedResources: ListProperty Default: [\"env:\", \"prop:\", \"modulepath:\", \"https:\", \"file:\", \"package:\", \"projectpackage:\"] Example: allowedResources = [\"env:\", \"prop:\"] URL patterns that determine which external resources can be read. Patterns are matched against the beginning of resource URLs. At least one pattern needs to match for a resource to be readable. environmentVariables: MapProperty Default: [:] (note that Gradle default differs from CLI default) Example 1: environmentVariables = [\"MY_VAR_1\": \"myValue1\", \"MY_VAR_2\": \"myValue2\"] Example 2: environmentVariables = System.getenv() Environment variables that can be read by Pkl code with read(\"env:\"). evalRootDir: DirectoryProperty Default: rootProject.layout.projectDirectory Example 1: evalRootDir = layout.projectDirectory.dir(\"pkl-modules\") Example 2: evalRootDir.fileValue file(\"/some/absolute/path\") Root directory for file: modules and resources. If non-null, access to file-based modules and resources is restricted to those located under the root directory. Any symlinks are resolved before this check is performed. evalTimeout: Property Default: null Example: evalTimeout = Duration.ofSeconds(10) Duration after which evaluation of a source module will be timed out. Note that a timeout is treated the same as a program error in that any subsequent source modules will not be evaluated. externalProperties: MapProperty Default: [:] Example: externalProperties = [\"myProp1\": \"myValue1\", \"myProp2\": \"myValue2\"] External properties that can be read by Pkl code with read(\"prop:\"). moduleCacheDir: DirectoryProperty Default: null Example 1: moduleCacheDir = layout.buildDirectory.dir(\"pkl-module-cache\") Example 2: moduleCacheDir.fileValue file(\"/absolute/path/to/cache\") The cache directory for storing packages. If null, defaults to ~/.pkl/cache. noCache: Property Default: false Disable cacheing of packages. modulePath: ConfigurableFileCollection Default: files() (empty collection) Example: modulePath.from files(\"dir1\", \"zip1.zip\", \"jar1.jar\") The directories, ZIP archives, or JAR archives to search when resolving modulepath: URIs. Relative paths are resolved against the project directory.","title":"Gradle Plugin","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/pkl-gradle/index.html","titles":[{"text":"Installation","hash":"installation","id":1},{"text":"Module Evaluation","hash":"module-evaluation","id":2},{"text":"Usage","hash":"usage","id":3},{"text":"Configuration Options","hash":"configuration-options","id":4},{"text":"Tests","hash":"tests","id":5},{"text":"Usage","hash":"usage-2","id":6},{"text":"Java Code Generation","hash":"java-code-gen","id":7},{"text":"Usage","hash":"usage-3","id":8},{"text":"Configuration Options","hash":"configuration-options-2","id":9},{"text":"Kotlin Code Generation","hash":"kotlin-code-gen","id":10},{"text":"Usage","hash":"usage-4","id":11},{"text":"Configuration Options","hash":"configuration-options-3","id":12},{"text":"Pkldoc generation","hash":"pkldoc-generation","id":13},{"text":"Usage","hash":"usage-5","id":14},{"text":"Configuration Options","hash":"configuration-options-4","id":15},{"text":"Project packaging","hash":"project-package","id":16},{"text":"Usage","hash":"usage-6","id":17},{"text":"Configuration Options","hash":"configuration-options-5","id":18},{"text":"Project Resolving","hash":"project-resolving","id":19},{"text":"Usage","hash":"usage-7","id":20},{"text":"Configuration Options","hash":"configuration-options-6","id":21}]},"29":{"id":29,"text":"Initial release.","title":"Pkl 0.25 Release Notes","component":"main","version":"0.25.0-dev","name":"0.25","url":"/main/current/release-notes/0.25.html","titles":[]},"30":{"id":30,"text":"Release notes","title":"Changelog","component":"main","version":"0.25.0-dev","name":"changelog","url":"/main/current/release-notes/changelog.html","titles":[{"text":"0.25.0 (UNRELEASED)","hash":"release-0.25.0","id":1}]},"31":{"id":31,"text":"0.25 Release Notes Changelog","title":"Release Notes","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/release-notes/index.html","titles":[]},"32":{"id":32,"text":"This document serves as the Pkl team’s recommended coding standard for the Pkl configuration language. Use the .pkl extension for all files. Follow these rules for casing the file’s name: Casing Description Example PascalCase It is designed to be used as a template, or used as a class (i.e. imported and instantiated). K8sResource.pkl camelCase It is designed to be used as a value. myDeployment.pkl kebab-case It is designed to be used as a CLI tool. do-convert.pkl Exception: If a file is meant to render into a static configuration file, the filename should match the target file’s name without the extension. For example, config.pkl turns into config.yml. Encode all files using UTF-8. Separate each section of the module header by one blank line. A module header consists of the following clauses, each of which is optional: Module clause amends or extends clause Import clauses module.pkl module com.example.Foo (1) extends \"Bar.pkl\" (2) import \"baz.pkl\" (3) import \"Buz.pkl\" (3) 1 Module clause 2 extends clause 3 Import clause Match the name of the module with the name of the file. MyModule.pkl module MyModule If a module is meant to be published, add a module clause, @ModuleInfo annotation, and doc comments. Modules that do not get published anywhere may omit a module clause. MyModule.pkl /// Used for some type of purpose. (1) @ModuleInfo { minPklVersion = \"0.24.0\" } (2) module MyModule (3) 1 Doc comments 2 @ModuleInfo annotation 3 Module clause A module that doesn’t add new properties shouldn’t use the extends clause. Sort imports sections using natural sorting by their module URI. Relative path imports should be in their own section, separated by a newline. There should be no unused imports. import \"modulepath:/foo.pkl\" import \"package://example.com/mypackage@1.0.0#/foo.pkl\" import \".../my/file/bar2.pkl\" import \".../my/file/bar11.pkl\" Within a module body, define members in this order: Properties Methods Classes and type aliases The amended output property. Exception: local members can be close to their usage. Exception: functions meant to be a class constructor can be next to the class declaration. constructor.pkl function MyClass(_name: String): MyClass = new { name = _name } class MyClass { name: String } If possible, use triple-dot Module URIs to reference ancestor modules instead of multiple ../. good.pkl amends \".../ancestor.pkl\" import \".../ancestor2.pkl\" bad.pkl amends \"../../../ancestor.pkl\" import \"../../../ancestor2.pkl\" Object members (properties, elements, and entries) should be separated by at most one blank line. good.pkl foo = \"bar\" baz = \"buz\" good.pkl foo = \"bar\" baz = \"buz\" bad.pkl foo = \"bar\" baz = \"buz\" Too many lines separate foo and baz. Properties that override an existing property shouldn’t have doc comments nor type annotations, unless the type is intentionally overridden via extends. amends \"myOtherModule.pkl\" foo = \"bar\" Each property definition should have a type annotation and doc comment. Successive definitions should be separated by a blank line. good.pkl /// Denotes something. myFoo: String /// Something else myOtherFoo: String bad.pkl /// Denotes something. myFoo: String /// Something else myOtherFoo: String When initializing a Typed object using new, omit the type. For example, use new {} instead of new Foo {}. This rule does not apply when initializing a property to a subtype of the property’s declared type. good.pkl myFoo: Foo = new { foo = \"bar\" } good.pkl open class Foo {} class Bar extends Foo {} foo: Foo = new Bar {} This is okay because this is meaning to initialize Bar instead of Foo. bad.pkl myFoo1: Foo = new Foo { foo = \"bar\" } (1) myFoo2 = new Foo { foo = \"bar\" } (2) 1 Unnecessary new Foo { …​ } 2 Unless amending/extendinge a module where myFoo2 is already defined, myFoo2 is effectively the unknown type, i.e. myFoo2: unknown. Use doc comments to convey information to users of a module. Use line comments or block comments to convey implementation concerns to authors of a module, or to comment out code. Doc comments should start with a one sentence summary paragraph, followed by additional paragraphs if necessary. Start new sentences on their own line. Add a single space after ///. /// The time alotted for eating lunch. /// /// Note: /// * Hamburgers typically take longer to eat than salad. /// * Pizza gets prepared per-order. /// /// Orders must be placed on-prem. /// See for more details. lunchHours: Duration If a comment relates to a property definition, place it after the property’s doc comments. Add a single space after //. good.pkl /// Designates whether it is zebra party time. // TODO: Add constraints here? partyTime: Boolean A line comment may also be placed at the end of a line, as long as the line doesn’t exceed 100 characters. good.pkl /// Designates whether it is zebra party time. partyTime: Booleean // TODO: Add constraints here? A single-line block comment should have a single space after /* and before */. good.pkl /* Let's have a zebra party */ bad.pkl /*Let's have a zebra party*/ Name classes in PascalCase. good.pkl class ZebraParty {} bad.pkl class zebraParty {} class zebraparty {} Use custom string delimiters to avoid the need for string escaping. good.pkl myString = #\"foo \\ bar \\ baz\"# bad.pkl myString = \"foo \\\\ bar \\\\ baz\" Sometimes, using custom string delimiters makes source code harder to read. For example, the \\# literal reads better using escapes (\"\\\\#\") than using custom string delimimters (##\"\\#\"##). Prefer interpolation to string concatenation. good.pkl greeting = \"Hello, \\(name)\" bad.pkl greeting = \"Hello, \" + name Lines shouldn’t exceed 100 characters. Exceptions: String literals Code snippets within doc comments Use two spaces per indentation level. Members within braces should be indented one level deeper than their parents. foo { bar { baz = \"hi\" } } An assignee that starts after a newline should be indented. good.pkl foo = \"foo\" bar = new { baz = \"baz\" biz = \"biz\" } bad.pkl foo = \"foo\" bar = new { baz = \"baz\" biz = \"biz\" } An assignee that starts on the same line should not be indented. good.pkl foo = new { baz = \"baz\" biz = \"biz\" } bad.pkl foo = new { baz = \"baz\" biz = \"biz\" } if and let bodies that start on their own line should be indented. Child bodies may also be inline, and the else branch of if expressions may be inline of if. good.pkl if (bar) bar else foo good.pkl if (bar) bar else foo good.pkl if (bar) bar else foo good.pkl let (foo = \"bar\") foo.toUpperCase() good.pkl let (foo = \"bar\") foo.toUpperCase() bad.pkl if (bar) bar else foo bad.pkl let (foo = \"bar\") foo.toUpperCase() Exception: A nested if expression within the else branch should have the same indentation level as its parent, and start on the same line as the parent else keyword. good.pkl if (bar) bar else if (baz) baz else foo bad.pkl if (bar) bar else if (baz) baz else foo Indent successive multiline chained method calls. foo() .bar() .baz() .biz() Place operators after the newline, and indent successive lines to the same level. good.pkl foo = bar |> baz |> biz myNum = 1 + 2 + 3 + 4 bad.pkl foo = bar |> baz |> biz myNum = 1 + 2 + 3 + 4 bad.pkl foo = bar |> baz |> biz bad.pkl foo = bar |> baz |> biz Exception: the minus operator must come before the newline, because otherwise it is parsed as a unary minus. good.pkl myNum = 1 - 2 - 3 - 4 bad.pkl myNum = 1 - 2 - 3 - 4 Add a space: amends \"Foo.pkl\" (1) res1 { \"foo\" } (2) res2 = 1 + 2 (3) res3 = res2 as Number (3) res4 = List(1, 2, 3) (4) res5 = if (foo) bar else baz (5) 1 After keywords 2 Before and after braces 3 Around infix operators 4 After a comma 5 Before opening parentheses in control operators (if, for, when are control operators) No spaces are added around the pipe symbol (|) in union types. typealias Foo = \"foo\"|\"bar\"|\"baz\" An object body may be a single line if it only consists of primitive elements, or if it contains two or fewer members. Otherwise, split them into multiple lines. Separate each member of a single line object with a semicolon and a space. good.pkl res1 = new { bar = \"bar\"; baz = \"baz\" } res2 = new { 1; 2; 3; 4; 5; 6 } bad.pkl res1 = new { bar = \"bar\"; baz = \"baz\"; biz = \"biz\"; } (1) res2 = new { 1 2 3 4 5 6 } (2) 1 Too many members and trailing ; 2 No semicolon Multiline objects should have their members separated by at least one line break and at most one blank line. good.pkl res { foo = \"foo\" bar = \"bar\" } res2 { [\"foo\"] = \"foo\" [\"bar\"] = \"bar\" } res3 { \"foo\" \"bar\" } good.pkl res { foo = \"foo\" bar = \"bar\" } res2 { [\"foo\"] = \"foo\" [\"bar\"] = \"bar\" } res3 { \"foo\" \"bar\" } bad.pkl res { foo = \"foo\" bar = \"bar\" (1) } res2 { [\"foo\"] = \"foo\" [\"bar\"] = \"bar\" (1) } res3 { \"foo\" \"bar\" (1) } res4 { foo = \"foo\"; bar = \"bar\" (2) } 1 Too many blank lines between members 2 No line break separating members Put the opening brace on the same line. good.pkl res { foo = \"foo\" bar = \"bar\" } bad.pkl res { foo = \"foo\" bar = \"bar\" } When programmatically creating elements and entries, prefer for generators over using the collection API. Using for generators preserves late binding. good.pkl numbers { 1 2 3 4 } squares { for (num in numbers) { num ** 2 } } bad.pkl numbers { 1 2 3 4 } squares = numbers.toList().map((num) -> num ** 2).toListing()","title":"Pkl Style Guide","component":"main","version":"0.25.0-dev","name":"index","url":"/main/current/style-guide/index.html","titles":[{"text":"1. Files","hash":"files","id":1},{"text":"1.1. Filename","hash":"filename","id":2},{"text":"1.2. File Encoding","hash":"file-encoding","id":3},{"text":"2. Module Structure","hash":"module-structure","id":4},{"text":"2.1. Header","hash":"header","id":5},{"text":"2.1.1. Module name","hash":"module-name","id":6},{"text":"2.1.2. amends vs. extends clause","hash":"amends-vs-extends-clause","id":7},{"text":"2.1.3. Imports","hash":"imports","id":8},{"text":"2.2. Module body","hash":"module-body","id":9},{"text":"2.3. Module URIs","hash":"module-uris","id":10},{"text":"3. Objects","hash":"objects","id":11},{"text":"3.1. Member spacing","hash":"member-spacing","id":12},{"text":"3.2. Overridden properties","hash":"overridden-properties","id":13},{"text":"3.3. New property definitions","hash":"new-property-definitions","id":14},{"text":"3.4. Objects with new","hash":"objects-with-new","id":15},{"text":"4. Comments","hash":"comments","id":16},{"text":"4.1. Doc comments","hash":"doc-comment","id":17},{"text":"4.2. Line comments","hash":"line-comments","id":18},{"text":"4.3. Block comments","hash":"block-comments","id":19},{"text":"5. Classes","hash":"classes","id":20},{"text":"5.1. Class names","hash":"class-names","id":21},{"text":"6. Strings","hash":"strings","id":22},{"text":"6.1. Custom String Delimiters","hash":"custom-string-delimiters","id":23},{"text":"6.2. Interpolation","hash":"interpolation","id":24},{"text":"7. Formatting","hash":"formatting","id":25},{"text":"7.1. Line width","hash":"line-width","id":26},{"text":"7.2. Indentation","hash":"indentation","id":27},{"text":"7.2.1. Members within braces","hash":"members-within-braces","id":28},{"text":"7.2.2. Assignment operator (=)","hash":"assignment-operator","id":29},{"text":"7.2.3. if and let expressions","hash":"if-and-let-expressions","id":30},{"text":"7.2.4. Multiline chained method calls","hash":"multiline-chained-method-calls","id":31},{"text":"7.2.5. Multiline binary operators","hash":"multiline-binary-operators","id":32},{"text":"7.3. Spaces","hash":"spaces","id":33},{"text":"7.4. Object bodies","hash":"object-bodies","id":34},{"text":"7.4.1. Single line","hash":"single-line","id":35},{"text":"7.4.2. Multiline","hash":"multiline","id":36},{"text":"8. Programming Practices","hash":"programming-practices","id":37},{"text":"8.1. Prefer for generators","hash":"prefer-for-generators","id":38}]},"33":{"id":33,"text":"First release","title":"Changelog","component":"spring","version":"0.14.0","name":"changelog","url":"/spring/current/changelog.html","titles":[{"text":"0.14.0 (2024-02-01)","hash":"release-0.14.0","id":1}]},"34":{"id":34,"text":"pkl-spring is a Spring Boot extension for configuring Boot apps with Pkl. Because pkl-spring plugs into Spring Boot’s standard configuration mechanism, configuring your Boot app with Pkl works much the same as configuring it with Java properties or YAML. Raise an Issue","title":"Spring Boot Integration","component":"spring","version":"0.14.0","name":"index","url":"/spring/current/index.html","titles":[{"text":"Contact","hash":"contact","id":1}]},"35":{"id":35,"text":"The pkl-spring library is hosted on Maven Central. pkl-spring requires Java 11 or higher and Spring Boot 2.2 or higher. Note that pkl-spring's POM does not declare a dependency on Spring Boot; this is left to your application. Add this to your build.gradle: dependencies { compile \"org.pkl-lang:pkl-spring:$pklSpringVersion\" } See the badges at the top of this page for the current release and latest snapshot version. Add this to your pom.xml: org.pkl-lang pkl-spring ${pkl.spring.version} See the badges at the top of this page for the current release and latest snapshot version.","title":"Installation","component":"spring","version":"0.14.0","name":"installation","url":"/spring/current/installation.html","titles":[{"text":"Gradle","hash":"gradle","id":1},{"text":"Maven","hash":"maven","id":2}]},"36":{"id":36,"text":"Let’s walk through an example for configuring a Spring Boot application with Pkl. The source code for this example is available on GitHub. The equivalent Kotlin example is here. For background information, see Externalized Configuration, in particular Type-safe Configuration Properties, in the Spring Boot documentation. Define a configuration schema in src/main/resources: AppConfig.pkl // this module name determines the package and // class name of the generated Java config class module samples.boot.AppConfig server: Server class Server { endpoints: Listing } class Endpoint { name: String port: UInt16 } Define an Application Property File next to the schema: application.pkl amends \"modulepath:/appConfig.pkl\" server { endpoints { new { name = \"endpoint1\" port = 1234 } new { name = \"endpoint2\" port = 5678 } } } Use Pkl’s Gradle plugin to generate Java config classes from the schema. Generated classes are placed in generated/configClasses/ and compiled together with your production code. To run the generator directly (which isn’t typically necessary), type ./gradlew configClasses. build.gradle plugins { id \"org.pkl-lang\" version \"$pklVersion\" } pkl { javaCodeGenerators { configClasses { generateGetters.set(true) generateSpringBootConfig.set(true) sourceModules.set(files(\"src/main/resources/AppConfig.pkl\")) } } } Annotate your Boot application class with @ConfigurationPropertiesScan. (Alternatively, explicitly list configuration classes with @EnableConfigurationProperties(…​).) @SpringBootApplication @ConfigurationPropertiesScan public class Application { ... } Inject the generated config classes into your application’s components as appropriate. @Service public class Server { public Server(AppConfig.Server config) { ... } } To get access to the entire configuration, inject the AppConfig class itself: @Service public class Server { public Server(AppConfig config) { ... } } This example demonstrates one way of configuring Spring Boot applications with Pkl. Some possible deviations are: Use multiple config files, for example one per environment. Read config files from the file system instead of the class path. Write config classes by hand instead of generating them. Do not define a config schema. (Config classes cannot be generated in this case.) Use a build tool other than Gradle. Declare a build dependency on pkl-codegen-java. Invoke the code generator’s main method during the build, passing the required arguments. Configure the build to compile generated config classes together with your production code. For more information, see the Java code generator docs.","title":"Usage","component":"spring","version":"0.14.0","name":"usage","url":"/spring/current/usage.html","titles":[]},"37":{"id":37,"text":"","title":"Highlights","component":"intellij","version":"0.25.8","name":"highlights","url":"/intellij/current/highlights.html","titles":[{"text":"Code Completion (Config Structure)","hash":"code-completion-config-structure","id":1},{"text":"Code Completion (Module URIs)","hash":"code-completion-module-uris","id":2},{"text":"Navigation","hash":"navigation","id":3},{"text":"Go to Class/Symbol","hash":"go-to-classsymbol","id":4},{"text":"Name Checking","hash":"name-checking","id":5},{"text":"Type Checking","hash":"type-checking","id":6},{"text":"Constraint Checking","hash":"constraint-checking","id":7},{"text":"Regex Checking","hash":"regex-checking","id":8},{"text":"Type Inference","hash":"type-inference","id":9}]},"38":{"id":38,"text":"The IntelliJ plugin provides Pkl language support for the IntelliJ Platform (IntelliJ IDEA, GoLand, PyCharm, etc.). It requires IntelliJ 2023.1 or higher and supports Pkl 0.24 and higher. Installation Highlights Features","title":"IntelliJ Plugin","component":"intellij","version":"0.25.8","name":"index","url":"/intellij/current/index.html","titles":[]},"39":{"id":39,"text":"Select Preferences Plugins ⚙ Manage Plugin Repositories. Add https://pkl-lang.org/pkl-intellij/updatePlugins.xml to the list of custom plugin repositories. Select Preferences Plugins Marketplace. Search for and install the pkl plugin. You will be notified when a new plugin version is available.","title":"Installation","component":"intellij","version":"0.25.8","name":"installation","url":"/intellij/current/installation.html","titles":[]},"40":{"id":40,"text":"When pressing Enter, the next line is indented automatically. Typing an opening delimiter such as { or \" automatically inserts the corresponding closing delimiter. Use Code Comment with Line/Block Comment to comment or uncomment code. View Quick Definition View Quick Documentation View Parameter Info View Type Info View Context Info Code completion is supported for: config structure foo { ba } module, type, property, and method references import \"pkl:math\" pi = ma name: Str name2 = na reversed = name.rev module URIs in amends, extends, and import clauses amends \"\" string literals with \"enum\" types verb: \"GET\"|\"PUT\"|\"POST\" = \"p\"","title":"Code Editing","component":"intellij","version":"0.25.8","name":"code-editing","url":"/intellij/current/features/code-editing.html","titles":[{"text":"General","hash":"general","id":1},{"text":"View Options","hash":"view-options","id":2},{"text":"Code Completion","hash":"code-completion","id":3}]},"41":{"id":41,"text":"Collapse and expand object and class definitions by clicking the icons in the gutter.","title":"Code Folding","component":"intellij","version":"0.25.8","name":"code-folding","url":"/intellij/current/features/code-folding.html","titles":[]},"42":{"id":42,"text":"Select Code Reformat Code to reformat existing code. Select Preferences Editor Code Style Pkl to customize formatting options.","title":"Code Formatting","component":"intellij","version":"0.25.8","name":"code-formatting","url":"/intellij/current/features/code-formatting.html","titles":[]},"43":{"id":43,"text":"The following code navigation features are supported: Navigate Class [1] Navigate Symbol [1] Navigate Declaration or Usages Navigate Type Declaration Navigate File Structure Edit Find Find Usages [2] Navigate Declaration can also be used on module URIs of amends, extends, or import clauses. The following URI schemes are supported: file://foo/bar.pkl A module on the local file system. pkl:json A Pkl standard library module. If a pkl-core or pkl-config-java-all Jar is present on the class path of the current IntelliJ module, the standard library module contained in that Jar is used. Otherwise, the standard library module bundled with the Pkl IntelliJ plugin is used. modulepath:/foo/bar.pkl A module on the class path of the current IntelliJ module. modulepath:/foo/bar.pkl maps to class path resource foo/bar.pkl. package://example.com/package@1.0.0#/bar.pkl A module published within a package. https://example.com/foobar.pkl A module loaded over HTTPS. foo/bar.pkl A module resolved relative to the originating module. If the originating module is located under an IntelliJ source root, the referenced module is resolved as modulepath: module. Otherwise, the referenced module is resolved as file: module. Except for https: URIs, all of the above URIs support code completion. 1. Currently only for Pkl standard library. 2. Currently limited to Pkl files located under a source root.","title":"","component":"intellij","version":"0.25.8","name":"code-navigation","url":"/intellij/current/features/code-navigation.html","titles":[{"text":"Code Navigation","hash":"code-navigation","id":1},{"text":"Module URIs","hash":"module-uris","id":2}]},"44":{"id":44,"text":"Select Refactor Rename…​ to rename any of the following: class method property method parameter lambda parameter object body parameter let variable for variable","title":"Code Refactoring","component":"intellij","version":"0.25.8","name":"code-refactoring","url":"/intellij/current/features/code-refactoring.html","titles":[]},"45":{"id":45,"text":"The following errors are reported: Syntax errors Duplicate property definitions Recursive property references","title":"Code Validation","component":"intellij","version":"0.25.8","name":"code-validation","url":"/intellij/current/features/code-validation.html","titles":[]},"46":{"id":46,"text":"Syntax Highlighting Automatic syntax highlighting and checking. Code Editing All the basics. Extensive auto-completion support. Code Folding Collapse and expand object and class definitions. Code Formatting Reformat existing code. Code Navigation Extensive navigation support. Code Validation Find errors quickly. Jump to Error Click a stack trace URL to jump to the error location in IntelliJ.","title":"Features","component":"intellij","version":"0.25.8","name":"index","url":"/intellij/current/features/index.html","titles":[]},"47":{"id":47,"text":"Navigate from a stack trace to the error location in IntelliJ. Create or edit ~/.pkl/settings.pkl to contain: amends \"pkl:settings\" editor = Idea Pkl stack traces now contain idea:// URLs: at prod#pod.volumeRoot (idea://open?file=/prod.pkl&line=1) Double-click a URL while holding down the Command key to navigate to the error location in IntelliJ.","title":"Jump To Error","component":"intellij","version":"0.25.8","name":"jump-to-error","url":"/intellij/current/features/jump-to-error.html","titles":[]},"48":{"id":48,"text":"Code syntax is automatically checked and highlighted as you type.","title":"Syntax Highlighting","component":"intellij","version":"0.25.8","name":"syntax-highlighting","url":"/intellij/current/features/syntax-highlighting.html","titles":[]},"49":{"id":49,"text":"","title":"Changelog","component":"vscode","version":"0.11.0","name":"changelog","url":"/vscode/current/changelog.html","titles":[{"text":"0.15.0 (Unreleased)","hash":"0-15-0-unreleased","id":1}]},"50":{"id":50,"text":"The VS Code extension provides Pkl language support for Visual Studio Code. Follow installation instructions and check out the feature overview. Review the changelog for the latest changes.","title":"VS Code Extension","component":"vscode","version":"0.11.0","name":"index","url":"/vscode/current/index.html","titles":[]},"51":{"id":51,"text":"The extension is distributed as a Visual Studio Extension (.vsix) file. To install the extension, download the latest version of the .vsix file from https://github.com/apple/pkl-vscode/releases/new follow Install from a VSIX in the VS Code docs. To confirm that the installation succeeded, open a .pkl file and verify that Syntax Highlighting works.","title":"Installation","component":"vscode","version":"0.11.0","name":"installation","url":"/vscode/current/installation.html","titles":[]},"52":{"id":52,"text":"Let the editor take care of indentation and closing brackets.","title":"Bracket Matching","component":"vscode","version":"0.11.0","name":"bracket-matching","url":"/vscode/current/features/bracket-matching.html","titles":[]},"53":{"id":53,"text":"Insert a code snippet by typing its shortcut and pressing Tab. cla Class fun Function fn Function (short) → Lambda ame amends ext extends imp import if if-else thr throw","title":"Code Snippets","component":"vscode","version":"0.11.0","name":"code-snippets","url":"/vscode/current/features/code-snippets.html","titles":[{"text":"Supported Snippets","hash":"supported-snippets","id":1}]},"54":{"id":54,"text":"Syntax Highlighting Have your code highlighted as you type. Bracket Matching Let the editor take care of indentation and closing brackets. Code Folding Collapse and expand object and class definitions. Code Snippets Insert a code snippet by typing its shortcut and pressing Tab.","title":"Features","component":"vscode","version":"0.11.0","name":"index","url":"/vscode/current/features/index.html","titles":[]},"55":{"id":55,"text":"Have your code highlighted as you type.","title":"Syntax Highlighting","component":"vscode","version":"0.11.0","name":"syntax-highlighting","url":"/vscode/current/features/syntax-highlighting.html","titles":[]},"56":{"id":56,"text":"Initial build for open source plugin","title":"Changelog","component":"neovim","version":"0.6.0","name":"changelog","url":"/neovim/current/changelog.html","titles":[{"text":"0.6.0 (2024-02-01)","hash":"release-0.6.0","id":1}]},"57":{"id":57,"text":"The Neovim plugin provides language suppport for authoring Pkl files in neovim. Follow the installation instructions and check out the feature overview. Standard vim is not supported because it does not support syntax highlighting via tree-sitter.","title":"Neovim Plugin","component":"neovim","version":"0.6.0","name":"index","url":"/neovim/current/index.html","titles":[]},"58":{"id":58,"text":"This plugin requires Neovim version 0.5 or higher. Install nvm-treesitter along side this plugin using your favorite plugin manager. Here is a sample init.vim file using vim-plug. To complete the setup, you will need to run :PlugInstall, then restart neovim. call plug#begin() Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'} Plug 'https://github.com/apple/pkl-neovim.git' call plug#end() \" The below is required for enabling the tree-sitter syntax engine, which is used by pkl-neovim. lua <<EOF local hasConfigs, configs = pcall(require, \"nvim-treesitter.configs\") if hasConfigs then configs.setup { ensure_installed = \"pkl\", highlight = { enable = true, -- false will disable the whole extension }, indent = { enable = true } } end EOF","title":"Installation","component":"neovim","version":"0.6.0","name":"installation","url":"/neovim/current/installation.html","titles":[]},"59":{"id":59,"text":"Collapse and expand object and class definitions.","title":"Code Folding","component":"neovim","version":"0.6.0","name":"code-folding","url":"/neovim/current/features/code-folding.html","titles":[]},"60":{"id":60,"text":"Pkl-neovim provides support for code snippets. To use, ensure either UltiSnips or snipMate is installed by following their install instructions. cla Class fun Function fn Function (short) → Lambda ame amends ext extends imp import if if-else thr throw","title":"Code Snippets","component":"neovim","version":"0.6.0","name":"code-snippets","url":"/neovim/current/features/code-snippets.html","titles":[{"text":"Supported Snippets","hash":"supported-snippets","id":1}]},"61":{"id":61,"text":"Syntax Highlighting Have your code highlighted as you type. Code Folding Collapse and expand object and class definitions. Code Snippets Insert a code snippet by typing its shortcut.","title":"Features","component":"neovim","version":"0.6.0","name":"index","url":"/neovim/current/features/index.html","titles":[]},"62":{"id":62,"text":"Have your code highlighted as you type.","title":"Syntax Highlighting","component":"neovim","version":"0.6.0","name":"syntax-highlighting","url":"/neovim/current/features/syntax-highlighting.html","titles":[]},"63":{"id":63,"text":"Initial library release","title":"Changelog","component":"go","version":"0.5.0","name":"CHANGELOG","url":"/go/current/CHANGELOG.html","titles":[{"text":"0.5.0 (2024-02-01)","hash":"release-0.5.0","id":1}]},"64":{"id":64,"text":"Pkl code may turn into Go code by way of code generation. Code generation is done through the pkl-gen-go binary. To install: go install github.com/apple/pkl-go/cmd/pkl-gen-go@latest Once installed, Go may be generated from Pkl: pkl-gen-go config/AppConfig.pkl Options may be provided to the code generator either using CLI flags, or using a settings file. The settings file is a Pkl file that amends module package://pkl.pkl-lang.org/pkl-go/pkl.golang@#/GeneratorSettings.pkl. By default, the code generator will look for a generator-settings.pkl file residing in the current working directory. If found, it is used to configure the code generator. The settings file may also be set using the --generator-settings flag. The base path setting determines the relative path in which files get written to the working directory. It also acts as a filter to skip codegen for any modules that are external to the project. For example, if a Pkl module corresponds to Go package github.com/myorg/myproject/appconfig, and the base path is github.com/myorg/myproject, the generated files are placed into output directory appconfig/. If a base path is not explicitly set, pkl-gen-go will also look for a go.mod file in the current working directory and use the Go module name as the base path. If the base path cannot be determined, the full package path is written to the current working directory. The base path may be set in the settings file, and also via the --base-path CLI flag. If the determined package name is not prefixed by the base path, it is skipped from code generation. During codegen, the generator requires a mapping from a Pkl module name to a Go package name. In normal cases, this should be provided using the @go.Package annotation. However, there are times when this is infeasible, for example, if the Pkl module is external to the project. For these situations, mappings can be provided using the packageMappings property in the settings file, or using the --mapping CLI flag. By default, all struct fields receive a pkl tag. Additional tags can be configured either on a per-property basis, or globally for all properties. To configure tags on a per-property basis, use the @go.Field annotation on a property. To configure tags globally for all properties, use the structTags property the generator settings file. Here is an example for setting struct tags for a single property: @go.Field { structTags { [\"toml\"] = \"%{name},omitempty\" (1) } } firstName: String 1 Add toml:\"firstName,omitempty\" as a struct tag To share struct tag settings across multiple properties, define a child class of go.Field. class TomlField extends go.Field { structTags { [\"toml\"] = \"%{name},omitempty\" } } @TomlField firstName: String @TomlField lastName: String The below table describes how Pkl types are mapped into Go types. Pkl type Go type Null nil Boolean bool String string Int int Int8 int8 Int16 int16 Int32 int32 UInt uint UInt8 uint8 UInt16 uint16 UInt32 uint32 Float float64 Number float64 List []T Listing []T Map map[K]V Mapping map[K]V Set map[T]struct{} Pair *pkl.Pair[A, B] Dynamic *pkl.Object DataSize *pkl.DataSize Duration *pkl.Duration IntSeq *pkl.IntSeq Class [1]. *pkl.Class TypeAlias [1]. *pkl.TypeAlias Any any unknown any Unions (A|B|C) any [2] pkl.Class, pkl.TypeAlias, pkl.IntSeq and pkl.Pair only exist for compatibilty purposes because they are possible Pkl runtime values. Classes turn into a variation of structs and interfaces, depending on inheritance. Interfaces get generated because Go cannot model polymorphism with structs alone (e.g. a value that is a Dog struct is not assignable when an Animal struct is expected). When generating interfaces, a getter is generated for every property by prefixing Get to the property name. The below table describes how classes get generated. Pkl class Go interface Go struct class Person type Person struct open class Person type Person interface type PersonImpl struct abstract class Person type Person interface class Person extends Being type Person interface [3] type PersonImpl struct [4] In the case of inheritance, the parent’s struct and interface are embedded. If a typealias is defined as a union of string literals, it is turned into a new type backed by string. Each member of the union is generated as its own constant. The new type is placed into a subpackage of the module’s mapped Go package. For example, the following Pkl code: typealias City = \"San Francisco\"|\"Cupertino\"|\"London\" Turns into something like this: package city type City string const ( SanFrancisco City = \"San Francisco\" Cupertino City = \"Cupertino\" London City = \"London\" ) If the names of the determined constants conflicts due to normalization rules, an enum is not generated, and a string type is instead inlined into the usage locations. If a typealias isn’t a union of string literals, its resolved type is inlined into the usage locations. The Pkl type nothing is ignored when a member of a union. Therefore, typealias City = nothing|\"San Francisco\"|\"Cupertino\"|\"London\" is still considered an enum. When turning Pkl names into Go names, the code generator follows these rules: Any non-letter and non-digit characters get stripped, and each proceding letter gets capitalized. If a name does not start with a latin alphabet character, prefix with N. Capitalize so they get exported. As a result, it is possible that two names collide and turn into the same Go name. To resolve these conflicts, the @go.Name annotation must be used on at least one of these declaractions so the resulting names are distinct. For example: @go.Name { value = \"MyCoolApplication\" } class My_Application class MyApplication 1. The runtime value, not an instance 2. Unions of string literals turn into enums if defined via a typealias. For reference, see enums. 3. interface Being is embedded 4. struct BeingImpl is embedded","title":"Code generation","component":"go","version":"0.5.0","name":"codegen","url":"/go/current/codegen.html","titles":[{"text":"Running code generation","hash":"running-code-generation","id":1},{"text":"Configuring the code generator","hash":"configuring-the-code-generator","id":2},{"text":"Settings file","hash":"settings-file","id":3},{"text":"Base path","hash":"base-path","id":4},{"text":"Package mappings","hash":"package-mappings","id":5},{"text":"Struct tags","hash":"struct-tags","id":6},{"text":"How Pkl is turned into Go","hash":"how-pkl-is-turned-into-go","id":7},{"text":"Basic types","hash":"basic-types","id":8},{"text":"Classes","hash":"classes","id":9},{"text":"Enums","hash":"enums","id":10},{"text":"Resolving name conflicts","hash":"name-conflicts","id":11}]},"65":{"id":65,"text":"pkl-go provides a rich API for evaluating Pkl files in Go via pkl.Evaluator. It can be configured with custom readers, have its own security settings, control external property inputs, and more. Evaluation occurs by spawning the pkl cli as a child process, and communicates via message passing. There are two methods for initializing a pkl.Evaluator: pkl.NewEvaluator pkl.EvaluatorManager.NewEvaluator These two constructors are distinguished by how they manage the lifecycle of the underlying pkl child process. pkl.NewEvaluator will spawn a child process per-evaluator, whereas pkl.EvaluatorManager.NewEvalutor will spawn a child process for the lifetime of the evaluator manager. For most use-cases, it is sufficient to use the pkl.NewEvaluator constructor. If multiple evaluators are desired, for example, to maintain separate caches or to have different settings, the evaluator manager should be used. Go packages generated from Pkl modules may be evaluated simply through the generated LoadFromPath and Load methods. For example, a generated package github.com/myapp/myteam/appconfig can be used for evaluation like so: package main import ( \"context\" \"fmt\" \"github.com/apple/pkl-go/pkl\" \"github.com/myapp/myteam/appconfig\" (1) ) func main() { cfg, err := appconfig.LoadFromPath(context.Background(), \"myconfig.pkl\") if err != nil { panic(err) } fmt.Printf(\"Got config: %+v\\n\", cfg) } 1 The generated package Pkl modules may be evaluated directly into Go structs without using code generation. For example, given the Pkl module: foo.pkl foo: String = \"hello\" bar: Int = 5 This may be evaluated into a Go struct via pkl.Evaluator.EvaluateModule. To run evaluation, pass a struct pointer that matches the structure of the module. If the Go property name doesn’t match the Pkl name, the pkl struct tag should be used to identify the Pkl property name. Example Go: package main import ( \"context\" \"fmt\" \"github.com/apple/pkl-go/pkl\" ) type MyConfig struct { Foo string `pkl:\"foo\"` Bar int `pkl:\"bar\"` } func main() { evaluator, err := pkl.NewEvaluator(context.Background(), pkl.PreconfiguredOptions) if err != nil { panic(err) } defer evaluator.Close() var cfg MyConfig if err = evaluator.EvaluateModule(context.Background(), pkl.FileSource(\"foo.pkl\"), &cfg); err != nil { panic(err) } fmt.Printf(\"Got module: %+v\", cfg) } In addition to modules, an evaluator may also evaluate a module’s output.text and output.files properties. This mimick the behavior of the CLI. Take this Pkl module: foo.pkl foo = \"foo\" bar = \"bar\" The textual output of this module may be evaluated via Evaluator.EvaluateOutputText. main.go package main import ( \"context\" \"fmt\" \"github.com/apple/pkl-go/pkl\" ) func main() { evaluator, err := pkl.NewEvaluator(context.Background(), pkl.PreconfiguredOptions) if err != nil { panic(err) } defer evaluator.Close() textOutput, err := evaluator.EvaluateOutputText(context.Background(), pkl.FileSource(\"foo.pkl\")) fmt.Println(textOutput) } In addition to evaluating modules and textual/file output, any arbitrary expression may be evaluated within a module. In fact, the textual and file output of a module are implemented in terms of evaluating an expression. main.go package main import ( \"context\" \"fmt\" \"github.com/apple/pkl-go/pkl\" ) func main() { evaluator, err := pkl.NewEvaluator(context.Background(), pkl.PreconfiguredOptions) if err != nil { panic(err) } defer evaluator.Close() var res string err = evaluator.EvaluateExpression( context.Background(), pkl.TextSource(\"foo = 5\"), (1) `\"foo is \\(foo)\"`, (2) &res, ) if err != nil { panic(err) } fmt.Println(res) // prints \"foo is 5\" } 1 TextSource causes Pkl to evaluate foo = 5 as a module 2 The expression to be evaluated pkl-go provides pkl.PreconfiguredOptions, which serves as a simple way to construct an evaluator with sensible defaults. Additional options may be provided via the functional options pattern: pkl.NewEvaluator(context.Background(), pkl.PreconfiguredOptions, func(opts *EvaluatorOptions) { opts.Logger = pkl.StderrLogger (1) }) 1 Log warn/trace messages to stderr It is possible to use a custom reader for resources and modules by implementing the pkl.ResourceReader and pkl.ModuleReader interfaces. Custom readers must identify the scheme that they are responsible for reading via the Scheme() method. For example, a reader may be registered to resolve the Pkl expression read(\"secret:FOO\") by registering \"secret\" as its scheme. If a resource matches a scheme identified by a custom reader, its Read() method will be called to retrieve the contents.","title":"Evaluator API","component":"go","version":"0.5.0","name":"evaluation","url":"/go/current/evaluation.html","titles":[{"text":"Initializing an evaluator","hash":"initializing-an-evaluator","id":1},{"text":"Evaluating modules","hash":"evaluating-modules","id":2},{"text":"With code generation","hash":"with-code-generation","id":3},{"text":"Without code generation","hash":"without-code-generation","id":4},{"text":"Alternative evaluation modes","hash":"alternative-evaluation-modes","id":5},{"text":"Textual and multiple file output","hash":"textual-and-multiple-file-output","id":6},{"text":"Expressions","hash":"expressions","id":7},{"text":"Evaluator options","hash":"evaluator-options","id":8},{"text":"Custom readers","hash":"custom-readers","id":9}]},"66":{"id":66,"text":"Pkl provides a rich integration with Go. Our integration allows you to embed the Pkl runtime into your Go program, and also provides code generation from Pkl source code. To get started, reference the Quickstart guide. Alternatively, use our example project as a way to get bootstrapped and on your way. package main import ( \"context\" \"fmt\" \"github.com/myteam/myapp/myconfig\" ) func main() { cfg, err := myconfig.LoadFromPath(context.Background(), \"config.pkl\") if err != nil { panic(err) } fmt.Printf(\"I'm running on host %s\\n\", cfg.Host) }","title":"Integration with Go","component":"go","version":"0.5.0","name":"index","url":"/go/current/index.html","titles":[]},"67":{"id":67,"text":"These steps will get you up and going with using Pkl and Go. Your project will need to include pkl-go as a dependency: go get github.com/apple/pkl-go If you are using code generation, install the pkl-gen-go binary, either via go install or with a direct download. The binaries are available as assets on our GitHub release. # via go install go install github.com/apple/pkl-go/cmd/pkl-gen-go@v0.5.0 # via curl curl -o pkl-gen-go github.com/apple/pkl-go/releases/download/v0.5.0/pkl-gen-go-macos.bin chmod +x pkl-gen-go Finally, the pkl CLI needs to be installed on the machine: curl -o pkl https://github.com/apple/pkl/releases/download/0.25.0/pkl-cli-macos-0.25.0.bin chmod +x pkl For more additional CLI installation instructions, see here. Create a new Pkl file in the directory of your choice, and annotate it with the @go.Package annotation. The name property in the annotation is the Go import path for the generated configuration file. In this example, the file is placed into pkl/AppConfig.pkl, and the Go package name for this Pkl module is github.com/myorg/myteam/appconfig. pkl/AppConfig.pkl @go.Package { name = \"github.com/myorg/myteam/appconfig\" } module myorg.myteam.AppConfig import \"package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.5.0#/go.pkl\" (1) /// The hostname of this application. host: String /// The port to listen on. port: UInt16 1 Used for the @go.Package annotation. With a schema defined, generate Go source code for it. Code generation is done via the pkl-gen-go CLI. To install: go install github.com/apple/pkl-go/cmd/pkl-gen-go@latest In our example, Go sources can be generated using the following command: pkl-gen-go pkl/AppConfig.pkl --base-path github.com/myorg/myteam The --base-path causes the code generator to place the Go source files in a relative path. If the --base-path argument is omitted, the code generator will also look for a go.mod file for the base path, as well as within the settings file. In this example, the Go package name of our Pkl module is github.com/myorg/myteam/appconfig, and the base path is github.com/myorg/myteam. Therefore, the generated Go files will be placed into the appconfig directory. For more details on how to control code generation, consult pkl-gen-go --help. With the above scaffolding set up, evaluate Pkl configuration data in Go. First, define some configuration that uses the Pkl schema. In our example, we create a file at path pkl/local/appConfig.pkl. We imagine that we are defining configuration for a server running in a local environment, and would likewise place other environments in sibling directorys; e.g. pkl/int/appConfig.pkl and pkl/prod/appConfig.pkl. pkl/local/appConfig.pkl amends \"../AppConfig.pkl\" host = \"localhost\" port = 5939 Once defined, evaluate the Pkl module into Go. cmd/main.go package main import ( \"context\" \"fmt\" \"github.com/myorg/myteam/appconfig\" ) func main() { cfg, err := appconfig.LoadFromPath(context.Background(), \"pkl/local/appConfig.pkl\") if err != nil { panic(err) } fmt.Printf(\"I'm running on host %s\\n\", cfg.Host) }","title":"Quickstart","component":"go","version":"0.5.0","name":"quickstart","url":"/go/current/quickstart.html","titles":[{"text":"1. Install dependencies","hash":"1-install-dependencies","id":1},{"text":"2. Define a Pkl schema","hash":"2-define-a-pkl-schema","id":2},{"text":"3. Generate Go source code","hash":"3-generate-go-source-code","id":3},{"text":"4. Evaluate Pkl configuration data in Go","hash":"4-evaluate-pkl-configuration-data-in-go","id":4}]},"68":{"id":68,"text":"Initial library release","title":"Changelog","component":"swift","version":"0.1.0","name":"CHANGELOG","url":"/swift/current/CHANGELOG.html","titles":[{"text":"0.1.0 (2023-12-15)","hash":"release-0.1.0","id":1}]},"69":{"id":69,"text":"Pkl code may turn into Swift code by way of code generation. Code generation is done through the pkl-gen-swift binary. For installation instructions, consult the codegen section of the quickstart. Once installed, Swift may be generated from Pkl: pkl-gen-swift pkl/AppConfig.pkl -o Sources/MyProject/Generated/ The below table describes how Pkl types are mapped into Swift types. Pkl type Swift type Boolean Bool String String Int Int Int8 Int8 Int16 Int16 Int32 Int32 UInt UInt UInt8 UInt8 UInt16 UInt16 UInt32 UInt32 Float Float64 Number Float64 List [T] Listing [T] Map [K: V] Mapping [K: V] Set Set Pair Not supported Dynamic Not supported DataSize PklSwift.DataSize Duration PklSwift.Duration IntSeq Not supported Class Not supported TypeAlias Not supported Any AnyHashable? unknown AnyHashable? Unions (A|B|C) AnyHashable? [1] Classes turn into a variation of structs and protocols, depending on inheritance. Protocols get generated because Swift cannot model polymorphism with structs alone (e.g. a value that is a Dog struct is not assignable when an Animal struct is expected). The below table describes how classes get generated. Pkl class Swift protocol Swift struct class Person struct Person open class Person protocol Person struct PersonImpl: Person abstract class Person protocol Person class Person extends Being struct Person: Being [2] Classes with recursive property types will generate an invalid struct. This is a known limitation of Swift. If a typealias is defined as a union of types, it is turned into a Swift enum. Each alternative in the union becomes an enum member. For example, the following Pkl code: typealias City = \"San Francisco\"|\"Cupertino\"|\"London\" Turns into something like this: enum City: String, CaseIterable, Decodable, Hashable { case sanFrancisco = \"San Francisco\" case cupertino = \"Cupertino\" case london = \"London\" } All other typealiases that aren’t unions turn into Swift typealiases. When turning Pkl names into Swift names, the code generator follows these rules: Any non-letter and non-digit characters get stripped Each preceding letter gets capitalized. As a result, it is possible that two names collide and turn into the same Swift name. To resolve these conflicts, the @swift.Name annotation must be used on at least one of these declarations so the resulting names are distinct. For example: import \"package://pkg.pkl-lang.org/pkl-swift/pkl.swift@0.1.0#/swift.pkl\" @swift.Name { value = \"MyCoolApplication\" } class My_Application class MyApplication 1. To represent unions as enums, they must be assigned to a typealias. For reference, see enums. 2. all properties from class Being are added to this struct","title":"Code generation","component":"swift","version":"0.1.0","name":"codegen","url":"/swift/current/codegen.html","titles":[{"text":"Running code generation","hash":"running-code-generation","id":1},{"text":"How Pkl is turned into Swift","hash":"how-pkl-is-turned-into-swift","id":2},{"text":"Basic types","hash":"basic-types","id":3},{"text":"Classes","hash":"classes","id":4},{"text":"Enums","hash":"enums","id":5},{"text":"Resolving name conflicts","hash":"name-conflicts","id":6}]},"70":{"id":70,"text":"pkl-swift provides a rich API for evaluating Pkl files in Swift via PklSwift.Evaluator. It can be configured with custom readers, have its own security settings, control external property inputs, and more. Evaluation occurs by spawning the pkl cli as a child process, and communicates via message passing. There are two methods for interacting with PklSwift.Evaluator: PklSwift.withEvaluator(options:_:) PklSwift.EvaluatorManager.withEvaluator(options:_:) These two methods are distinguished by how they manage the lifecycle of the underlying pkl child process. PklSwift.withEvaluator(options:_:) will spawn a child process per-evaluator, whereas PklSwift.EvaluatorManager.withEvaluator(options:_:) will spawn a child process for the lifetime of the evaluator manager. For most use cases, it is sufficient to use PklSwift.withEvaluator(options:_:). If multiple evaluators are desired, for example, to maintain separate caches or to have different settings, the evaluator manager should be used. Swift structs generated from Pkl modules may be evaluated simply through the generated loadFrom(source:) and loadFrom(evaluator:source:) methods. For example, a Pkl module can be evaluated into a generated struct like so: @main struct Main { static func main() async throws { let config = try await AppConfig.loadFrom(source: .path(\"myconfig.pkl\")) print(\"Got config: \\(config)\") } } Pkl modules may be evaluated directly into Swift structs without using code generation. For example, given the Pkl module: foo.pkl foo: String = \"hello\" bar: Int = 5 A Swift struct can be created matching the shape of the Pkl module. The Swift module must be Decodable. foo.swift struct Foo: Decodable { let foo: String let bar: Int } Then, provide Foo.self to the evaluateModule method: let result = try await withEvaluator { evaluator in try await evaluator.evaluateModule(source: .path(\"foo.pkl\"), as: Foo.self) } If the Swift property name doesn’t match the Pkl name, create a nested CodingKeys enum that describes how Swift names turn into Pkl names. For more details, consult the Swift documentation. struct Foo: Decodable { let myFoo: String let myBar: Innt enum CodingKeys: String, CodingKey { case myFoo = \"foo\" case myBar = \"bar\" } } In addition to modules, an evaluator may also evaluate a module’s output.text and output.files properties. This mimics the behavior of the CLI. Take this Pkl module: foo.pkl foo = \"foo\" bar = \"bar\" The textual output of this module may be evaluated via PklSwift.Evaluator.evaluateOutputText(source:). main.swift @main struct Main { static func main() async throws { let textOutput = try await withEvaluator { evaluator in try await evaluator.evaluateOutputText(source: .path(\"my/module.pkl\")) } print(textOutput) } } In addition to evaluating modules and textual/file output, any arbitrary expression may be evaluated within a module. In fact, the textual and file output of a module are implemented in terms of evaluating an expression. main.swift @main struct Main { static func main() async throws { let res = try await withEvaluator { evaluator in try await evaluator.evaluateExpression( source: .text(\"foo = 5\"), (1) expression: \"foo + 10\", (2) as: Int.self (3) ) } print(\"foo is \\(res)\") // prints \"foo is 15\" } } 1 .text(\"foo = 5\") causes Pkl to evaluate a synthetic module whose contents are foo = 5. 2 The expression to be evaluated. 3 The expression’s result type. An evaluator is configured via options on PklSwift.EvaluatorOptions. A sensible default set of options is provided on PklSwift.EvaluatorOptions.preconfigured. Alternatively, they can be built from empty by starting with PklSwift.EvaluatorOptions.empty. It is possible to use a custom reader for resources and modules by implementing the PklSwift.ResourceReader and PklSwift.ModuleReader protocols. Custom readers must identify the scheme that they are responsible for reading by setting the scheme field. For example, a reader may be registered to resolve the Pkl expression read(\"secret:FOO\") by registering \"secret\" as its scheme. If a resource matches a scheme identified by a custom reader, its read() method will be called to retrieve the contents.","title":"Evaluator API","component":"swift","version":"0.1.0","name":"evaluation","url":"/swift/current/evaluation.html","titles":[{"text":"Using evaluators","hash":"using-evaluators","id":1},{"text":"Evaluating modules","hash":"evaluating-modules","id":2},{"text":"With code generation","hash":"with-code-generation","id":3},{"text":"Without code generation","hash":"without-code-generation","id":4},{"text":"Alternative evaluation modes","hash":"alternative-evaluation-modes","id":5},{"text":"Textual and multiple file output","hash":"textual-and-multiple-file-output","id":6},{"text":"Expressions","hash":"expressions","id":7},{"text":"Evaluator options","hash":"evaluator-options","id":8},{"text":"Custom readers","hash":"custom-readers","id":9}]},"71":{"id":71,"text":"","title":"","component":"swift","version":"0.1.0","name":"component-attributes","url":"/swift/current/component-attributes.html","titles":[]},"72":{"id":72,"text":"Pkl provides a rich integration with Swift. Our integration allows you to embed the Pkl runtime into your Swift program, and also provides code generation from Pkl source code. To get started, reference the Quickstart guide. @main class MyApp { static func main() async throws { let config = try await MyConfig.loadFrom(source: .path(\"config.pkl\")) print(\"I'm running on host \\(config.host)\") } }","title":"Integration with Swift","component":"swift","version":"0.1.0","name":"index","url":"/swift/current/index.html","titles":[]},"73":{"id":73,"text":"These steps will get you up and going with using Pkl and Swift. Add the pkl-swift library as a dependency to your project’s Package.swift: Package.swift let package = Package( dependencies: [ .package(url: \"https://github.com/pkl-lang/pkl-swift\", from: \"0.1.0\") ], targets: [ .executableTarget( name: \"my-application\", dependencies: [.product(name: \"PklSwift\", package: \"pkl-swift\")] ), ] ) Also, ensure that Pkl is installed on your machine: brew install pkl If running on Linux, you will need to use jpkl, and spawn your application with PKL_EXEC=jpkl, due to a current bug. You will also need Java to be installed on the machine. To be notified when this bug is resolved, CC TBD. Create a new Pkl file in the directory of your choice, to describe the schema of your configuration. In this example, the file is placed into pkl/AppConfig.pkl. pkl/AppConfig.pkl module AppConfig /// The hostname of this application. host: String /// The port to listen on. port: UInt16 With a schema defined, generate Swift source code for it. Code generation is done via the pkl-gen-swift CLI. To install, download it from Artifactory. On macOS: curl TODO_REPLACE_ME -o pkl-gen-swift chmod +x pkl-gen-swift The binary is published for macOS, and for Linux for aarch64 and amd64 architectures. macOS Universal Binary: TODO_REPLACE_ME linux/aarch64: TODO_REPLACE_ME linux/amd64: TODO_REPLACE_ME In our example, Swift sources can be generated using the following command: pkl-gen-swift pkl/AppConfig.pkl -o Sources/MyApplication/Generated/ This will create a file called AppConfig.pkl.swift inside the Sources/MyApplication/Generated directory. For more details on how to control code generation, consult pkl-gen-swift --help. With the above scaffolding set up, evaluate Pkl configuration data in Swift. First, define some configuration that uses the Pkl schema. In our example, we create a file at path pkl/local/appConfig.pkl. We imagine that we are defining configuration for a server running in a local environment, and would likewise place other environments in sibling directorys; e.g. pkl/int/appConfig.pkl and pkl/prod/appConfig.pkl. pkl/local/appConfig.pkl amends \"../AppConfig.pkl\" host = \"localhost\" port = 5939 Once defined, evaluate the Pkl module into Swift data. Sources/MyApplication/Main.swift func main() async throws { let config = try await AppConfig.loadFromPath(\"pkl/local/appConfig.pkl\") print(\"I'm running on host \\(config.host)\\n\") }","title":"Quickstart","component":"swift","version":"0.1.0","name":"quickstart","url":"/swift/current/quickstart.html","titles":[{"text":"1. Install dependencies","hash":"1-install-dependencies","id":1},{"text":"2. Define a Pkl schema","hash":"2-define-a-pkl-schema","id":2},{"text":"3. Generate Swift source code","hash":"codegen","id":3},{"text":"4. Evaluate Pkl configuration data in Swift","hash":"4-evaluate-pkl-configuration-data-in-swift","id":4}]},"74":{"id":74,"text":"","title":"","component":"ROOT","version":"","name":"index","url":"/index.html","titles":[]},"75":{"id":75,"text":"by the Pkl Team on We are delighted to announce the first release in open source of Pkl (pronounced Pickle), a programming language for producing configuration. When thinking about configuration, it is common to think of static languages like JSON, YAML, or Property Lists. While these languages have their own merits, they tend to fall short when configuration grows in complexity. For example, the amount of data they describe is linear to the amount of code that they contain. Additionally, it can be easy to make configuration errors, because these formats do not provide any validation of their own. To address these shortcomings, sometimes formats get enhanced by ancillary tools that add special logic. For example, maybe there’s a need to make code more DRY, so a special property is introduced that understands how to resolve references, and merge objects together. Alternatively, maybe there’s a need to guard against validation errors, so some new way is created to validate a configuration value against an expected type. Before long, these formats almost become programming languages, but ones that are hard to understand and hard to write. On the other end of the spectrum, a general-purpose language might be used instead. Languages like Kotlin, Ruby, or JavaScript become the basis for DSLs that generate configuration data. While these languages are tremendously powerful, they also can be painfully awkward to use for creating configuration. Features like mutability can be anti-features when thinking about configuration, because it makes it hard to reason about where data came from. Additionally, these DSLs tend to be tied to their own ecosystems. It is a hard sell to use a Kotlin DSL as the configuration layer for an application written in Go. We created Pkl because we think that configuration is best expressed as a blend between a static language and a general-purpose programming language. We want to take the best of both worlds; to provide a language that is declarative and simple to read and write, but enhanced with capabilities borrowed from general-purpose languages. When writing Pkl, you are able to use the language features you’d expect, like classes, functions, conditionals, and loops. You can build abstraction layers, and share code by creating packages and publishing them. Most importantly, you can use Pkl to solve many different types of configuration needs. It can be used to produce static configuration files in any format, or be embedded as a library into another application runtime. We designed Pkl with three overarching goals: To provide safety by catching validation errors before deployment. To scale from simple to complex use-cases. To be a joy to write, with our best-in-class IDE integrations. We created Pkl to have a familiar syntax to developers, and to be easy to learn. That is why we’ve included features like classes, functions, loops, and type annotations. For example, here is a Pkl file (module) that defines a configuration schema for an imaginary web application. This file defines types, and not data. This is a common pattern in Pkl, and we call this a template. Application.pkl module Application /// The hostname that this server responds to. hostname: String /// The port to listen on. port: UInt16 /// The environment to deploy to. environment: Enviornment /// The database connection for this application database: Database class Database { /// The username for this database. username: String /// The password for this database. password: String /// The remote host for this database. host: String /// The remote port for this database. port: Int /// The name of the database. dbName: String } typealias Enviornment = \"dev\"|\"qa\"|\"prod\" And here is how configuration data might be defined: localhost.pkl amends \"Application.pkl\" hostname = \"localhost\" port = 3599 environment = \"dev\" database { host = \"localhost\" port = 5786 username = \"admin\" password = read(\"env:DATABASE_PASSWORD\") (1) dbName = \"myapp\" } 1 Built-in read expression for reading external resources. It is easy to create variations of the same base data by amending. This uses a for generator to produce four objects, each of which amends a base object and adds additional data. multiple-applications.pkl import \"Application.pkl\" hidden app: Application = new { hostnames { \"localhost\" } environment = \"dev\" database { host = \"localhost\" port = 5786 username = \"admin\" password = read(\"env:DATABASE_PASSWORD\") dbName = \"myapp\" } } applications { for (offset in List(0, 1, 2, 3)) { (app) { port = 6000 + offset } } } Pkl programs can be easily rendered to common formats, like YAML: $ DATABASE_PASSWORD=hunter2 pkl eval --format yaml multiple-applications.pkl - hostname: localhost port: 6000 environment: dev database: username: admin password: hunter2 host: localhost port: 5786 dbName: myapp - hostname: localhost port: 6001 environment: dev database: username: admin password: hunter2 host: localhost port: 5786 dbName: myapp - hostname: localhost port: 6002 environment: dev database: username: admin password: hunter2 host: localhost port: 5786 dbName: myapp - hostname: localhost port: 6003 environment: dev database: username: admin password: hunter2 host: localhost port: 5786 dbName: myapp Configuration is about data. And data needs to be valid. In Pkl, validation is achieved using type annotations. And, type annotations can optionally have constraints defined on them. Here is an example, that constrains property age to be in between 0 and 130, and name to not be empty. Person.pkl module Person name: String(!isEmpty) age: Int(isBetween(0, 130)) A failing constraint causes an evaluation error. alessandra.pkl amends \"Person.pkl\" name = \"Alessandra\" age = -5 Evaluating this module fails: $ pkl eval alessandra.pkl –– Pkl Error –– Type constraint `isBetween(0, 130)` violated. Value: -5 5 | age: Int(isBetween(0, 130)) ^^^^^^^^^^^^^^^^^ at Person#age (file:///Person.pkl) 5 | age = -5 ^^ at alessandra#age (file:///alessandra.pkl) 106 | text = renderer.renderDocument(value) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ at pkl.base#Module.output.text (https://github.com/pkl-lang/pkl/blob/0.25.0/stdlib/base.pkl#L106) Constraints are arbitrary expressions. This allows you to author types that can express any type of check that can be expressed in Pkl. Here is a sample type that must be a string with an odd length, and whose first letter matches the last letter. name: String(length.isOdd, chars.first == chars.last) Pkl provides the ability to publish packages, and to import them as dependencies in a project. This provides an easy way to share Pkl code that can be used in other projects. It is easy to create your own package and publish them as GitHub releases, or to upload them anywhere you wish. Packages can be imported via the absolute URI: import \"package://pkg.pkl-lang.org/pkl-pantry/io.toml@1.0.0#/toml.pkl\" output { renderer = new toml.Renderer {} } Alternatively, they can be managed as dependencies of a project. Using a project means that Pkl will resolve version conflicts between different versions of the same dependency within the dependency graph. It also means that you can import packages by a simpler name. PklProject amends \"pkl:Project\" dependencies { [\"toml\"] { uri = \"package://pkg.pkl-lang.org/pkl-pantry/io.toml@1.0.0\" } } myconfig.pkl import \"@toml/toml.pkl\" output { renderer = new toml.Renderer {} } A set of packages are maintained by us, the Pkl team. These include: pkl-pantry — a monorepo that publishes many different packages. pkl-k8s — templates for defining Kubernetes descriptors. Pkl can produce textual output, and it can also be embedded as a library into other languages via our language bindings. When binding to a language, Pkl schema can be generated as classes/structs in the target language. For example, the Application.pkl example from above can be generated into Swift, Go, Java, and Kotlin. Pkl even includes documentation comments in the target language. Swift Go Java Kotlin import PklSwift public enum Application {} extension Application { public enum Enviornment: String, CaseIterable, Decodable, Hashable { case dev = \"dev\" case qa = \"qa\" case prod = \"prod\" } public struct Module: PklRegisteredType, Decodable, Hashable { public static var registeredIdentifier: String = \"Application\" /// The hostname that this server responds to. public var hostname: String /// The port to listen on. public var port: UInt16 /// The environment to deploy to. public var environment: Enviornment /// The database connection for this application public var database: Database public init(hostname: String, port: UInt16, environment: Enviornment, database: Database) { self.hostname = hostname self.port = port self.environment = environment self.database = database } } public struct Database: PklRegisteredType, Decodable, Hashable { public static var registeredIdentifier: String = \"Application#Database\" /// The username for this database. public var username: String /// The password for this database. public var password: String /// The remote host for this database. public var host: String /// The remote port for this database. public var port: Int /// The name of the database. public var dbName: String public init(username: String, password: String, host: String, port: Int, dbName: String) { self.username = username self.password = password self.host = host self.port = port self.dbName = dbName } } } Application.pkl.go type Employee struct { // The name of the employee. Name string `pkl:\"name\"` // The address of the employee. Address *Address `pkl:\"address\"` // The employee's badge ID. BadgeId int `pkl:\"badgeId\"` // The different phone numbers used by this employee. PhoneNumbers map[string]string `pkl:\"phoneNumbers\"` } Database.pkl.go // Code generated from Pkl module `Application`. DO NOT EDIT. package application type Database struct { // The username for this database. Username string `pkl:\"username\"` // The password for this database. Password string `pkl:\"password\"` // The remote host for this database. Host string `pkl:\"host\"` // The remote port for this database. Port int `pkl:\"port\"` // The name of the database. DbName string `pkl:\"dbName\"` } environment/Environment.pkl.go // Code generated from Pkl module `Application`. DO NOT EDIT. package enviornment import ( \"encoding\" \"fmt\" ) type Enviornment string const ( Dev Enviornment = \"dev\" Qa Enviornment = \"qa\" Prod Enviornment = \"prod\" ) // String returns the string representation of Enviornment func (rcv Enviornment) String() string { return string(rcv) } import java.lang.Object; import java.lang.Override; import java.lang.String; import java.lang.StringBuilder; import java.util.Objects; import org.pkl.config.java.mapper.Named; import org.pkl.config.java.mapper.NonNull; public final class Application { /** * The hostname that this server responds to. */ public final @NonNull String hostname; /** * The port to listen on. */ public final int port; /** * The environment to deploy to. */ public final @NonNull Enviornment environment; /** * The database connection for this application */ public final @NonNull Database database; public Application(@Named(\"hostname\") @NonNull String hostname, @Named(\"port\") int port, @Named(\"environment\") @NonNull Enviornment environment, @Named(\"database\") @NonNull Database database) { this.hostname = hostname; this.port = port; this.environment = environment; this.database = database; } public static final class Database { /** * The username for this database. */ public final @NonNull String username; /** * The password for this database. */ public final @NonNull String password; /** * The remote host for this database. */ public final @NonNull String host; /** * The remote port for this database. */ public final long port; /** * The name of the database. */ public final @NonNull String dbName; public Database(@Named(\"username\") @NonNull String username, @Named(\"password\") @NonNull String password, @Named(\"host\") @NonNull String host, @Named(\"port\") long port, @Named(\"dbName\") @NonNull String dbName) { this.username = username; this.password = password; this.host = host; this.port = port; this.dbName = dbName; } } public enum Enviornment { DEV(\"dev\"), QA(\"qa\"), PROD(\"prod\"); private String value; private Enviornment(String value) { this.value = value; } @Override public String toString() { return this.value; } } } import kotlin.Int import kotlin.Long import kotlin.String data class Application( /** * The hostname that this server responds to. */ val hostname: String, /** * The port to listen on. */ val port: Int, /** * The environment to deploy to. */ val environment: Enviornment, /** * The database connection for this application */ val database: Database ) { data class Database( /** * The username for this database. */ val username: String, /** * The password for this database. */ val password: String, /** * The remote host for this database. */ val host: String, /** * The remote port for this database. */ val port: Long, /** * The name of the database. */ val dbName: String ) enum class Enviornment( val value: String ) { DEV(\"dev\"), QA(\"qa\"), PROD(\"prod\"); override fun toString() = value } } Using code generation is just one of the many ways to embed Pkl within an application. Our language bindings provide evaluator APIs to control Pkl evaluation at a low level, and users are free to interact with Pkl at the abstraction level that makes the most sense for their application. We believe that a programming language is only as good as the experience of writing it. That is why we aim to provide best-in-class editor support. We want writing Pkl to be just as comfortable as writing in another modern language. Alongside Pkl, we are also releasing our IntelliJ plugin, which provides rich support for JetBrains editors, including IntelliJ, Webstorm, GoLand, and PyCharm. These plugins are able to analyze a Pkl program and provide features like autocompletion, go-to-definition, and refactoring support. Here are some gifs that demonstrate some of the features that are available. Autocompletion Navigation Validation In addition, we are also planning on supporting the Language Server Protocol, which will provide a similar level of integration in other editors. We are also releasing two other plugins: our VS Code plugin, and our neovim plugin. Today, these plugins only provide basic editing features like syntax highlighting and code folding. We hope you like what we’ve shown you so far. For a more in-depth guide, take a look at our tutorial. To learn more about the language itself, read through our language reference. To connect with us, feel free to submit a topic on GitHub Discussions. Additionally, feel free to browser our sample repositories to get an idea for what it’s like to use Pkl: https://github.com/apple/pkl-go-example https://github.com/apple/pkl-jvm-examples https://github.com/apple/pkl-k8s-examples https://github.com/apple/pkl-swift-example To try out Pkl locally, try downloading our CLI by following our installation guide. Additionally, try installing one of our various editor plugins to get a glimpse of what it’s like to write Pkl yourself. We’re so excited to share Pkl with you, and we are just getting started. We are looking forward to seeing what you might do with it!","title":"Introducing Pkl, a programming language for configuration","component":"blog","version":"","name":"2024-01-12-pkl-release","url":"/blog/2024-01-12-pkl-release.html","titles":[{"text":"A Quick Tour of Pkl","hash":"a-quick-tour-of-pkl","id":1},{"text":"Built-in Validation","hash":"built-in-validation","id":2},{"text":"Sharing Packages","hash":"sharing-packages","id":3},{"text":"Language Bindings","hash":"language-bindings","id":4},{"text":"Editor Support","hash":"editor-support","id":5},{"text":"Next Steps","hash":"next-steps","id":6}]},"76":{"id":76,"text":"by the Pkl Team on We are delighted to announce the first release in open source of Pkl (pronounced Pickle), a programming language for producing configuration.","title":"Pkl Blog","component":"blog","version":"","name":"index","url":"/blog/index.html","titles":[{"text":"Introducing Pkl, a programming language for configuration","hash":"introducing-pkl-a-programming-language-for-configuration","id":1}]}},"components":{},"componentVersions":{"main/0.25.0-dev":{"displayVersion":"0.25.0-dev","title":"Main Project","version":"0.25.0-dev","name":"main","prerelease":true,"asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/main/current/index.html","navigation":[{"items":[{"content":"Installation","url":"/main/current/pkl-cli/index.html#installation","urlType":"internal","hash":"#installation"},{"content":"Language Tutorial","url":"/main/current/language-tutorial/index.html","urlType":"internal","items":[{"content":"Basic Configuration","url":"/main/current/language-tutorial/01_basic_config.html","urlType":"internal"},{"content":"Filling out a Template","url":"/main/current/language-tutorial/02_filling_out_a_template.html","urlType":"internal"},{"content":"Writing a Template","url":"/main/current/language-tutorial/03_writing_a_template.html","urlType":"internal"}]},{"content":"Language Reference","url":"/main/current/language-reference/index.html","urlType":"internal"},{"content":"Introduction","url":"/main/current/introduction/index.html","urlType":"internal","items":[{"content":"Use Cases","url":"/main/current/introduction/use-cases.html","urlType":"internal"},{"content":"Concepts","url":"/main/current/introduction/concepts.html","urlType":"internal"},{"content":"Components","url":"/main/current/introduction/components.html","urlType":"internal"},{"content":"Comparison","url":"/main/current/introduction/comparison.html","urlType":"internal"}]},{"content":"Language","url":"/main/current/language.html","urlType":"internal","items":[{"content":"Language Tutorial","url":"/main/current/language-tutorial/index.html","urlType":"internal"},{"content":"Language Reference","url":"/main/current/language-reference/index.html","urlType":"internal"},{"content":"Standard Library","url":"/main/current/standard-library.html","urlType":"internal"}]},{"content":"Tools","url":"/main/current/tools.html","urlType":"internal","items":[{"content":"CLI","url":"/main/current/pkl-cli/index.html","urlType":"internal"},{"content":"Pkldoc","url":"/main/current/pkl-doc/index.html","urlType":"internal"},{"content":"Gradle Plugin","url":"/main/current/pkl-gradle/index.html","urlType":"internal"},{"content":"Editor support","items":[{"content":"IntelliJ","url":"/intellij/current/index.html","urlType":"internal"},{"content":"VSCode","url":"/vscode/current/index.html","urlType":"internal"},{"content":"Neovim","url":"/neovim/current/index.html","urlType":"internal"}]}]},{"content":"Language Bindings","url":"/main/current/language-bindings.html","urlType":"internal","items":[{"content":"Java","url":"/main/current/java-binding/index.html","urlType":"internal","items":[{"content":"Code Generator","url":"/main/current/java-binding/codegen.html","urlType":"internal"},{"content":"pkl-core Library","url":"/main/current/pkl-core/index.html","urlType":"internal"},{"content":"pkl-config-java Library","url":"/main/current/java-binding/pkl-config-java.html","urlType":"internal"}]},{"content":"Kotlin","url":"/main/current/kotlin-binding/index.html","urlType":"internal","items":[{"content":"Code Generator","url":"/main/current/kotlin-binding/codegen.html","urlType":"internal"},{"content":"pkl-config-kotlin Library","url":"/main/current/kotlin-binding/pkl-config-kotlin.html","urlType":"internal"}]},{"content":"Swift","url":"/swift/current/index.html","urlType":"internal"},{"content":"Go","url":"/go/current/index.html","urlType":"internal"}]},{"content":"Release Notes","url":"/main/current/release-notes/index.html","urlType":"internal","items":[{"content":"0.25 Release Notes","url":"/main/current/release-notes/0.25.html","urlType":"internal"},{"content":"Changelog","url":"/main/current/release-notes/changelog.html","urlType":"internal"}]}],"root":true,"order":0}]},"spring/0.14.0":{"displayVersion":"0.14.0","title":"Spring Boot Integration","version":"0.14.0","name":"spring","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/spring/current/index.html","navigation":[{"items":[{"content":"Installation","url":"/spring/current/installation.html","urlType":"internal"},{"content":"Changelog","url":"/spring/current/changelog.html","urlType":"internal"},{"content":"Usage","url":"/spring/current/usage.html","urlType":"internal"}],"root":true,"order":0}]},"intellij/0.25.8":{"displayVersion":"0.25.8","title":"IntelliJ Plugin","version":"0.25.8","name":"intellij","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/intellij/current/index.html","navigation":[{"items":[{"content":"Installation","url":"/intellij/current/installation.html","urlType":"internal"},{"content":"Highlights","url":"/intellij/current/highlights.html","urlType":"internal"},{"content":"Features","url":"/intellij/current/features/index.html","urlType":"internal","items":[{"content":"Syntax Highlighting","url":"/intellij/current/features/syntax-highlighting.html","urlType":"internal"},{"content":"Code Editing","url":"/intellij/current/features/code-editing.html","urlType":"internal"},{"content":"Code Folding","url":"/intellij/current/features/code-folding.html","urlType":"internal"},{"content":"Code Formatting","url":"/intellij/current/features/code-formatting.html","urlType":"internal"},{"content":"Code Navigation","url":"/intellij/current/features/code-navigation.html","urlType":"internal"},{"content":"Code Refactoring","url":"/intellij/current/features/code-refactoring.html","urlType":"internal"},{"content":"Code Validation","url":"/intellij/current/features/code-validation.html","urlType":"internal"},{"content":"Jump to Error","url":"/intellij/current/features/jump-to-error.html","urlType":"internal"}]}],"root":true,"order":0}]},"intellij/0.25.7":{"displayVersion":"0.25.7","title":"IntelliJ Plugin","version":"0.25.7","name":"intellij","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/intellij/0.25.7/index.html","navigation":[{"items":[{"content":"Installation","url":"/intellij/0.25.7/installation.html","urlType":"internal"},{"content":"Highlights","url":"/intellij/0.25.7/highlights.html","urlType":"internal"},{"content":"Features","url":"/intellij/0.25.7/features/index.html","urlType":"internal","items":[{"content":"Syntax Highlighting","url":"/intellij/0.25.7/features/syntax-highlighting.html","urlType":"internal"},{"content":"Code Editing","url":"/intellij/0.25.7/features/code-editing.html","urlType":"internal"},{"content":"Code Folding","url":"/intellij/0.25.7/features/code-folding.html","urlType":"internal"},{"content":"Code Formatting","url":"/intellij/0.25.7/features/code-formatting.html","urlType":"internal"},{"content":"Code Navigation","url":"/intellij/0.25.7/features/code-navigation.html","urlType":"internal"},{"content":"Code Refactoring","url":"/intellij/0.25.7/features/code-refactoring.html","urlType":"internal"},{"content":"Code Validation","url":"/intellij/0.25.7/features/code-validation.html","urlType":"internal"},{"content":"Jump to Error","url":"/intellij/0.25.7/features/jump-to-error.html","urlType":"internal"}]}],"root":true,"order":0}]},"vscode/0.11.0":{"displayVersion":"0.11.0","title":"VS Code Extension","version":"0.11.0","name":"vscode","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/vscode/current/index.html","navigation":[{"items":[{"content":"Installation","url":"/vscode/current/installation.html","urlType":"internal"},{"content":"Features","url":"/vscode/current/features/index.html","urlType":"internal","items":[{"content":"Syntax Highlighting","url":"/vscode/current/features/syntax-highlighting.html","urlType":"internal"},{"content":"Bracket Matching","url":"/vscode/current/features/bracket-matching.html","urlType":"internal"},{"content":"Code Snippets","url":"/vscode/current/features/code-snippets.html","urlType":"internal"}]}],"root":true,"order":0}]},"neovim/0.6.0":{"displayVersion":"0.6.0","title":"Neovim Plugin","version":"0.6.0","name":"neovim","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/neovim/current/index.html","navigation":[{"items":[{"content":"Installation","url":"/neovim/current/installation.html","urlType":"internal"},{"content":"Features","url":"/neovim/current/features/index.html","urlType":"internal","items":[{"content":"Syntax Highlighting","url":"/neovim/current/features/syntax-highlighting.html","urlType":"internal"},{"content":"Code Folding","url":"/neovim/current/features/code-folding.html","urlType":"internal"},{"content":"Code Snippets","url":"/neovim/current/features/code-snippets.html","urlType":"internal"}]},{"content":"Changelog","url":"/neovim/current/changelog.html","urlType":"internal"}],"root":true,"order":0}]},"go/0.5.0":{"displayVersion":"0.5.0","title":"Pkl Go Bindings","version":"0.5.0","name":"go","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@","version":"0.5.0"},"sourcemap":false,"extensions":[{},{}]},"url":"/go/current/index.html","navigation":[{"items":[{"content":"Quickstart","url":"/go/current/quickstart.html","urlType":"internal"},{"content":"Evaluator API","url":"/go/current/evaluation.html","urlType":"internal"},{"content":"Code Generation","url":"/go/current/codegen.html","urlType":"internal"},{"content":"Changelog","url":"/go/current/CHANGELOG.html","urlType":"internal"}],"root":true,"order":0}]},"swift/0.1.0":{"displayVersion":"0.1.0","title":"Pkl Swift Bindings","version":"0.1.0","name":"swift","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/swift/current/index.html","navigation":[{"items":[{"content":"Quickstart","url":"/swift/current/quickstart.html","urlType":"internal"},{"content":"Evaluator API","url":"/swift/current/evaluation.html","urlType":"internal"},{"content":"Code Generation","url":"/swift/current/codegen.html","urlType":"internal"},{"content":"Changelog","url":"/swift/current/CHANGELOG.html","urlType":"internal"}],"root":true,"order":0}]},"ROOT/":{"displayVersion":"default","title":"ROOT","version":"","name":"ROOT","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":"@"},"sourcemap":false,"extensions":[{},{}]},"url":"/index.html"},"blog/":{"displayVersion":"default","title":"Pkl Blog","version":"","name":"blog","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Pkl Docs","site-url":"https://pkl-lang.org","experimental":"","idprefix":"","idseparator":"-","sectlinks":"","linkattrs":"","pkl":"pkl","page-pagination":false},"sourcemap":false,"extensions":[{},{}]},"url":"/blog/index.html","navigation":[{"items":[{"content":"Introducing Pkl, a programming language for configuration","url":"/blog/2024-01-12-pkl-release.html","urlType":"internal"}],"root":true,"order":0}]}}}})